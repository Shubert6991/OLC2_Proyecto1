/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var analizador = (function(){
var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,14],$V1=[1,17],$V2=[1,15],$V3=[1,27],$V4=[1,19],$V5=[1,20],$V6=[1,21],$V7=[1,22],$V8=[1,23],$V9=[1,26],$Va=[1,24],$Vb=[1,25],$Vc=[5,15,16,22,37,75,78,84,85,86,92,95,96],$Vd=[2,21],$Ve=[5,15,16,22,37,40,75,78,82,83,84,85,86,89,90,91,92,95,96],$Vf=[1,45],$Vg=[1,49],$Vh=[1,50],$Vi=[1,58],$Vj=[1,86],$Vk=[1,85],$Vl=[1,87],$Vm=[1,88],$Vn=[1,90],$Vo=[1,91],$Vp=[1,94],$Vq=[1,95],$Vr=[1,96],$Vs=[1,97],$Vt=[1,98],$Vu=[1,107],$Vv=[1,115],$Vw=[1,133],$Vx=[1,134],$Vy=[1,135],$Vz=[1,136],$VA=[1,160],$VB=[1,159],$VC=[1,155],$VD=[1,156],$VE=[1,157],$VF=[1,158],$VG=[1,161],$VH=[2,21,43,48,68],$VI=[2,53],$VJ=[2,110],$VK=[1,169],$VL=[1,170],$VM=[1,171],$VN=[2,57],$VO=[1,178],$VP=[1,179],$VQ=[2,17,21,43,48,51,52,53,68],$VR=[1,187],$VS=[1,188],$VT=[1,189],$VU=[1,190],$VV=[1,191],$VW=[1,192],$VX=[2,17,21,43,45,46,48,51,52,53,57,58,59,60,61,62,63,64,65,66,68],$VY=[5,15,16,22,37,40,75,77,78,82,83,84,85,86,89,90,91,92,95,96],$VZ=[15,16,22,37,40,75,78,82,83,84,85,86,89,90,91,92,95,96],$V_=[1,269],$V$=[1,272],$V01=[2,17,19,21,38,48,68],$V11=[2,42],$V21=[2,43],$V31=[2,44],$V41=[2,17,19,21,38,46,48,68],$V51=[2,46],$V61=[2,43,48],$V71=[2,17,21,43,45,46,48,51,52,53,57,58,59,60,61,62,68],$V81=[2,19,21,43,48,68],$V91=[2,48,68],$Va1=[2,271],$Vb1=[1,387],$Vc1=[48,68],$Vd1=[2,17,21,43,45,46,48,51,52,53,57,58,59,60,61,62,63,64,66,68],$Ve1=[21,45,46,51,52,53,57,58,59,60,61,62,63,64,65,66],$Vf1=[40,82,83],$Vg1=[16,40],$Vh1=[2,16,27,28,29,30,40,44];
var parser = {trace: function trace () { },
yy: {},
symbols_: {"error":2,"S":3,"I":4,"EOF":5,"DECLARACION":6,"ASIGNACION":7,"IF":8,"SWITCH":9,"WHILE":10,"DOWHILE":11,"FOR":12,"FESP":13,"FUNCION":14,"tk_let":15,"tk_id":16,"tk_dospuntos":17,"TIPOV2":18,"tk_igual":19,"VALOR":20,"tk_puntoycoma":21,"tk_const":22,"TYPES":23,"tk_inc":24,"tk_dec":25,"TIPOV":26,"tk_string":27,"tk_number":28,"tk_boolean":29,"tk_void":30,"ARRAY":31,"ASIGTYPE":32,"VARRAY":33,"T":34,"VALARRAY":35,"VALFUNCION":36,"tk_type":37,"tk_llavea":38,"LTYPE":39,"tk_llavec":40,"LASIGTYPE":41,"tk_llaveca":42,"tk_llavecc":43,"tk_array":44,"tk_menor":45,"tk_mayor":46,"LVALARRAY":47,"tk_coma":48,"A":49,"L":50,"tk_ternario":51,"tk_and":52,"tk_or":53,"tk_not":54,"tk_t_boolean":55,"R":56,"tk_mayorigual":57,"tk_menorigual":58,"tk_igualdad":59,"tk_diferente":60,"tk_suma":61,"tk_resta":62,"tk_mult":63,"tk_div":64,"tk_exp":65,"tk_mod":66,"tk_pabierto":67,"tk_pcerrado":68,"tk_t_string":69,"tk_t_entero":70,"tk_t_decimal":71,"BSENTENCIAS":72,"SENTENCIAS":73,"ST":74,"tk_if":75,"ELSE":76,"tk_else":77,"tk_switch":78,"BSWITCH":79,"CASE":80,"DEFAULT":81,"tk_case":82,"tk_default":83,"tk_while":84,"tk_do":85,"tk_for":86,"tk_in":87,"tk_of":88,"tk_break":89,"tk_continue":90,"tk_return":91,"tk_fn":92,"PARFUNC":93,"LPAR":94,"tk_console":95,"tk_graficar":96,"tk_lenght":97,"tk_push":98,"tk_pop":99,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",15:"tk_let",16:"tk_id",17:"tk_dospuntos",19:"tk_igual",21:"tk_puntoycoma",22:"tk_const",24:"tk_inc",25:"tk_dec",27:"tk_string",28:"tk_number",29:"tk_boolean",30:"tk_void",37:"tk_type",38:"tk_llavea",40:"tk_llavec",42:"tk_llaveca",43:"tk_llavecc",44:"tk_array",45:"tk_menor",46:"tk_mayor",48:"tk_coma",51:"tk_ternario",52:"tk_and",53:"tk_or",54:"tk_not",55:"tk_t_boolean",57:"tk_mayorigual",58:"tk_menorigual",59:"tk_igualdad",60:"tk_diferente",61:"tk_suma",62:"tk_resta",63:"tk_mult",64:"tk_div",65:"tk_exp",66:"tk_mod",67:"tk_pabierto",68:"tk_pcerrado",69:"tk_t_string",70:"tk_t_entero",71:"tk_t_decimal",75:"tk_if",77:"tk_else",78:"tk_switch",82:"tk_case",83:"tk_default",84:"tk_while",85:"tk_do",86:"tk_for",87:"tk_in",88:"tk_of",89:"tk_break",90:"tk_continue",91:"tk_return",92:"tk_fn",95:"tk_console",96:"tk_graficar",97:"tk_lenght",98:"tk_push",99:"tk_pop"},
productions_: [0,[3,2],[3,1],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[6,7],[6,7],[6,7],[6,7],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,3],[6,3],[6,1],[6,3],[6,3],[6,3],[6,3],[6,2],[6,2],[6,2],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[18,1],[18,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,2],[20,2],[20,1],[23,6],[23,6],[39,5],[39,5],[39,4],[39,4],[32,3],[32,3],[41,5],[41,5],[41,4],[41,4],[31,3],[31,3],[31,3],[31,3],[31,4],[33,3],[47,3],[47,3],[47,1],[35,4],[35,4],[7,4],[7,4],[7,4],[7,4],[34,5],[34,1],[50,3],[50,3],[50,2],[50,1],[50,1],[56,3],[56,3],[56,3],[56,3],[56,3],[56,3],[56,1],[49,3],[49,3],[49,3],[49,3],[49,3],[49,3],[49,2],[49,3],[49,1],[49,1],[49,1],[49,1],[72,3],[72,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[8,6],[8,5],[8,5],[8,5],[8,3],[76,2],[76,2],[9,5],[9,5],[9,5],[9,3],[79,4],[79,3],[79,2],[79,3],[80,5],[80,5],[80,5],[80,5],[80,4],[80,4],[80,4],[80,4],[80,4],[80,4],[80,3],[80,3],[81,3],[81,3],[81,2],[10,5],[10,5],[10,5],[10,5],[10,3],[11,7],[11,7],[11,7],[11,7],[11,7],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,5],[12,3],[74,2],[74,2],[74,2],[74,2],[74,2],[74,2],[74,3],[74,3],[74,2],[14,7],[14,7],[14,7],[14,7],[14,7],[14,7],[14,8],[14,8],[14,8],[14,8],[14,8],[14,8],[93,5],[93,3],[93,1],[36,3],[36,4],[94,3],[94,1],[13,5],[13,5],[13,5],[13,5],[13,4],[13,4],[13,4],[13,4],[13,5],[13,5],[13,5],[13,5],[13,5],[13,6],[13,6],[13,6],[13,6],[13,6],[13,5],[13,5],[13,5],[13,5]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:

          var nodo = new Nodo("S","S",+yylineno+1,+_$[$0-1].first_column+1)
          nodo.addHijo($$[$0-1])
          var texto = ""
          if($$[$0-1].trad){
            texto = $$[$0-1].trad;
          }
          var trad = new Traduccion(nodo,texto,errores.getLista()); 
          errores.limpiar();
          return trad;
        
break;
case 2:

        var trad = new Traduccion(new Nodo("S","S",+yylineno+1,+_$[$0].first_column+1),"",errores.getLista()); 
        errores.limpiar();
        return trad;
      
break;
case 3: case 4:

                  var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
                  nodo.addHijo($$[$0-1]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-1].trad + $$[$0].trad;
                
break;
case 5: case 9:

          var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
          nodo.addHijo($$[$0-1]);
          nodo.addHijo($$[$0]);
          this.$ = nodo;
          this.$.trad = $$[$0-1].trad + $$[$0].trad;
        
break;
case 6: case 8: case 11:

              var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
              nodo.addHijo($$[$0-1]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-1].trad + $$[$0].trad;
            
break;
case 7: case 10:

            var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
            nodo.addHijo($$[$0-1]);
            nodo.addHijo($$[$0]);
            this.$ = nodo;
            this.$.trad = $$[$0-1].trad + $$[$0].trad;
          
break;
case 12: case 13: case 14: case 15: case 16: case 17: case 18: case 19: case 123: case 124: case 125: case 126: case 127: case 128: case 129: case 130: case 131:
 this.$ = $$[$0]; this.$.trad = $$[$0].trad; 
break;
case 20:

              this.$ = $$[$0];
              this.$.trad = $$[$0].trad; 
            
break;
case 21:

          console.error("Error sintactico: "+$$[$0]+" Desconocido Inicio");
          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> DECLARACION || ASIGNACION || IF || SWITCH || WHILE || DOWHILE || FOR || console.log || graficar_ts",+yylineno+1,+_$[$0].last_column+1)
          errores.addError(error);
          this.$ = new Nodo("","")
          this.$.trad = "";
        
break;
case 22:
 
                                                                            var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-6].first_column+1);
                                                                            var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                            nodo.addHijo(id);
                                                                            nodo.addHijo($$[$0-3]); //tipo
                                                                            nodo.addHijo($$[$0-1]); //valor
                                                                            this.$ = nodo;
                                                                            this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                          
break;
case 23:

                                                                    console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                                    var error = new Error("Sintactico","Encontrado: \""+$$[$0]+"\" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1)
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-6].first_column+1);
                                                                    var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                    nodo.addHijo(id);
                                                                    nodo.addHijo($$[$0-3]); //tipo
                                                                    nodo.addHijo($$[$0-1]); //valor
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                                  
break;
case 24:

                                                                              var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-6].first_column+1);
                                                                              var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                              nodo.addHijo(id);
                                                                              nodo.addHijo($$[$0-3]); //tipo
                                                                              nodo.addHijo($$[$0-1]); //valor
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                            
break;
case 25:

                                                                      console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                                      errores.addError(error);

                                                                      var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-6].first_column+1);
                                                                      var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                      nodo.addHijo(id);
                                                                      nodo.addHijo($$[$0-3]); //tipo
                                                                      nodo.addHijo($$[$0-1]); //valor
                                                                      this.$ = nodo;
                                                                      this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                                    
break;
case 26:

                                                        var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                        var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                        nodo.addHijo(id);
                                                        nodo.addHijo($$[$0-1]);
                                                        this.$ = nodo;
                                                        this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                      
break;
case 27:

                                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                errores.addError(error);

                                                var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                              
break;
case 28:

                                                          var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-4].first_column+1);
                                                          var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                          nodo.addHijo(id);
                                                          nodo.addHijo($$[$0-1]);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                        
break;
case 29:

                                                  console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                  errores.addError(error);

                                                  var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-4].first_column+1);
                                                  var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                  nodo.addHijo(id);
                                                  nodo.addHijo($$[$0-1]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                
break;
case 30:

                                                            var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                            var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                            nodo.addHijo(id);
                                                            nodo.addHijo($$[$0-1]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                          
break;
case 31:

                                                    console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                    errores.addError(error);

                                                    var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                    var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                    nodo.addHijo(id);
                                                    nodo.addHijo($$[$0-1]);
                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                  
break;
case 32:

                                        var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+" "+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 33:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+" "+$$[$0-1]+";\n";
                              
break;
case 34:

                    this.$ = $$[$0];
                    this.$.trad = $$[$0].trad;
                  
break;
case 35:

                                        var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-1].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 36:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+$$[$0-1]+";\n";
                              
break;
case 37:

                                        var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 38:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+$$[$0-1]+";\n";
                              
break;
case 39: case 41:

                          console.error("Error Sintactico: "+$$[$0]+" error de declaracion");
                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> incremento o decremento",+yylineno+1,+_$[$0].last_column+1);
                          errores.addError(error);

                          this.$ = new Nodo("","")
                          this.$.trad = "";
                        
break;
case 40:

                            console.error("Error Sintactico: "+$$[$0]+" error de declaracion");
                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> incremento o decremento",+yylineno+1,+_$[$0].last_column+1);
                            errores.addError(error);

                            this.$ = new Nodo("","")
                            this.$.trad = "";
                          
break;
case 42:

                  var nodo = new Nodo("TIPO","STRING",+yylineno+1,+_$[$0].first_column+1); 
                  this.$ = nodo;
                  this.$.trad = $$[$0]; 
                
break;
case 43:

                  var nodo = new Nodo("TIPO","NUMBER",+yylineno+1,+_$[$0].first_column+1); 
                  this.$ = nodo;
                  this.$.trad = $$[$0]; 
                
break;
case 44:

                    var nodo = new Nodo("TIPO","BOOLEAN",+yylineno+1,+_$[$0].first_column+1); 
                    this.$ = nodo;
                    this.$.trad = $$[$0]; 
                  
break;
case 45:

                var nodo = new Nodo("TIPO","VOID",+yylineno+1,+_$[$0].first_column+1); 
                this.$ = nodo;
                this.$.trad = $$[$0]; 
              
break;
case 46:

              var nodo = new Nodo("TIPO","ID",+yylineno+1,+_$[$0].first_column+1);
              var id = new Nodo("ID",$$[$0],+yylineno+1,+_$[$0].first_column+1);
              nodo.addHijo(id); 
              this.$ = nodo;
              this.$.trad = $$[$0]; 
            
break;
case 47:

              console.error("Error sintactico: "+$$[$0]+" error tipo");
              var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> un tipo de dato",+yylineno+1,+_$[$0].last_column+1);
              errores.addError(error);
              this.$ = new Nodo("","")
              this.$.trad = "";
            
break;
case 48: case 49:
 
              this.$ = $$[$0];
              this.$.trad = $$[$0].trad; 
            
break;
case 50:
 
                  this.$ = $$[$0];
                  this.$.trad = $$[$0].trad; 
                
break;
case 51:
 
                this.$ = $$[$0];
                this.$.trad = $$[$0].trad; 
              
break;
case 52:
 
          this.$ = $$[$0];
          this.$.trad = $$[$0].trad;
        
break;
case 53:
 
                  this.$ = $$[$0];
                  this.$.trad = $$[$0].trad;
                
break;
case 54:
 
                    this.$ = $$[$0];
                    this.$.trad = $$[$0].trad;
                  
break;
case 55:
 
                      var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-1].first_column+1);
                      var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1)
                      nodo.addHijo(id);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1] + $$[$0];
                    
break;
case 56:
 
                      var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-1].first_column+1);
                      var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1)
                      nodo.addHijo(id);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1] + $$[$0];
                    
break;
case 57:

              console.error("Error sintactico: "+$$[$0]+" error valor");
              var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> un valor o operacion",+yylineno+1,+_$[$0].last_column+1);
              errores.addError(error);
              this.$ = new Nodo("","")
              this.$.trad = "";
            
break;
case 58:

                                                              var nodo = new Nodo("DECLARACION","TYPE",+yylineno+1,+_$[$0-5].first_column+1);
                                                              var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-5].first_column+1);
                                                              nodo.addHijo(id);
                                                              nodo.addHijo($$[$0-2]); //lista
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-5] + " " + $$[$0-4] + $$[$0-3] + "\n" + $$[$0-2].trad + $$[$0-1] + $$[$0] + "\n";  
                                                            
break;
case 59:

                                                      console.error("Error sintantico: "+$$[$0]+" error types");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                      errores.addError(error);

                                                      var nodo = new Nodo("DECLARACION","TYPE",+yylineno+1,+_$[$0-5].first_column+1);
                                                      var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-5].first_column+1);
                                                      nodo.addHijo(id);
                                                      nodo.addHijo($$[$0-2]); //lista
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-5] + " " + $$[$0-4] + $$[$0-3] + "\n" + $$[$0-2].trad + $$[$0-1] + ";\n";
                                                    
break;
case 60:

                                                      var nodo = new Nodo("LISTATIPO","LISTATIPO",+yylineno+1,+_$[$0-4].first_column+1);
                                                      nodo.addHijo($$[$0-4]);
                                                      nodo.addHijo($$[$0-3]);
                                                      var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                                      nodo.addHijo(id);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4].trad + $$[$0-3].trad + $$[$0-2] + " " + $$[$0-1] + $$[$0] + "\n";
                                                    
break;
case 61:

                                                console.error("Error sintantico: "+$$[$0]+" error types");
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                errores.addError(error);
                                                
                                                var nodo = new Nodo("LISTATIPO","LISTATIPO",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-4]);
                                                nodo.addHijo($$[$0-3]);
                                                var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                                nodo.addHijo(id);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4].trad + $$[$0-3].trad + $$[$0-2] + " " + $$[$0-1] + ";\n";
                                              
break;
case 62:

                                                  var nodo = new Nodo("LISTATIPO","LISTATIPO",+yylineno+1,+_$[$0-3].first_column+1);
                                                  nodo.addHijo($$[$0-3]);
                                                  var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                                  nodo.addHijo(id);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-3].trad + $$[$0-2] + " " + $$[$0-1] + $$[$0] + "\n";
                                                
break;
case 63:

                                          console.error("Error sintantico: "+$$[$0]+" error types");
                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                          errores.addError(error);

                                          var nodo = new Nodo("LISTATIPO","LISTATIPO",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-3]);
                                          var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                          nodo.addHijo(id);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3].trad + $$[$0-2] + " " + $$[$0-1] + ";\n";
                                        
break;
case 64:

                                          var nodo = new Nodo("VALOR","ASIGNACION_TIPO",+yylineno+1,+_$[$0-2].first_column+1);
                                          nodo.addHijo($$[$0-1]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-2] + "\n" + $$[$0-1].trad + $$[$0];
                                        
break;
case 65:

                                      console.error("Error sintactico: "+$$[$0-1]+" error valor");
                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> una lista de valores",+yylineno+1,+_$[$0-1].last_column+1);
                                      errores.addError(error);

                                      var nodo = new Nodo("VALOR","ASIGNACION_TIPO",+yylineno+1,+_$[$0-2].first_column+1);
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2] + "\n" + $$[$0];
                                    
break;
case 66:

                                                              var nodo = new Nodo("LISTATYPE","LISTATYPE",+yylineno+1,+_$[$0-4].first_column+1);
                                                              var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                              nodo.addHijo($$[$0-4]);
                                                              nodo.addHijo(id);
                                                              nodo.addHijo($$[$0-1]);
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-4].trad + $$[$0-3] + $$[$0-2] + " " + $$[$0-1].trad + $$[$0] + "\n";
                                                            
break;
case 67:

                                                      console.error("Error sintactico: "+$$[$0]+" error valor");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                      errores.addError(error);

                                                      var nodo = new Nodo("LISTATYPE","LISTATYPE",+yylineno+1,+_$[$0-4].first_column+1);
                                                      var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                      nodo.addHijo($$[$0-4]);
                                                      nodo.addHijo(id);
                                                      nodo.addHijo($$[$0-1]);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4].trad + $$[$0-3] + $$[$0-2] + " " + $$[$0-1].trad +";\n";
                                                    
break;
case 68:

                                                    var nodo = new Nodo("LISTATYPE","LISTATYPE",+yylineno+1,+_$[$0-3].first_column+1);
                                                    var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                    nodo.addHijo(id);
                                                    nodo.addHijo($$[$0-1]);
                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-3] + $$[$0-2] + $$[$0-1].trad + $$[$0] + "\n";
                                                  
break;
case 69:

                                            console.error("Error sintactico: "+$$[$0]+" error valor");
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("LISTATYPE","LISTATYPE",+yylineno+1,+_$[$0-3].first_column+1);
                                            var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                            nodo.addHijo(id);
                                            nodo.addHijo($$[$0-1]);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-3] + $$[$0-2] + $$[$0-1].trad +";\n";
                                          
break;
case 70:

                                          var nodo = new Nodo("TIPO","ARRAY_STRING",+yylineno+1,+_$[$0-2].first_column+1);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                       
break;
case 71:

                                        var nodo = new Nodo("TIPO","ARRAY_NUMBER",+yylineno+1,+_$[$0-2].first_column+1);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                      
break;
case 72:

                                        var nodo = new Nodo("TIPO","ARRAY_BOOLEAN",+yylineno+1,+_$[$0-2].first_column+1);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                       
break;
case 73:

                                    var nodo = new Nodo("TIPO","ARRAY_ID",+yylineno+1,+_$[$0-2].first_column+1);
                                    var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                    nodo.addHijo(id)
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                  
break;
case 74:

                                          var nodo = new Nodo("TIPO","ARRAY_TIPO",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-1])
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                        
break;
case 75:

                                          var nodo = new Nodo("VALOR","ASIGNACION_ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                          var larray = $$[$0-1];
                                          nodo.addHijo(larray);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-2] + $$[$0-1].trad + $$[$0];
                                        
break;
case 76:

                                      var nodo = new Nodo("LISTA_ARRAY","LISTA_ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                      nodo.addHijo($$[$0-2]);
                                      nodo.addHijo($$[$0]);
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2].trad + $$[$0-1] + " " + $$[$0].trad;
                                   
break;
case 77:

                                  console.error("Error sintactico: "+$$[$0-1]+" error valor");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> ,",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  var nodo = new Nodo("LISTA_ARRAY","LISTA_ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                  nodo.addHijo($$[$0-2]);
                                  nodo.addHijo($$[$0]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2].trad + ", " + $$[$0].trad;
                                
break;
case 78:

                  this.$ = $$[$0];
                  this.$.trad = $$[$0].trad;
                
break;
case 79:

                                          var nodo = new Nodo("VALOR","ARRAY_ITEM",+yylineno+1,+_$[$0-3].first_column+1);
                                          var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo(id);
                                          nodo.addHijo($$[$0-1]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3] + $$[$0-2] + $$[$0-1].trad + $$[$0];
                                        
break;
case 80:

                                              console.error("Error sintactico: "+$$[$0-2]+" error valor");
                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Operacion aritmetica || primitivo",+yylineno+1,+_$[$0-2].last_column+1);
                                              errores.addError(error);

                                              var nodo = new Nodo("VALOR","ARRAY_ITEM",+yylineno+1,+_$[$0-3].first_column+1);
                                              var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                              nodo.addHijo(id);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-3] + $$[$0-2] + " " + $$[$0];
                                            
break;
case 81:
 
                                                var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-3].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo($$[$0-3]);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = $$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                              
break;
case 82:

                                        console.log("Error Sintactico "+$$[$0]+"Error falto punto y coma");
                                        var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                        errores.addError(error);

                                        var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-3].first_column+1);
                                        var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                        nodo.addHijo($$[$0-3]);
                                        nodo.addHijo($$[$0-1]);
                                        this.$ = $$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                      
break;
case 83:

                                                    var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-3].first_column+1);
                                                    nodo.addHijo($$[$0-3]);
                                                    nodo.addHijo($$[$0-1]);
                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                  
break;
case 84:

                                            console.log("Error Sintactico "+$$[$0]+"Error falto punto y coma");
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-3].first_column+1);
                                            nodo.addHijo($$[$0-3]);
                                            nodo.addHijo($$[$0-1]);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                          
break;
case 85:

                                    var nodo = new Nodo("T","T",+yylineno+1,+_$[$0-4].first_column+1);
                                    nodo.addHijo($$[$0-4]);
                                    nodo.addHijo($$[$0-2]);
                                    nodo.addHijo($$[$0]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-4].trad + " " + $$[$0-3] + " " + $$[$0-2].trad +$$[$0-1]+$$[$0].trad;
                                  
break;
case 86:
 
      this.$ = $$[$0]; 
      this.$.trad = $$[$0].trad; 
    
break;
case 87:

                var nodo = new Nodo("L","AND",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 88:

              var nodo = new Nodo("L","OR",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 89:

              var nodo = new Nodo("L","NOT",+yylineno+1,+_$[$0-1].first_column+1);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-1] + " " + $$[$0].trad;
            
break;
case 90:

                  var nodo = new Nodo("BOOLEAN",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                  this.$ = nodo;
                  this.$.trad = $$[$0]
                
break;
case 91:

       this.$=$$[$0];
       this.$.trad = $$[$0].trad;
     
break;
case 92:

                  var nodo = new Nodo("R","MAYOR",+yylineno+1,+_$[$0-2].first_column+1);
                  nodo.addHijo($$[$0-2]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                
break;
case 93:

                  var nodo = new Nodo("R","MENOR",+yylineno+1,+_$[$0-2].first_column+1);
                  nodo.addHijo($$[$0-2]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                
break;
case 94:

                      var nodo = new Nodo("R","MAYORIGUAL",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 95:

                      var nodo = new Nodo("R","MENORIGUAL",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 96:

                      var nodo = new Nodo("R","IGUALDAD",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                   
break;
case 97:

                      var nodo = new Nodo("R","DESIGUALDAD",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 98:

      this.$ = $$[$0];
      this.$.trad = $$[$0].trad;
    
break;
case 99:

                var nodo = new Nodo("A","SUMA",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 100:

                var nodo = new Nodo("A","RESTA",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 101:

                var nodo = new Nodo("A","MULTI",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 102:

              var nodo = new Nodo("A","DIV",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 103:

              var nodo = new Nodo("A","EXP",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 104:

              var nodo = new Nodo("A","MOD",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 105:

                var nodo = new Nodo("NEGATIVO","NEGATIVO",+yylineno+1,+_$[$0-1].first_column+1);
                nodo.addHijo($$[$0])
                this.$ = nodo;
                this.$.trad = $$[$0-1] + $$[$0].trad;
             
break;
case 106:

                              this.$ = $$[$0-1];
                              this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+" "+$$[$0];
                           
break;
case 107:

                var nodo = new Nodo("STRING",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = "\""+$$[$0]+"\"";
              
break;
case 108:

                var nodo = new Nodo("ENTERO",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = $$[$0];
              
break;
case 109:

                var nodo = new Nodo("DECIMAL",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = $$[$0];
              
break;
case 110:

          var nodo = new Nodo("ID",$$[$0],+yylineno+1,+_$[$0].first_column+1);
          this.$ = nodo;
          this.$.trad = $$[$0];
        
break;
case 111:

                                              //console.log("BSENTENCIAS-----------------")
                                              //var s =  eval('$$');
                                              //console.log(s)
                                              this.$ = $$[$0-1];
                                              if($$[$0-1].func){
                                                this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n"+$$[$0-1].func;
                                              } else {
                                                this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n";
                                              }
                                            
break;
case 112:

                                  //console.log("BSENTENCIAS-----------------")
                                  //var s =  eval('$$');
                                  //console.log(s)
                                  this.$ = new Nodo("","");
                                  this.$.trad = $$[$0-1]+$$[$0]+"\n";
                                
break;
case 113:

                                      var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                      nodo.addHijo($$[$0-1]);
                                      nodo.addHijo($$[$0]);
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-1].trad + $$[$0].trad;
                                   
break;
case 114:

                                    var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                    nodo.addHijo($$[$0-1]);
                                    nodo.addHijo($$[$0]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-1].trad + $$[$0].trad;
                                  
break;
case 115: case 119:

                            var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                            nodo.addHijo($$[$0-1]);
                            nodo.addHijo($$[$0]);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1].trad + $$[$0].trad;
                          
break;
case 116: case 118:

                                var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo($$[$0-1]);
                                nodo.addHijo($$[$0]);
                                this.$ = nodo;
                                this.$.trad = $$[$0-1].trad + $$[$0].trad;
                              
break;
case 117:

                              var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              nodo.addHijo($$[$0]);
                              this.$ = nodo;
                              this.$.trad = $$[$0-1].trad + $$[$0].trad;
                            
break;
case 120:
  
                            var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                            nodo.addHijo($$[$0-1]);
                            nodo.addHijo($$[$0]);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1].trad + $$[$0].trad;
                          
break;
case 121:
  
                              var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              nodo.addHijo($$[$0]);
                              this.$ = nodo;
                              this.$.trad = $$[$0-1].trad + $$[$0].trad;
                            
break;
case 122:
  
                                var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo($$[$0-1]);
                                nodo.addHijo($$[$0]);
                                this.$ = nodo;
                                this.$.trad = $$[$0-1].trad;
                                this.$.func = $$[$0].trad;
                              
break;
case 132:
 
                     this.$ = $$[$0]; 
                     this.$.trad = ""; 
                     this.$.func = $$[$0].func;
                    
break;
case 133:

                    console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> DECLARACION||ASIGNACION||IF||SWITCH||WHILE||DO WHILE||SENTENCIAS DE TRANSFARENCIA||console.log()||graficar_ts()",+yylineno+1,+_$[$0].last_column+1);
                    errores.addError(error);
                    this.$ = new Nodo("","");
                    this.$.trad = "";
                  
break;
case 134:

                                                      var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-5].first_column+1);
                                                      nodo.addHijo($$[$0-3]); //condicion
                                                      nodo.addHijo($$[$0-1]); //sentencias
                                                      nodo.addHijo($$[$0]); //else
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3].trad+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                    
break;
case 135:

                                                  var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                                  nodo.addHijo($$[$0-2]); //condicion
                                                  nodo.addHijo($$[$0]); //sentencias
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                
break;
case 136:

                                            console.error("Error Sintactico: "+$$[$0-3]+" Error parametros en if")
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                            nodo.addHijo($$[$0-2]); //condicion
                                            nodo.addHijo($$[$0]); //sentencias
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-4]+"("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                          
break;
case 137:

                                            console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en if")
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                            nodo.addHijo($$[$0-2]); //condicion
                                            nodo.addHijo($$[$0]); //sentencias
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                          
break;
case 138:

                              console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en if")
                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Condicion en if",+yylineno+1,+_$[$0-1].last_column+1);
                              errores.addError(error);

                              this.$ = new Nodo("","");
                              this.$.trad = "";
                            
break;
case 139:

                            var nodo = new Nodo("ELSE","ELSE",+yylineno+1,+_$[$0-1].first_column+1)
                            nodo.addHijo($$[$0]);

                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                          
break;
case 140:

                  var nodo = new Nodo("ELSE","ELSE",+yylineno+1,+_$[$0-1].first_column+1)
                  nodo.addHijo($$[$0]);

                  this.$ = nodo;
                  this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                
break;
case 141:

                                                      var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                      nodo.addHijo($$[$0-2]);
                                                      nodo.addHijo($$[$0]);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                    
break;
case 142:

                                                console.error("Error Sintactico: "+$$[$0-3]+" Error parametros en switch")
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                errores.addError(error);

                                                var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" ("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                              
break;
case 143:

                                                console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en switch")
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                errores.addError(error);

                                                var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                              
break;
case 144:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en switch")
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> condicion del switch",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  this.$ = new Nodo("","");
                                  this.$.trad = "";
                                
break;
case 145:

                                            var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-3].first_column+1);
                                            nodo.addHijo($$[$0-2]);
                                            nodo.addHijo($$[$0-1]);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-3]+"\n"+$$[$0-2].trad+$$[$0-1].trad+$$[$0]+"\n";
                                          
break;
case 146:

                                  var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-2].first_column+1);
                                  nodo.addHijo($$[$0-1]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n";
                                
break;
case 147:

                            var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-1].first_column+1);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+"\n"+$$[$0]+"\n";
                          
break;
case 148:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> CASE o DEFAULT",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-2].first_column+1);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2]+"\n"+$$[$0]+"\n";
                                
break;
case 149:

                                              var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-4].first_column+1);
                                              nodo.addHijo($$[$0-4]);
                                              nodo.addHijo($$[$0-2]);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-4].trad+$$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+"\n"+$$[$0].trad;
                                            
break;
case 150:

                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                                  errores.addError(error);

                                                  this.$ = $$[$0-4];
                                                  this.$.trad = $$[$0-4].trad;
                                                
break;
case 151:

                                                var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-4]);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4].trad+$$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                              
break;
case 152:

                                                    console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                                    errores.addError(error);

                                                    this.$ = $$[$0-4];
                                                    this.$.trad = $$[$0-4].trad;
                                                 
break;
case 153:

                                    var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                    nodo.addHijo($$[$0-3]);
                                    nodo.addHijo($$[$0-1]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-3].trad+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                  
break;
case 154:

                                        console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-1].last_column+1);
                                        errores.addError(error);

                                        this.$ = $$[$0-3];
                                        this.$.trad = $$[$0-3].trad;
                                      
break;
case 155:

                                          var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-2]);
                                          nodo.addHijo($$[$0]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+"\n"+$$[$0].trad;
                                        
break;
case 156: case 158:

                                              console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                              errores.addError(error);

                                              this.$ = new Nodo("","");
                                              this.$.trad = "";
                                            
break;
case 157:

                                          var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-2]);
                                          nodo.addHijo($$[$0]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                        
break;
case 159:

                              var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-2].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              this.$ = nodo;
                              this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                            
break;
case 160:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  this.$ = new Nodo("","");
                                  this.$.trad = "";
                                
break;
case 161:

                                              var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-2].last_column+1);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-2]+$$[$0-1]+"\n"+$$[$0].trad;
                                            
break;
case 162:

                                              var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-2].last_column+1);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0].trad;
                                            
break;
case 163:

                                  var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-1].last_column+1);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-1]+$$[$0]+"\n";
                                
break;
case 164:

                                                        var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                        nodo.addHijo($$[$0-2]);
                                                        nodo.addHijo($$[$0]);
                                                        this.$ = nodo;
                                                        this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                      
break;
case 165:

                                                  console.error("Error Sintactico: "+$$[$0-3]+" Error en While");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo($$[$0-2]);
                                                  nodo.addHijo($$[$0]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+"("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                
break;
case 166:

                                                            console.error("Error Sintactico: "+$$[$0-2]+" Error en While");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> (",+yylineno+1,+_$[$0-2].last_column+1);
                                                            errores.addError(error);

                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 167:

                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en While");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> (",+yylineno+1,+_$[$0-1].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo($$[$0-2]);
                                                  nodo.addHijo($$[$0]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                                
break;
case 168:

                                    console.error("Error Sintactico: "+$$[$0]+" Error en While");
                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Parametros While",+yylineno+1,+_$[$0].last_column+1);
                                    errores.addError(error);

                                    this.$ = new Nodo("","");
                                    this.$.trad = "";
                                  
break;
case 169:

                                                                              var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                              nodo.addHijo($$[$0-5]);
                                                                              nodo.addHijo($$[$0-2]);
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                            
break;
case 170:

                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                        nodo.addHijo($$[$0-5]);
                                                                        nodo.addHijo($$[$0-2]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5].trad+"("+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                      
break;
case 171:

                                                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error en do While");
                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametros do While",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                  errores.addError(error);
                                                                                  
                                                                                  this.$ = new Nodo("","");
                                                                                  this.$.trad = "";
                                                                                
break;
case 172:

                                                                        console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                        nodo.addHijo($$[$0-5]);
                                                                        nodo.addHijo($$[$0-2]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0]+"\n";
                                                                      
break;
case 173:

                                                                      console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                                      errores.addError(error);

                                                                      var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                      nodo.addHijo($$[$0-5]);
                                                                      nodo.addHijo($$[$0-2]);
                                                                      this.$ = nodo;
                                                                      this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                                    
break;
case 174:

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        inc.addHijo(id2);
                                                                                                                        nodo.addHijo(id1);
                                                                                                                        nodo.addHijo($$[$0-7]);
                                                                                                                        nodo.addHijo($$[$0-5]);
                                                                                                                        nodo.addHijo(inc);
                                                                                                                        nodo.addHijo($$[$0]);
                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 175:
  
                                                                                                                  console.error("Error Sintactico: "+$$[$0-11]+" Error en for");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-11]+" Se esperaba -> (",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  inc.addHijo(id2);
                                                                                                                  nodo.addHijo(id1);
                                                                                                                  nodo.addHijo($$[$0-7]);
                                                                                                                  nodo.addHijo($$[$0-5]);
                                                                                                                  nodo.addHijo(inc);
                                                                                                                  nodo.addHijo($$[$0]);
                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+"("+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 176:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-10]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> let",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      inc.addHijo(id2);
                                                                                                                      nodo.addHijo(id1);
                                                                                                                      nodo.addHijo($$[$0-7]);
                                                                                                                      nodo.addHijo($$[$0-5]);
                                                                                                                      nodo.addHijo(inc);
                                                                                                                      nodo.addHijo($$[$0]);
                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+"let"+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;    
                                                                                                                    
break;
case 177: case 189:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-9]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-9]+" Se esperaba -> id",+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        this.$ = new Nodo("","");
                                                                                                                        this.$.trad = "";
                                                                                                                      
break;
case 178:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-8]+" Error en do While");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                    var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                    var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                    var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                    inc.addHijo(id2);
                                                                                                                    nodo.addHijo(id1);
                                                                                                                    nodo.addHijo($$[$0-7]);
                                                                                                                    nodo.addHijo($$[$0-5]);
                                                                                                                    nodo.addHijo(inc);
                                                                                                                    nodo.addHijo($$[$0]);
                                                                                                                    this.$ = nodo;
                                                                                                                    this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                  
break;
case 179:

                                                                                                                console.error("Error Sintactico: "+$$[$0-6]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                inc.addHijo(id2);
                                                                                                                nodo.addHijo(id1);
                                                                                                                nodo.addHijo($$[$0-7]);
                                                                                                                nodo.addHijo($$[$0-5]);
                                                                                                                nodo.addHijo(inc);
                                                                                                                nodo.addHijo($$[$0]);
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 180: case 192:

                                                                                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en do While");
                                                                                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> Condicion For",+yylineno+1,+_$[$0-5].last_column+1);
                                                                                                                            errores.addError(error);

                                                                                                                            this.$ = new Nodo("","");
                                                                                                                            this.$.trad = "";
                                                                                                                          
break;
case 181:

                                                                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                inc.addHijo(id2);
                                                                                                                nodo.addHijo(id1);
                                                                                                                nodo.addHijo($$[$0-7]);
                                                                                                                nodo.addHijo($$[$0-5]);
                                                                                                                nodo.addHijo(inc);
                                                                                                                nodo.addHijo($$[$0]);
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 182:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        inc.addHijo(id2);
                                                                                                                        nodo.addHijo(id1);
                                                                                                                        nodo.addHijo($$[$0-7]);
                                                                                                                        nodo.addHijo($$[$0-5]);
                                                                                                                        nodo.addHijo(inc);
                                                                                                                        nodo.addHijo($$[$0]);
                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 183:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-2]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ++||--",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      inc.addHijo(id2);
                                                                                                                      nodo.addHijo(id1);
                                                                                                                      nodo.addHijo($$[$0-7]);
                                                                                                                      nodo.addHijo($$[$0-5]);
                                                                                                                      nodo.addHijo(inc);
                                                                                                                      nodo.addHijo($$[$0]);
                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+"++"+$$[$0-1]+$$[$0].trad;
                                                                                                                    
break;
case 184:

                                                                                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  inc.addHijo(id2);
                                                                                                                  nodo.addHijo(id1);
                                                                                                                  nodo.addHijo($$[$0-7]);
                                                                                                                  nodo.addHijo($$[$0-5]);
                                                                                                                  nodo.addHijo(inc);
                                                                                                                  nodo.addHijo($$[$0]);
                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 185:

                                                                                                                  console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> SENTENCIAS",+yylineno+1,+_$[$0].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  inc.addHijo(id2);
                                                                                                                  nodo.addHijo(id1);
                                                                                                                  nodo.addHijo($$[$0-7]);
                                                                                                                  nodo.addHijo($$[$0-5]);
                                                                                                                  nodo.addHijo(inc);
                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                                
break;
case 186:

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        inc.addHijo(id2);
                                                                                                                        nodo.addHijo(id1);
                                                                                                                        nodo.addHijo($$[$0-7]);
                                                                                                                        nodo.addHijo($$[$0-5]);
                                                                                                                        nodo.addHijo(inc);
                                                                                                                        nodo.addHijo($$[$0]);
                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 187:
  
                                                                                                                  console.error("Error Sintactico: "+$$[$0-11]+" Error en for");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-11]+" Se esperaba -> (",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  inc.addHijo(id2);
                                                                                                                  nodo.addHijo(id1);
                                                                                                                  nodo.addHijo($$[$0-7]);
                                                                                                                  nodo.addHijo($$[$0-5]);
                                                                                                                  nodo.addHijo(inc);
                                                                                                                  nodo.addHijo($$[$0]);
                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+"("+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 188:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-10]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> let",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      inc.addHijo(id2);
                                                                                                                      nodo.addHijo(id1);
                                                                                                                      nodo.addHijo($$[$0-7]);
                                                                                                                      nodo.addHijo($$[$0-5]);
                                                                                                                      nodo.addHijo(inc);
                                                                                                                      nodo.addHijo($$[$0]);
                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+"let"+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;    
                                                                                                                    
break;
case 190:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-8]+" Error en do While");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                    var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                    var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                    var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                    inc.addHijo(id2);
                                                                                                                    nodo.addHijo(id1);
                                                                                                                    nodo.addHijo($$[$0-7]);
                                                                                                                    nodo.addHijo($$[$0-5]);
                                                                                                                    nodo.addHijo(inc);
                                                                                                                    nodo.addHijo($$[$0]);
                                                                                                                    this.$ = nodo;
                                                                                                                    this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                  
break;
case 191:

                                                                                                                console.error("Error Sintactico: "+$$[$0-6]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                inc.addHijo(id2);
                                                                                                                nodo.addHijo(id1);
                                                                                                                nodo.addHijo($$[$0-7]);
                                                                                                                nodo.addHijo($$[$0-5]);
                                                                                                                nodo.addHijo(inc);
                                                                                                                nodo.addHijo($$[$0]);
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 193:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-4]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        inc.addHijo(id2);
                                                                                                                        nodo.addHijo(id1);
                                                                                                                        nodo.addHijo($$[$0-7]);
                                                                                                                        nodo.addHijo($$[$0-5]);
                                                                                                                        nodo.addHijo(inc);
                                                                                                                        nodo.addHijo($$[$0]);
                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 194:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        inc.addHijo(id2);
                                                                                                                        nodo.addHijo(id1);
                                                                                                                        nodo.addHijo($$[$0-7]);
                                                                                                                        nodo.addHijo($$[$0-5]);
                                                                                                                        nodo.addHijo(inc);
                                                                                                                        nodo.addHijo($$[$0]);
                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 195:

                                                                                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  inc.addHijo(id2);
                                                                                                                  nodo.addHijo(id1);
                                                                                                                  nodo.addHijo($$[$0-7]);
                                                                                                                  nodo.addHijo($$[$0-5]);
                                                                                                                  nodo.addHijo(inc);
                                                                                                                  nodo.addHijo($$[$0]);
                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 196:

                                                                                                                  console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> SENTENCIAS",+yylineno+1,+_$[$0].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  inc.addHijo(id2);
                                                                                                                  nodo.addHijo(id1);
                                                                                                                  nodo.addHijo($$[$0-7]);
                                                                                                                  nodo.addHijo($$[$0-5]);
                                                                                                                  nodo.addHijo(inc);
                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                                
break;
case 197:

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);
                                                                                                                nodo.addHijo(id1);
                                                                                                                nodo.addHijo($$[$0-7]);
                                                                                                                nodo.addHijo($$[$0-5]);
                                                                                                                nodo.addHijo(inc);
                                                                                                                nodo.addHijo($$[$0]);
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 198:

                                                                                                          console.error("Error Sintactico: "+$$[$0-10]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> (",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);
                                                                                                          nodo.addHijo(id1);
                                                                                                          nodo.addHijo($$[$0-7]);
                                                                                                          nodo.addHijo($$[$0-5]);
                                                                                                          nodo.addHijo(inc);
                                                                                                          nodo.addHijo($$[$0]);
                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+"("+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                        
break;
case 199: case 210:

                                                                                                                console.error("Error Sintactico: "+$$[$0-9]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-9]+" Se esperaba -> id",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                this.$ = new Nodo("","");
                                                                                                                this.$.trad = "";
                                                                                                              
break;
case 200:

                                                                                                              console.error("Error Sintactico: "+$$[$0-8]+" Error en for");
                                                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                              errores.addError(error);

                                                                                                              var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                              var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                              var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                              var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                              inc.addHijo(id2);
                                                                                                              nodo.addHijo(id1);
                                                                                                              nodo.addHijo($$[$0-7]);
                                                                                                              nodo.addHijo($$[$0-5]);
                                                                                                              nodo.addHijo(inc);
                                                                                                              nodo.addHijo($$[$0]);
                                                                                                              this.$ = nodo;
                                                                                                              this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                            
break;
case 201:

                                                                                                        console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);
                                                                                                        nodo.addHijo(id1);
                                                                                                        nodo.addHijo($$[$0-7]);
                                                                                                        nodo.addHijo($$[$0-5]);
                                                                                                        nodo.addHijo(inc);
                                                                                                        nodo.addHijo($$[$0]);
                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 202: case 213:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> condicion for",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    this.$ = new Nodo("","");
                                                                                                                    this.$.trad = "";
                                                                                                                  
break;
case 203:

                                                                                                        console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);
                                                                                                        nodo.addHijo(id1);
                                                                                                        nodo.addHijo($$[$0-7]);
                                                                                                        nodo.addHijo($$[$0-5]);
                                                                                                        nodo.addHijo(inc);
                                                                                                        nodo.addHijo($$[$0]);
                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 204:

                                                                                                                console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);
                                                                                                                nodo.addHijo(id1);
                                                                                                                nodo.addHijo($$[$0-7]);
                                                                                                                nodo.addHijo($$[$0-5]);
                                                                                                                nodo.addHijo(inc);
                                                                                                                nodo.addHijo($$[$0]);
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 205:
  
                                                                                                                console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ++||--",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);
                                                                                                                nodo.addHijo(id1);
                                                                                                                nodo.addHijo($$[$0-7]);
                                                                                                                nodo.addHijo($$[$0-5]);
                                                                                                                nodo.addHijo(inc);
                                                                                                                nodo.addHijo($$[$0]);
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+"++"+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 206:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);
                                                                                                          nodo.addHijo(id1);
                                                                                                          nodo.addHijo($$[$0-7]);
                                                                                                          nodo.addHijo($$[$0-5]);
                                                                                                          nodo.addHijo(inc);
                                                                                                          nodo.addHijo($$[$0]);
                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+")"+$$[$0].trad;
                                                                                                        
break;
case 207:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);
                                                                                                          nodo.addHijo(id1);
                                                                                                          nodo.addHijo($$[$0-7]);
                                                                                                          nodo.addHijo($$[$0-5]);
                                                                                                          nodo.addHijo(inc);
                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                        
break;
case 208:

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);
                                                                                                                nodo.addHijo(id1);
                                                                                                                nodo.addHijo($$[$0-7]);
                                                                                                                nodo.addHijo($$[$0-5]);
                                                                                                                nodo.addHijo(inc);
                                                                                                                nodo.addHijo($$[$0]);
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 209:

                                                                                                          console.error("Error Sintactico: "+$$[$0-10]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> (",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);
                                                                                                          nodo.addHijo(id1);
                                                                                                          nodo.addHijo($$[$0-7]);
                                                                                                          nodo.addHijo($$[$0-5]);
                                                                                                          nodo.addHijo(inc);
                                                                                                          nodo.addHijo($$[$0]);
                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+"("+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                        
break;
case 211:

                                                                                                              console.error("Error Sintactico: "+$$[$0-8]+" Error en for");
                                                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                              errores.addError(error);

                                                                                                              var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                              var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                              var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                              var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                              inc.addHijo(id2);
                                                                                                              nodo.addHijo(id1);
                                                                                                              nodo.addHijo($$[$0-7]);
                                                                                                              nodo.addHijo($$[$0-5]);
                                                                                                              nodo.addHijo(inc);
                                                                                                              nodo.addHijo($$[$0]);
                                                                                                              this.$ = nodo;
                                                                                                              this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                            
break;
case 212:

                                                                                                        console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);
                                                                                                        nodo.addHijo(id1);
                                                                                                        nodo.addHijo($$[$0-7]);
                                                                                                        nodo.addHijo($$[$0-5]);
                                                                                                        nodo.addHijo(inc);
                                                                                                        nodo.addHijo($$[$0]);
                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 214:

                                                                                                        console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);
                                                                                                        nodo.addHijo(id1);
                                                                                                        nodo.addHijo($$[$0-7]);
                                                                                                        nodo.addHijo($$[$0-5]);
                                                                                                        nodo.addHijo(inc);
                                                                                                        nodo.addHijo($$[$0]);
                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 215:

                                                                                                                console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);
                                                                                                                nodo.addHijo(id1);
                                                                                                                nodo.addHijo($$[$0-7]);
                                                                                                                nodo.addHijo($$[$0-5]);
                                                                                                                nodo.addHijo(inc);
                                                                                                                nodo.addHijo($$[$0]);
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 216:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);
                                                                                                          nodo.addHijo(id1);
                                                                                                          nodo.addHijo($$[$0-7]);
                                                                                                          nodo.addHijo($$[$0-5]);
                                                                                                          nodo.addHijo(inc);
                                                                                                          nodo.addHijo($$[$0]);
                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+")"+$$[$0].trad;
                                                                                                        
break;
case 217:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);
                                                                                                          nodo.addHijo(id1);
                                                                                                          nodo.addHijo($$[$0-7]);
                                                                                                          nodo.addHijo($$[$0-5]);
                                                                                                          nodo.addHijo(inc);
                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                        
break;
case 218:

                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                                  var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-3].last_column+1);
                                                                  var id1 = new Nodo("ID",$$[$0-4]);
                                                                  var id2 = new Nodo("ID",$$[$0-2]);
                                                                  fin.addHijo(id1);
                                                                  fin.addHijo(id2);
                                                                  nodo.addHijo(fin);
                                                                  nodo.addHijo($$[$0]);
                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                
break;
case 219:

                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> (",+yylineno+1,+_$[$0-5].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-3].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4]);
                                                            var id2 = new Nodo("ID",$$[$0-2]);
                                                            fin.addHijo(id1);
                                                            fin.addHijo(id2);
                                                            nodo.addHijo(fin);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+"("+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                          
break;
case 220: case 234:

                                                                  console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-4].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 221: case 236:

                                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> id",+yylineno+1,+_$[$0-2].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 222:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-3].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4]);
                                                            var id2 = new Nodo("ID",$$[$0-2]);
                                                            fin.addHijo(id1);
                                                            fin.addHijo(id2);
                                                            nodo.addHijo(fin);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                          
break;
case 223: case 238:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-3].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4]);
                                                            var id2 = new Nodo("ID",$$[$0-2]);
                                                            fin.addHijo(id1);
                                                            fin.addHijo(id2);
                                                            nodo.addHijo(fin);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                          
break;
case 224:

                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","LET");
                                                                          var id1 = new Nodo("ID",$$[$0-5]);
                                                                          var id2 = new Nodo("ID",$$[$0-2]);
                                                                          dec.addHijo(id1);
                                                                          fin.addHijo(dec);
                                                                          fin.addHijo(id2);
                                                                          nodo.addHijo(fin);
                                                                          nodo.addHijo($$[$0]);
                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 225:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    nodo.addHijo($$[$0]);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 226:

                                                                        console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> let",+yylineno+1,+_$[$0-5].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                        var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-4].last_column+1);
                                                                        var dec = new Nodo("DECLARACION","LET");
                                                                        var id1 = new Nodo("ID",$$[$0-5]);
                                                                        var id2 = new Nodo("ID",$$[$0-2]);
                                                                        dec.addHijo(id1);
                                                                        fin.addHijo(dec);
                                                                        fin.addHijo(id2);
                                                                        nodo.addHijo(fin);
                                                                        nodo.addHijo($$[$0]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-7]+$$[$0-6]+"let"+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                      
break;
case 227:

                                                                          console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-5].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 228:

                                                                          console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> in, of",+yylineno+1,+_$[$0-3].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 229: case 243:

                                                                          console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> id",+yylineno+1,+_$[$0-2].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 230:

                                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    nodo.addHijo($$[$0]);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 231:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 232:

                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                                  var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-3].last_column+1);
                                                                  var id1 = new Nodo("ID",$$[$0-4]);
                                                                  var id2 = new Nodo("ID",$$[$0-2]);
                                                                  fin.addHijo(id1);
                                                                  fin.addHijo(id2);
                                                                  nodo.addHijo(fin);
                                                                  nodo.addHijo($$[$0]);
                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                
break;
case 233:

                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> (",+yylineno+1,+_$[$0-5].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-3].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4]);
                                                            var id2 = new Nodo("ID",$$[$0-2]);
                                                            fin.addHijo(id1);
                                                            fin.addHijo(id2);
                                                            nodo.addHijo(fin);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+"("+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                          
break;
case 235:

                                                                  console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> in||of",+yylineno+1,+_$[$0-3].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 237:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-3].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4]);
                                                            var id2 = new Nodo("ID",$$[$0-2]);
                                                            fin.addHijo(id1);
                                                            fin.addHijo(id2);
                                                            nodo.addHijo(fin);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                          
break;
case 239:

                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","LET");
                                                                          var id1 = new Nodo("ID",$$[$0-5]);
                                                                          var id2 = new Nodo("ID",$$[$0-2]);
                                                                          dec.addHijo(id1);
                                                                          fin.addHijo(dec);
                                                                          fin.addHijo(id2);
                                                                          nodo.addHijo(fin);
                                                                          nodo.addHijo($$[$0]);
                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 240:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    nodo.addHijo($$[$0]);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 241:

                                                                        console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> let",+yylineno+1,+_$[$0-5].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                        var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-4].last_column+1);
                                                                        var dec = new Nodo("DECLARACION","LET");
                                                                        var id1 = new Nodo("ID",$$[$0-5]);
                                                                        var id2 = new Nodo("ID",$$[$0-2]);
                                                                        dec.addHijo(id1);
                                                                        fin.addHijo(dec);
                                                                        fin.addHijo(id2);
                                                                        nodo.addHijo(fin);
                                                                        nodo.addHijo($$[$0]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-7]+$$[$0-6]+"let"+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                      
break;
case 242:

                                                                          console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-4].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 244:

                                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    nodo.addHijo($$[$0]);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 245:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 246:
 
                                                      console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-2].last_column+1);
                                                      errores.addError(error);

                                                      this.$ = new Nodo("","")
                                                      this.$.trad = "";
                                                    
break;
case 247:

                              console.error("Error Sintactico: "+$$[$0-1]+" Error parametros for");
                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                              errores.addError(error);

                              this.$ = new Nodo("","")
                              this.$.trad = "";
                            
break;
case 248:

                            var nodo = new Nodo("BREAK","BREAK",+yylineno+1,+_$[$0-1].last_column+1);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+$$[$0]+"\n";
                          
break;
case 249:

                    console.error("Error Sintactico: "+$$[$0]+" Error break");
                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                    errores.addError(error);

                    var nodo = new Nodo("BREAK","BREAK",+yylineno+1,+_$[$0-1].last_column+1);
                    this.$ = nodo;
                    this.$.trad = $$[$0-1]+";\n";
                  
break;
case 250:

                                var nodo = new Nodo("CONTINUE","CONTINUE",+yylineno+1,+_$[$0-1].last_column+1);
                                this.$ = nodo;
                                this.$.trad = $$[$0-1]+$$[$0]+"\n";
                              
break;
case 251:

                        console.error("Error Sintactico: "+$$[$0]+" Error continue");
                        var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                        errores.addError(error);

                        var nodo = new Nodo("CONTINUE","CONTINUE",+yylineno+1,+_$[$0-1].last_column+1);
                        this.$ = nodo;
                        this.$.trad = $$[$0-1]+";\n";
                      
break;
case 252:

                              var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                              this.$ = nodo;
                              this.$.trad = $$[$0-1]+$$[$0]+"\n";
                            
break;
case 253:

                      console.error("Error Sintactico: "+$$[$0]+" Error return");
                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                      errores.addError(error);

                      var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1]+";\n";
                    
break;
case 254:

                                    var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-2].last_column+1);
                                    nodo.addHijo($$[$0-1]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                  
break;
case 255:

                            console.error("Error Sintactico: "+$$[$0]+" Error return");
                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                            errores.addError(error);

                            var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-2].last_column+1);
                            nodo.addHijo($$[$0-1]);
                            this.$ = nodo;
                            this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+";\n";
                          
break;
case 256:

                          var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                          nodo.addHijo($$[$0]);
                          this.$ = nodo;
                          this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                        
break;
case 257:
 
                                                                              var s =  eval('$$');
                                                                              var ids = "";
                                                                              for(var i=0;i<s.length;i++){
                                                                                if(s[i] === $$[$0-6]){
                                                                                    ids += s[i+1]+"_";
                                                                                }
                                                                              }
                                                                              var nodo = new Nodo("FUNCION","FUNCION",+yylineno+1,+_$[$0-6].first_column+1);
                                                                              var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                              nodo.addHijo(id);
                                                                              nodo.addHijo($$[$0-1]);
                                                                              nodo.addHijo($$[$0]);
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+" "+ids.replace(/.$/,"")+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                              this.$.func = $$[$0-6]+" "+ids.replace(/.$/,"")+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                            
break;
case 258:

                                                                              console.error("Error sintactico: "+$$[$0-5]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> id"+yylineno+1,+_$[$0-5].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 259:

                                                                        console.error("Error sintactico: "+$$[$0-4]+" Desconocido Sentencias");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ("+yylineno+1,+_$[$0-4].last_column+1);
                                                                        
                                                                        errores.addError(error);
                                                                        this.$ = new Nodo("","");
                                                                        this.$.trad = "";
                                                                      
break;
case 260:

                                                                        console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> )"+yylineno+1,+_$[$0-3].last_column+1);
                                                                        
                                                                        errores.addError(error);
                                                                        this.$ = new Nodo("","");
                                                                        this.$.trad = "";
                                                                      
break;
case 261:

                                                                      console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> :"+yylineno+1,+_$[$0-2].last_column+1);
                                                                      
                                                                      errores.addError(error);
                                                                      this.$ = new Nodo("","");
                                                                      this.$.trad = "";
                                                                    
break;
case 262:

                                                                      console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> {"+yylineno+1,+_$[$0].last_column+1);
                                                                      
                                                                      errores.addError(error);
                                                                      this.$ = new Nodo("","");
                                                                      this.$.trad = "";
                                                                    
break;
case 263:

                                                                                      var s =  eval('$$');
                                                                                      var ids = "";
                                                                                      for(var i=0;i<s.length;i++){
                                                                                        if(s[i] === $$[$0-7]){
                                                                                            ids += s[i+1]+"_";
                                                                                        }
                                                                                      }
                                                                                      var nodo = new Nodo("FUNCION","FUNCION",+yylineno+1,+_$[$0-7].first_column+1);
                                                                                      var id = new Nodo("ID",$$[$0-6],+yylineno+1,+_$[$0-6].first_column+1);
                                                                                      nodo.addHijo(id);
                                                                                      nodo.addHijo($$[$0-4]);
                                                                                      nodo.addHijo($$[$0-1]);
                                                                                      nodo.addHijo($$[$0]);
                                                                                      this.$ = nodo;
                                                                                      this.$.trad = $$[$0-7]+" "+ids.replace(/.$/,"")+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                                      this.$.func = $$[$0-7]+" "+ids.replace(/.$/,"")+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                                    
break;
case 264:

                                                                                      console.error("Error sintactico: "+$$[$0-6]+" Desconocido Sentencias");
                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> id"+yylineno+1,+_$[$0-6].last_column+1);
                                                                                      
                                                                                      errores.addError(error);
                                                                                      this.$ = new Nodo("","");
                                                                                      this.$.trad = "";
                                                                                    
break;
case 265:

                                                                                console.error("Error sintactico: "+$$[$0-5]+" Desconocido Sentencias");
                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> ("+yylineno+1,+_$[$0-5].last_column+1);
                                                                                
                                                                                errores.addError(error);
                                                                                this.$ = new Nodo("","");
                                                                                this.$.trad = "";
                                                                              
break;
case 266:

                                                                                console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> )"+yylineno+1,+_$[$0-3].last_column+1);
                                                                                
                                                                                errores.addError(error);
                                                                                this.$ = new Nodo("","");
                                                                                this.$.trad = "";
                                                                              
break;
case 267:

                                                                              console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> :"+yylineno+1,+_$[$0-2].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 268:

                                                                              console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> {"+yylineno+1,+_$[$0-1].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 269:

                                                    var nodo = new Nodo("PARFUNC","PARFUNC",+yylineno+1,+_$[$0-4].first_column+1);
                                                    var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                                    nodo.add($$[$0-4]);
                                                    nodo.add(id);
                                                    noco.add($$[$0]);

                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                  
break;
case 270:

                                      var nodo = new Nodo("PARFUNC","PARFUNC",+yylineno+1,+_$[$0-2].first_column+1);
                                      var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                      nodo.add(id);
                                      noco.add($$[$0]);

                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0].trad;
                                    
break;
case 271:

                  console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Parametro de funcion(id)"+yylineno+1,+_$[$0].last_column+1);
                  
                  errores.addError(error);
                  this.$ = new Nodo("","");
                  this.$.trad = "";
                
break;
case 272:
 
                                            var nodo = new Nodo("VALOR","VALFUNCION",+yylineno+1,+_$[$0-2].first_column+1);
                                            var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                            nodo.addHijo(id);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                          
break;
case 273:

                                                var nodo = new Nodo("VALOR","VALFUNCION",+yylineno+1,+_$[$0-3].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                              
break;
case 274:

                          var nodo = new Nodo("LPAR","LPAR",+yylineno+1,+_$[$0-2].first_column+1);
                          nodo.addHijo($$[$0-2]);
                          nodo.addHijo($$[$0]);
                          this.$ = nodo;
                          this.$.trad = $$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                        
break;
case 275:

              this.$ = $$[$0];
              this.$.trad = $$[$0].trad;
            
break;
case 276:

                                                              var nodo = new Nodo("CONSOLE","CONSOLE",+yylineno+1,+_$[$0-4].last_column+1);
                                                              nodo.addHijo($$[$0-2]);
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                            
break;
case 277:

                                                        console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> ("+yylineno+1,+_$[$0-3].last_column+1);
                                                        
                                                        errores.addError(error);
                                                        this.$ = new Nodo("","");
                                                        this.$.trad = "";
                                                      
break;
case 278:

                                                        console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> ("+yylineno+1,+_$[$0-1].last_column+1);
                                                        
                                                        errores.addError(error);
                                                        this.$ = new Nodo("","");
                                                        this.$.trad = "";
                                                      
break;
case 279:

                                                      console.error("Error Sintactico: "+$$[$0]+" Error console");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                      errores.addError(error);

                                                      var nodo = new Nodo("CONSOLE","CONSOLE",+yylineno+1,+_$[$0-4].last_column+1);
                                                      nodo.addHijo($$[$0-2]);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                    
break;
case 280:

                                                          var nodo = new Nodo("GRAFICAR","GRAFICAR",+yylineno+1,+_$[$0-3].last_column+1);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                                        
break;
case 281:

                                                    console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ("+yylineno+1,+_$[$0-2].last_column+1);
                                                    
                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 282:

                                                    console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )"+yylineno+1,+_$[$0-1].last_column+1);
                                                    
                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 283:
 
                                                  console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("GRAFICAR","GRAFICAR",+yylineno+1,+_$[$0-3].last_column+1);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+";\n";
                                                
break;
case 284:

                                                              var nodo = new Nodo("LENGTH","LENGTH",+yylineno+1,+_$[$0-4].last_column+1);
                                                              var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                              nodo.addHijo(id);
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                                            
break;
case 285:
 
                                                          console.error("Error Sintactico: "+$$[$0-3]+" Error graficar");
                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> .lenght",+yylineno+1,+_$[$0-3].last_column+1);
                                                          errores.addError(error);

                                                          errores.addError(error);
                                                          this.$ = new Nodo("","");
                                                          this.$.trad = "";
                                                        
break;
case 286:
 
                                                        console.error("Error Sintactico: "+$$[$0-2]+" Error graficar");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> (",+yylineno+1,+_$[$0-2].last_column+1);
                                                        errores.addError(error);

                                                        errores.addError(error);
                                                        this.$ = new Nodo("","");
                                                        this.$.trad = "";
                                                      
break;
case 287:
 
                                                        console.error("Error Sintactico: "+$$[$0-1]+" Error graficar");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                        errores.addError(error);

                                                        errores.addError(error);
                                                        this.$ = new Nodo("","");
                                                        this.$.trad = "";
                                                      
break;
case 288:
 
                                                      console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                      errores.addError(error);

                                                      var nodo = new Nodo("LENGTH","LENGTH",+yylineno+1,+_$[$0-4].last_column+1);
                                                      var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                      nodo.addHijo(id);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+";\n";
                                                    
break;
case 289:

                                                                  var nodo = new Nodo("PUSH","PUSH",+yylineno+1,+_$[$0-5].last_column+1);
                                                                  var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].last_column+1);
                                                                  nodo.addHijo(id);
                                                                  nodo.addHijo($$[$0-2]);
                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                
break;
case 290:
 
                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error graficar");
                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> .push",+yylineno+1,+_$[$0-4].last_column+1);
                                                                errores.addError(error);

                                                                errores.addError(error);
                                                                this.$ = new Nodo("","");
                                                                this.$.trad = "";
                                                              
break;
case 291:
 
                                                            console.error("Error Sintactico: "+$$[$0-3]+" Error graficar");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                            errores.addError(error);

                                                            errores.addError(error);
                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 292:
 
                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error graficar");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            errores.addError(error);
                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 293:
 
                                                          console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> )",+yylineno+1,+_$[$0].last_column+1);
                                                          errores.addError(error);

                                                          var nodo = new Nodo("PUSH","PUSH",+yylineno+1,+_$[$0-5].last_column+1);
                                                          var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].last_column+1);
                                                          nodo.addHijo(id);
                                                          nodo.addHijo($$[$0-2]);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                        
break;
case 294:

                                                          var nodo = new Nodo("POP","POP",+yylineno+1,+_$[$0-4].last_column+1);
                                                          var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                          nodo.addHijo(id);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                                        
break;
case 295:
 
                                                    console.error("Error Sintactico: "+$$[$0-2]+" Error graficar");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> (",+yylineno+1,+_$[$0-2].last_column+1);
                                                    errores.addError(error);

                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 296:
 
                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error graficar");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                    errores.addError(error);

                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 297:
 
                                                  console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("POP","POP",+yylineno+1,+_$[$0-4].last_column+1);
                                                  var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo(id);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+";\n";
                                                
break;
}
},
table: [{2:[1,13],3:1,4:2,5:[1,3],6:4,7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:12,15:$V0,16:$V1,22:$V2,23:16,35:18,37:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,92:$V9,95:$Va,96:$Vb},{1:[3]},{5:[1,28],6:29,7:30,8:31,9:32,10:33,11:34,12:35,13:36,14:37,15:$V0,16:$V1,22:$V2,23:16,35:18,37:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,92:$V9,95:$Va,96:$Vb},{1:[2,2]},o($Vc,[2,12]),o($Vc,[2,13]),o($Vc,[2,14]),o($Vc,[2,15]),o($Vc,[2,16]),o($Vc,[2,17]),o($Vc,[2,18]),o($Vc,[2,19]),o($Vc,[2,20]),o($Vc,$Vd),{2:[1,39],16:[1,38]},{2:[1,41],16:[1,40]},o($Ve,[2,34]),{2:[1,44],19:$Vf,24:[1,42],25:[1,43],42:$Vg,97:[1,46],98:[1,47],99:[1,48]},{19:$Vh},{2:[1,52],67:[1,51]},{2:[1,54],67:[1,53]},{2:[1,56],67:[1,55]},{38:$Vi,72:57},{2:[1,60],67:[1,59]},{2:[1,62],67:[1,61]},{2:[1,64],67:[1,63]},{2:[1,66],16:[1,65]},{16:[1,67]},{1:[2,1]},o($Vc,[2,3]),o($Vc,[2,4]),o($Vc,[2,5]),o($Vc,[2,6]),o($Vc,[2,7]),o($Vc,[2,8]),o($Vc,[2,9]),o($Vc,[2,10]),o($Vc,[2,11]),{2:[1,71],17:[1,68],19:[1,69],21:[1,70]},o($Ve,[2,39]),{17:[1,72],19:[1,73]},o($Ve,[2,40]),{2:[1,75],21:[1,74]},{2:[1,77],21:[1,76]},o($Ve,[2,41],{67:[1,78]}),{2:$Vj,16:$Vk,20:79,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:[1,100],67:[1,99]},{2:[1,102],67:[1,101]},{2:[1,104],67:[1,103]},{2:[1,106],16:$Vu,49:105,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:$Vj,16:$Vk,20:108,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:93,50:109,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,38:$Vi,49:93,50:110,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt,72:111},{16:$Vu,49:93,50:112,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,38:$Vv,49:93,50:113,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt,79:114},{2:[1,117],16:$Vu,49:93,50:116,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,38:$Vi,49:93,50:118,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt,72:119},{84:[1,120]},{2:$Vw,6:123,7:124,8:125,9:126,10:127,11:128,12:129,13:131,14:132,15:$V0,16:$V1,22:$V2,23:16,35:18,37:$V3,40:[1,122],73:121,74:130,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb},{2:[1,138],15:[1,137],16:[1,139]},{15:[1,140],16:[1,141],38:$Vi,72:142},{2:$Vj,16:$Vk,20:143,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:$Vj,16:$Vk,20:144,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:[1,146],68:[1,145]},{68:[1,147]},{2:[1,149],67:[1,148]},{67:[1,150]},{38:[1,151]},{2:$VA,16:$VB,18:152,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{2:$Vj,16:$Vk,20:162,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($Ve,[2,32]),o($Ve,[2,33]),{2:$VA,16:$VB,18:163,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{2:$Vj,16:$Vk,20:164,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($Ve,[2,35]),o($Ve,[2,36]),o($Ve,[2,37]),o($Ve,[2,38]),{2:$Vj,16:$Vk,20:166,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,68:[1,165],69:$Vr,70:$Vs,71:$Vt},{2:[1,168],21:[1,167]},o($VH,[2,50]),o($VH,[2,51]),o($VH,[2,52]),o($VH,$VI),o($VH,[2,54]),o([2,21,43,45,46,48,51,52,53,57,58,59,60,61,62,63,64,65,66,68],$VJ,{24:$VK,25:$VL,42:$Vg,67:$VM}),o($VH,$VN),{2:[1,173],16:[1,174],41:172},{2:$Vj,16:$Vk,20:176,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,47:175,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($VH,[2,86],{51:[1,177],52:$VO,53:$VP}),{16:$Vu,49:93,50:180,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($VQ,[2,90]),o($VQ,[2,91]),o($VQ,[2,98],{45:[1,182],46:[1,181],57:[1,183],58:[1,184],59:[1,185],60:[1,186],61:$VR,62:$VS,63:$VT,64:$VU,65:$VV,66:$VW}),{16:$Vu,49:193,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,34:194,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($VX,[2,107]),o($VX,[2,108]),o($VX,[2,109]),{2:[1,196],68:[1,195]},{68:[1,197]},{2:$Vj,16:$Vk,20:198,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:$Vj,16:$Vk,20:199,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:[1,201],68:[1,200]},{68:[1,202]},{43:[1,203],61:$VR,62:$VS,63:$VT,64:$VU,65:$VV,66:$VW},{43:[1,204]},o($VX,$VJ),{2:[1,206],21:[1,205]},{2:[1,208],52:$VO,53:$VP,68:[1,207]},{52:$VO,53:$VP,68:[1,209]},o($Ve,[2,138]),{2:[1,211],52:$VO,53:$VP,68:[1,210]},{52:$VO,53:$VP,68:[1,212]},o($Ve,[2,144]),{2:[1,215],40:[1,214],80:213,82:[1,216]},{2:[1,218],52:$VO,53:$VP,68:[1,217]},{68:[1,219]},{52:$VO,53:$VP,68:[1,220]},o($Ve,[2,168]),{2:[1,222],67:[1,221]},{6:224,7:225,8:226,9:227,10:228,11:229,12:230,13:232,14:233,15:$V0,16:$V1,22:$V2,23:16,35:18,37:$V3,40:[1,223],74:231,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb},o($VY,[2,112]),o($VZ,[2,123]),o($VZ,[2,124]),o($VZ,[2,125]),o($VZ,[2,126]),o($VZ,[2,127]),o($VZ,[2,128]),o($VZ,[2,129]),o($VZ,[2,130]),o($VZ,[2,131]),o($VZ,[2,132]),o($VZ,[2,133]),{2:[1,235],21:[1,234]},{2:[1,237],21:[1,236]},{2:[1,239],7:241,16:[1,243],20:240,21:[1,238],32:80,33:81,34:82,35:242,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:[1,245],16:[1,244]},{16:[1,246],19:[1,247],68:[1,250],87:[1,248],88:[1,249]},{2:[1,252],19:[1,251],87:[1,253],88:[1,254]},{16:[1,255]},{19:[1,256],87:[1,257],88:[1,258]},o($Ve,[2,247]),{2:[1,260],68:[1,259]},{68:[1,261]},{2:[1,263],21:[1,262]},{21:[1,264]},{21:[1,265]},{2:[1,267],16:$V_,68:[1,266],93:268},{2:$V$,16:$V_,68:[1,270],93:271},{2:$V$,16:$V_,68:[1,273],93:274},{2:$VA,16:$VB,18:276,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,39:275,44:$VG},{2:[1,279],19:[1,277],21:[1,278]},o($V01,[2,48]),o($V01,[2,49]),o($V01,$V11,{42:[1,280]}),o($V01,$V21,{42:[1,281]}),o($V01,$V31,{42:[1,282]}),o($V41,[2,45]),o($V01,$V51,{42:[1,283]}),o($V41,[2,47]),{45:[1,284]},{2:[1,286],21:[1,285]},{19:[1,287]},{2:[1,289],21:[1,288]},{21:[1,290]},{68:[1,291]},o($Ve,[2,81]),o($Ve,[2,82]),o($VH,[2,55]),o($VH,[2,56]),{2:$Vj,16:$Vk,20:294,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,68:[1,292],69:$Vr,70:$Vs,71:$Vt,94:293},{16:[1,296],40:[1,295]},{40:[1,297]},{17:[1,298]},{2:[1,301],43:[1,299],48:[1,300]},o($V61,[2,78]),{16:$Vu,49:93,50:302,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:93,50:303,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:93,50:304,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($VQ,[2,89]),{16:$Vu,49:305,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:306,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:307,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:308,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:309,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:310,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:311,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:312,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:313,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:314,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:315,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:316,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($V71,[2,105],{63:$VT,64:$VU,65:$VV,66:$VW}),{68:[1,317]},{2:[1,319],21:[1,318]},{21:[1,320]},{21:[1,321]},{2:[1,323],68:[1,322]},{68:[1,324]},{2:[1,326],21:[1,325]},{21:[1,327]},{21:[1,328]},o($V81,[2,79]),o($V81,[2,80]),o($Ve,[2,83]),o($Ve,[2,84]),{38:$Vi,72:329},{38:$Vi,72:330},{38:$Vi,72:331},{38:$Vv,79:332},{38:$Vv,79:333},{38:$Vv,79:334},{40:[1,336],81:335,82:[1,337],83:[1,338]},o($Ve,[2,147]),{40:[1,339]},{2:[1,341],16:$Vu,49:93,50:340,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{38:$Vi,72:342},{38:$Vi,72:343},{38:$Vi,72:344},{38:$Vi,72:345},{2:[1,347],16:$Vu,49:93,50:346,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:93,50:348,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($VY,[2,111]),o($VZ,[2,113]),o($VZ,[2,114]),o($VZ,[2,115]),o($VZ,[2,116]),o($VZ,[2,117]),o($VZ,[2,118]),o($VZ,[2,119]),o($VZ,[2,120]),o($VZ,[2,121]),o($VZ,[2,122]),o($VZ,[2,248]),o($VZ,[2,249]),o($VZ,[2,250]),o($VZ,[2,251]),o($VZ,[2,252]),o($VZ,[2,253],{2:$VN,21:$VN}),{2:[1,350],21:[1,349]},o($VZ,[2,256]),o($Vd,$VI,{19:$Vh}),o([2,21,45,46,51,52,53,57,58,59,60,61,62,63,64,65,66],$VJ,{19:$Vf,24:$VK,25:$VL,42:$Vg,67:$VM}),{2:[1,352],19:[1,351],87:[1,353],88:[1,354]},{19:[1,355],87:[1,356],88:[1,357]},{19:[1,358],87:[1,359],88:[1,360]},{2:$Vj,16:$Vk,20:361,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:[1,362]},{16:[1,363]},{38:$Vi,72:364},{2:$Vj,16:$Vk,20:365,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:$Vj,16:[1,367],20:366,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:[1,369],16:[1,368]},{2:[1,371],16:[1,370]},{19:[1,372],87:[1,373],88:[1,374]},{2:$Vj,16:$Vk,20:375,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:[1,376]},{16:[1,377]},{2:[1,379],21:[1,378]},{21:[1,380]},{21:[1,381]},o($Ve,[2,280]),o($Ve,[2,283]),o($Ve,[2,282]),o($Ve,[2,281]),{2:[1,383],17:[1,382]},o($V91,$Va1,{17:[1,384]}),{2:[1,386],48:$Vb1,68:[1,385]},{17:[1,388]},{17:[1,389]},{48:$Vb1,68:[1,390]},o($Vc1,$Va1),{17:[1,391]},{48:$Vb1,68:[1,392]},{2:$VA,16:$VB,18:394,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,40:[1,393],44:$VG},{17:[1,395]},{2:$Vj,16:$Vk,20:396,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($Ve,[2,30]),o($Ve,[2,31]),{43:[1,397]},{43:[1,398]},{43:[1,399]},{43:[1,400]},{2:$VA,16:[1,405],26:401,27:[1,402],28:[1,403],29:[1,404],30:$VF},o($Ve,[2,26]),o($Ve,[2,27]),{2:$Vj,16:$Vk,20:406,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($Ve,[2,28]),o($Ve,[2,29]),o($Ve,[2,285]),{21:[1,407]},o($VH,[2,272]),{48:[1,409],68:[1,408]},o($Vc1,[2,275]),o($VH,[2,64]),{17:[1,410]},o($VH,[2,65]),{2:$Vj,16:$Vk,20:411,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($VH,[2,75]),{2:$Vj,16:$Vk,20:412,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:$Vj,16:$Vk,20:413,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{17:[1,414],52:$VO,53:$VP},o($VQ,[2,87]),o([2,17,21,43,48,51,53,68],[2,88],{52:$VO}),o($VQ,[2,92],{61:$VR,62:$VS,63:$VT,64:$VU,65:$VV,66:$VW}),o($VQ,[2,93],{61:$VR,62:$VS,63:$VT,64:$VU,65:$VV,66:$VW}),o($VQ,[2,94],{61:$VR,62:$VS,63:$VT,64:$VU,65:$VV,66:$VW}),o($VQ,[2,95],{61:$VR,62:$VS,63:$VT,64:$VU,65:$VV,66:$VW}),o($VQ,[2,96],{61:$VR,62:$VS,63:$VT,64:$VU,65:$VV,66:$VW}),o($VQ,[2,97],{61:$VR,62:$VS,63:$VT,64:$VU,65:$VV,66:$VW}),o($V71,[2,99],{63:$VT,64:$VU,65:$VV,66:$VW}),o($V71,[2,100],{63:$VT,64:$VU,65:$VV,66:$VW}),o($Vd1,[2,101],{65:$VV}),o($Vd1,[2,102],{65:$VV}),o($VX,[2,103]),o($Vd1,[2,104],{65:$VV}),o($VX,[2,106]),o($Ve,[2,284]),o($Ve,[2,288]),o($Ve,[2,287]),o($Ve,[2,286]),{2:[1,416],21:[1,415]},{21:[1,417]},{21:[1,418]},o($Ve,[2,294]),o($Ve,[2,297]),o($Ve,[2,296]),o($Ve,[2,295]),o($Ve,[2,135],{76:419,77:[1,420]}),o($Ve,[2,137]),o($Ve,[2,136]),o($Ve,[2,141]),o($Ve,[2,143]),o($Ve,[2,142]),{40:[1,421]},o($Ve,[2,146]),{2:[1,423],16:$Vu,49:93,50:422,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{17:[1,424]},o($Ve,[2,148]),{17:[1,425],52:$VO,53:$VP},{17:[1,426]},o($Ve,[2,164]),o($Ve,[2,167]),o($Ve,[2,166]),o($Ve,[2,165]),{2:[1,428],52:$VO,53:$VP,68:[1,427]},{68:[1,429]},{52:$VO,53:$VP,68:[1,430]},o($VZ,[2,254]),o($VZ,[2,255]),{2:$Vj,16:$Vk,20:431,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:$Vj,16:[1,433],20:432,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:[1,435],16:[1,434]},{2:[1,437],16:[1,436]},{2:$Vj,16:$Vk,20:438,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:[1,439]},{16:[1,440]},{2:$Vj,16:$Vk,20:441,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:[1,442]},{16:[1,443]},{21:[1,444]},{68:[1,445]},{68:[1,446]},o($Ve,[2,246]),{2:[1,448],21:[1,447]},{21:[1,449]},o($Ve1,$VJ,{24:$VK,25:$VL,42:$Vg,67:$VM,68:[1,450]}),{2:[1,452],68:[1,451]},{68:[1,453]},{2:[1,455],68:[1,454]},{68:[1,456]},{2:$Vj,16:$Vk,20:457,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:[1,458]},{16:[1,459]},{21:[1,460]},{68:[1,461]},{68:[1,462]},o($Ve,[2,276]),o($Ve,[2,279]),o($Ve,[2,278]),o($Ve,[2,277]),{2:$VA,16:$VB,18:463,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{2:$VA,16:$VB,18:464,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{2:$VA,16:$VB,18:465,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{2:[1,467],17:[1,466]},{17:[1,468]},{16:[1,469]},{2:$VA,16:$VB,18:470,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{2:$VA,16:$VB,18:471,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{17:[1,472]},{2:$VA,16:$VB,18:473,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{17:[1,474]},{2:[1,476],21:[1,475]},{17:[1,477]},{16:[1,478]},{2:[1,480],21:[1,479]},o($V01,[2,70]),o($V01,[2,71]),o($V01,[2,72]),o($V01,[2,73]),{46:[1,481]},{46:$V11},{46:$V21},{46:$V31},{46:$V51},{2:[1,483],21:[1,482]},o($Ve,[2,290]),o($VH,[2,273]),{2:$Vj,16:$Vk,20:484,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:$Vj,16:$Vk,20:485,32:80,33:81,34:82,35:83,36:84,38:$Vl,42:$Vm,49:93,50:89,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{2:[1,487],21:[1,486]},o($V61,[2,76]),o($V61,[2,77]),{16:$Vu,49:93,50:488,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},o($Ve,[2,289]),o($Ve,[2,293]),o($Ve,[2,292]),o($Ve,[2,291]),o($Ve,[2,134]),{8:490,38:$Vi,72:489,75:$V4},o($Ve,[2,145]),{17:[1,491],52:$VO,53:$VP},{17:[1,492]},{2:$Vw,6:123,7:124,8:125,9:126,10:127,11:128,12:129,13:131,14:132,15:$V0,16:$V1,22:$V2,23:16,35:18,37:$V3,38:$Vi,40:[2,163],72:494,73:493,74:130,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb},o($Vf1,[2,159],{23:16,35:18,6:123,7:124,8:125,9:126,10:127,11:128,12:129,74:130,13:131,14:132,73:495,72:496,2:$Vw,15:$V0,16:$V1,22:$V2,37:$V3,38:$Vi,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,160],{23:16,35:18,6:123,7:124,8:125,9:126,10:127,11:128,12:129,74:130,13:131,14:132,73:497,72:498,2:$Vw,15:$V0,16:$V1,22:$V2,37:$V3,38:$Vi,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb}),{2:[1,500],21:[1,499]},{21:[1,501]},{21:[1,502]},{21:[1,503]},{2:[1,505],21:[1,504]},{21:[1,506]},o($Ve1,$VJ,{24:$VK,25:$VL,42:$Vg,67:$VM,68:[1,507]}),{2:[1,509],68:[1,508]},{68:[1,510]},{2:[1,512],68:[1,511]},{68:[1,513]},{21:[1,514]},{68:[1,515]},{68:[1,516]},{21:[1,517]},{68:[1,518]},{68:[1,519]},{16:$Vu,49:93,50:520,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{38:$Vi,72:521},{38:$Vi,72:522},{2:[1,524],16:$Vu,49:93,50:523,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:93,50:525,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:93,50:526,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{38:$Vi,72:527},{2:[1,529],38:$Vi,72:528},{38:$Vi,72:530},{38:$Vi,72:531},{2:[1,533],38:$Vi,72:532},{38:$Vi,72:534},{38:$Vi,72:535},{21:[1,536]},{68:[1,537]},{68:[1,538]},{16:$Vu,49:93,50:539,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{38:$Vi,72:540},{38:$Vi,72:541},{2:[1,543],38:$Vi,72:542},{38:$Vi,72:544},{38:$Vi,72:545},{2:$VA,16:$VB,18:546,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{2:$VA,16:$VB,18:547,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{2:$VA,16:$VB,18:548,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{17:[1,549]},o($V91,[2,270]),{38:$Vi,72:550},{2:$VA,16:$VB,18:551,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},{38:$Vi,72:552},{2:$VA,16:$VB,18:553,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},o($Ve,[2,58]),o($Ve,[2,59]),{16:[1,554]},{2:[1,556],21:[1,555]},o($Ve,[2,22]),o($Ve,[2,23]),o($V01,[2,74]),o($Ve,[2,24]),o($Ve,[2,25]),o($Vc1,[2,274]),{2:[1,558],21:[1,557]},o($Vg1,[2,68]),o($Vg1,[2,69]),o($VH,[2,85],{52:$VO,53:$VP}),o($Ve,[2,139]),o($Ve,[2,140]),o($Vf1,[2,153],{23:16,35:18,6:123,7:124,8:125,9:126,10:127,11:128,12:129,74:130,13:131,14:132,73:559,72:560,2:$Vw,15:$V0,16:$V1,22:$V2,37:$V3,38:$Vi,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,154],{23:16,35:18,6:123,7:124,8:125,9:126,10:127,11:128,12:129,74:130,13:131,14:132,73:561,72:562,2:$Vw,15:$V0,16:$V1,22:$V2,37:$V3,38:$Vi,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb}),{6:224,7:225,8:226,9:227,10:228,11:229,12:230,13:232,14:233,15:$V0,16:$V1,22:$V2,23:16,35:18,37:$V3,40:[2,161],74:231,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb},{40:[2,162]},o($Vf1,[2,155],{23:16,35:18,6:224,7:225,8:226,9:227,10:228,11:229,12:230,74:231,13:232,14:233,15:$V0,16:$V1,22:$V2,37:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,157]),o($Vf1,[2,156],{23:16,35:18,6:224,7:225,8:226,9:227,10:228,11:229,12:230,74:231,13:232,14:233,15:$V0,16:$V1,22:$V2,37:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,158]),o($Ve,[2,169]),o($Ve,[2,173]),o($Ve,[2,172]),o($Ve,[2,171]),o($Ve,[2,170]),{2:[1,564],16:$Vu,49:93,50:563,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:93,50:565,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{16:$Vu,49:93,50:566,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{38:$Vi,72:567},{2:[1,569],38:$Vi,72:568},{38:$Vi,72:570},{38:$Vi,72:571},{2:[1,573],38:$Vi,72:572},{38:$Vi,72:574},{38:$Vi,72:575},{16:$Vu,49:93,50:576,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{38:$Vi,72:577},{38:$Vi,72:578},{16:$Vu,49:93,50:579,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{38:$Vi,72:580},{38:$Vi,72:581},{21:[1,582],52:$VO,53:$VP},o($Ve,[2,220]),o($Ve,[2,234]),{2:[1,584],21:[1,583],52:$VO,53:$VP},{21:[1,585]},{21:[1,586],52:$VO,53:$VP},{21:[1,587],52:$VO,53:$VP},o($Ve,[2,235]),o($Ve,[2,218]),o($Ve,[2,223]),o($Ve,[2,222]),o($Ve,[2,221]),o($Ve,[2,232]),o($Ve,[2,238]),o($Ve,[2,237]),o($Ve,[2,236]),{16:$Vu,49:93,50:588,54:$Vn,55:$Vo,56:92,62:$Vp,67:$Vq,69:$Vr,70:$Vs,71:$Vt},{38:$Vi,72:589},{38:$Vi,72:590},{21:[1,591],52:$VO,53:$VP},o($Ve,[2,219]),o($Ve,[2,233]),o($Ve,[2,257]),o($Ve,[2,262]),o($Ve,[2,261]),o($Ve,[2,260]),{2:[1,593],38:$Vi,72:592},{38:$Vi,72:594},{38:$Vi,72:595},{2:$VA,16:$VB,18:596,26:153,27:$VC,28:$VD,29:$VE,30:$VF,31:154,44:$VG},o($Ve,[2,259]),{38:$Vi,72:597},o($Ve,[2,258]),{38:$Vi,72:598},{2:[1,600],21:[1,599]},o($Vh1,[2,62]),o($Vh1,[2,63]),o($Vg1,[2,66]),o($Vg1,[2,67]),o($Vf1,[2,149],{23:16,35:18,6:224,7:225,8:226,9:227,10:228,11:229,12:230,74:231,13:232,14:233,15:$V0,16:$V1,22:$V2,37:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,151]),o($Vf1,[2,150],{23:16,35:18,6:224,7:225,8:226,9:227,10:228,11:229,12:230,74:231,13:232,14:233,15:$V0,16:$V1,22:$V2,37:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vx,90:$Vy,91:$Vz,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,152]),{2:[1,602],21:[1,601],52:$VO,53:$VP},{21:[1,603]},{21:[1,604],52:$VO,53:$VP},{21:[1,605],52:$VO,53:$VP},o($Ve,[2,228]),o($Ve,[2,224]),o($Ve,[2,231]),o($Ve,[2,230]),o($Ve,[2,229]),o($Ve,[2,239]),o($Ve,[2,245]),o($Ve,[2,244]),o($Ve,[2,243]),{21:[1,606],52:$VO,53:$VP},o($Ve,[2,227]),o($Ve,[2,242]),{21:[1,607],52:$VO,53:$VP},o($Ve,[2,226]),o($Ve,[2,241]),{16:[1,608]},{2:[1,610],16:[1,609]},{16:[1,611]},{16:[1,612]},{16:[1,613]},{16:[1,614]},{21:[1,615],52:$VO,53:$VP},o($Ve,[2,225]),o($Ve,[2,240]),{16:[1,616]},o($Ve,[2,263]),o($Ve,[2,268]),o($Ve,[2,267]),o($Ve,[2,266]),o($V91,[2,269]),o($Ve,[2,265]),o($Ve,[2,264]),o($Vh1,[2,60]),o($Vh1,[2,61]),{2:[1,618],16:[1,617]},{16:[1,619]},{16:[1,620]},{16:[1,621]},{16:[1,622]},{16:[1,623]},{16:[1,624]},{24:[1,625],25:[1,626]},{2:[1,628],24:[1,627],25:[1,629]},{24:[1,630],25:[1,631]},{24:[1,632],25:[1,633]},{24:[1,634],25:[1,635]},{24:[1,636],25:[1,637]},{24:[1,638],25:[1,639]},{16:[1,640]},{24:[1,641],25:[1,642]},{2:[1,644],24:[1,643],25:[1,645]},{24:[1,646],25:[1,647]},{24:[1,648],25:[1,649]},{24:[1,650],25:[1,651]},{24:[1,652],25:[1,653]},{24:[1,654],25:[1,655]},{24:[1,656],25:[1,657]},{24:[1,658],25:[1,659]},{68:[1,660]},{68:[1,661]},{2:[1,663],68:[1,662]},{68:[1,664]},{2:[1,666],68:[1,665]},{68:[1,667]},{68:[1,668]},{68:[1,669]},{68:[1,670]},{68:[1,671]},{68:[1,672]},{68:[1,673]},{68:[1,674]},{68:[1,675]},{68:[1,676]},{24:[1,677],25:[1,678]},{68:[1,679]},{68:[1,680]},{2:[1,682],68:[1,681]},{68:[1,683]},{2:[1,685],68:[1,684]},{68:[1,686]},{68:[1,687]},{68:[1,688]},{68:[1,689]},{68:[1,690]},{68:[1,691]},{68:[1,692]},{68:[1,693]},{68:[1,694]},{68:[1,695]},{68:[1,696]},{68:[1,697]},{68:[1,698]},{68:[1,699]},{38:$Vi,72:700},{38:$Vi,72:701},{2:[1,703],38:$Vi,72:702},{38:$Vi,72:704},{38:$Vi,72:705},{2:[1,707],38:$Vi,72:706},{38:$Vi,72:708},{38:$Vi,72:709},{38:$Vi,72:710},{38:$Vi,72:711},{38:$Vi,72:712},{38:$Vi,72:713},{38:$Vi,72:714},{38:$Vi,72:715},{38:$Vi,72:716},{38:$Vi,72:717},{38:$Vi,72:718},{68:[1,719]},{68:[1,720]},{38:$Vi,72:721},{38:$Vi,72:722},{2:[1,724],38:$Vi,72:723},{38:$Vi,72:725},{38:$Vi,72:726},{2:[1,728],38:$Vi,72:727},{38:$Vi,72:729},{38:$Vi,72:730},{38:$Vi,72:731},{38:$Vi,72:732},{38:$Vi,72:733},{38:$Vi,72:734},{38:$Vi,72:735},{38:$Vi,72:736},{38:$Vi,72:737},{38:$Vi,72:738},{38:$Vi,72:739},{38:$Vi,72:740},{38:$Vi,72:741},{38:$Vi,72:742},{38:$Vi,72:743},o($Ve,[2,199]),o($Ve,[2,210]),o($Ve,[2,197]),o($Ve,[2,207]),o($Ve,[2,206]),o($Ve,[2,205]),o($Ve,[2,208]),o($Ve,[2,217]),o($Ve,[2,216]),o($Ve,[2,204]),o($Ve,[2,215]),o($Ve,[2,203]),o($Ve,[2,214]),o($Ve,[2,202]),o($Ve,[2,213]),o($Ve,[2,201]),o($Ve,[2,212]),o($Ve,[2,200]),o($Ve,[2,211]),{38:$Vi,72:744},{38:$Vi,72:745},o($Ve,[2,198]),o($Ve,[2,209]),o($Ve,[2,174]),o($Ve,[2,185]),o($Ve,[2,184]),o($Ve,[2,183]),o($Ve,[2,186]),o($Ve,[2,196]),o($Ve,[2,195]),o($Ve,[2,182]),o($Ve,[2,194]),o($Ve,[2,181]),o($Ve,[2,193]),o($Ve,[2,180]),o($Ve,[2,192]),o($Ve,[2,179]),o($Ve,[2,191]),o($Ve,[2,178]),o($Ve,[2,190]),o($Ve,[2,177]),o($Ve,[2,189]),o($Ve,[2,176]),o($Ve,[2,188]),o($Ve,[2,175]),o($Ve,[2,187])],
defaultActions: {3:[2,2],28:[2,1],402:[2,42],403:[2,43],404:[2,44],405:[2,46],494:[2,162]},
parseError: function parseError (str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        var error = new Error(str);
        error.hash = hash;
        throw error;
    }
},
parse: function parse (input) {
    var self = this,
        stack = [0],
        tstack = [], // token stack
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    var args = lstack.slice.call(arguments, 1);

    //this.reductionCount = this.shiftCount = 0;

    var lexer = Object.create(this.lexer);
    var sharedState = { yy: {} };
    // copy state
    for (var k in this.yy) {
      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
        sharedState.yy[k] = this.yy[k];
      }
    }

    lexer.setInput(input, sharedState.yy);
    sharedState.yy.lexer = lexer;
    sharedState.yy.parser = this;
    if (typeof lexer.yylloc == 'undefined') {
        lexer.yylloc = {};
    }
    var yyloc = lexer.yylloc;
    lstack.push(yyloc);

    var ranges = lexer.options && lexer.options.ranges;

    if (typeof sharedState.yy.parseError === 'function') {
        this.parseError = sharedState.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }

    function popStack (n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

_token_stack:
    var lex = function () {
        var token;
        token = lexer.lex() || EOF;
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }

    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length - 1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

_handle_error:
        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {
            var error_rule_depth;
            var errStr = '';

            // Return the rule stack depth where the nearest error rule can be found.
            // Return FALSE when no error recovery rule was found.
            function locateNearestErrorRecoveryRule(state) {
                var stack_probe = stack.length - 1;
                var depth = 0;

                // try to recover from error
                for(;;) {
                    // check for error recovery rule in this state
                    if ((TERROR.toString()) in table[state]) {
                        return depth;
                    }
                    if (state === 0 || stack_probe < 2) {
                        return false; // No suitable error recovery rule available.
                    }
                    stack_probe -= 2; // popStack(1): [symbol, action]
                    state = stack[stack_probe];
                    ++depth;
                }
            }

            if (!recovering) {
                // first see if there's any chance at hitting an error recovery rule:
                error_rule_depth = locateNearestErrorRecoveryRule(state);

                // Report error
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push("'"+this.terminals_[p]+"'");
                    }
                }
                if (lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(', ') + ", got '" + (this.terminals_[symbol] || symbol)+ "'";
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == EOF ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr, {
                    text: lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: lexer.yylineno,
                    loc: yyloc,
                    expected: expected,
                    recoverable: (error_rule_depth !== false)
                });
            } else if (preErrorSymbol !== EOF) {
                error_rule_depth = locateNearestErrorRecoveryRule(state);
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol === EOF || preErrorSymbol === EOF) {
                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');
                }

                // discard current lookahead and grab another
                yyleng = lexer.yyleng;
                yytext = lexer.yytext;
                yylineno = lexer.yylineno;
                yyloc = lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            if (error_rule_depth === false) {
                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');
            }
            popStack(error_rule_depth);

            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {
            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(lexer.yytext);
                lstack.push(lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = lexer.yyleng;
                    yytext = lexer.yytext;
                    yylineno = lexer.yylineno;
                    yyloc = lexer.yylloc;
                    if (recovering > 0) {
                        recovering--;
                    }
                } else {
                    // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2:
                // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                if (ranges) {
                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];
                }
                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3:
                // accept
                return true;
        }

    }

    return true;
}};

  let valcadena = ""; 
  let resultado = "";
  let errores = new ListaErrores();
  var ids = new Array();
  var funcs = new Array();
  var trads = new Array();
/* generated by jison-lex 0.3.4 */
var lexer = (function(){
var lexer = ({

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input, yy) {
        this.yy = yy || this.yy || {};
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function(match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex () {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin (condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState () {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules () {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState (n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState (condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0: this.begin("comentarios"); 
break;
case 1: this.popState(); 
break;
case 2: 
break;
case 3: this.popState(); return 5; 
break;
case 4: this.begin("comentariomulti"); 
break;
case 5: this.popState(); 
break;
case 6:  
break;
case 7:  
break;
case 8: this.begin("tstring"); 
break;
case 9: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 69;
                                
break;
case 10: valcadena +='\n'; 
break;
case 11: valcadena +='\t'; 
break;
case 12: valcadena +='\\'; 
break;
case 13: valcadena +='\r'; 
break;
case 14: valcadena +='\"'; 
break;
case 15: valcadena += yy_.yytext; 
break;
case 16: this.begin("tstring2"); 
break;
case 17: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 69;
                                
break;
case 18: valcadena +='\n'; 
break;
case 19: valcadena +='\t'; 
break;
case 20: valcadena +='\\'; 
break;
case 21: valcadena +='\r'; 
break;
case 22: valcadena +='\"'; 
break;
case 23: valcadena += yy_.yytext; 
break;
case 24: this.begin("ttstring"); 
break;
case 25: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 69;
                                
break;
case 26: valcadena +='\n'; 
break;
case 27: valcadena +='\t'; 
break;
case 28: valcadena +='\\'; 
break;
case 29: valcadena +='\r'; 
break;
case 30: valcadena +='\"'; 
break;
case 31: valcadena += yy_.yytext; 
break;
case 32: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_comilladoble'; 
break;
case 33: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_barrainvertida'; 
break;
case 34: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_salto'; 
break;
case 35: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_retorno'; 
break;
case 36: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_tab'; 
break;
case 37: console.log("tipo de dato:"+yy_.yytext);  return 27; 
break;
case 38: console.log("tipo de dato:"+yy_.yytext);  return 28; 
break;
case 39: console.log("tipo de dato:"+yy_.yytext);  return 29; 
break;
case 40: console.log("tipo de dato:"+yy_.yytext);  return 30; 
break;
case 41: console.log("tipo de dato:"+yy_.yytext);  return 37; 
break;
case 42: console.log("inicio array:"+yy_.yytext);  return 44; 
break;
case 43: console.log("declaracion:"+yy_.yytext);  return 15; 
break;
case 44: console.log("declaracion:"+yy_.yytext);  return 22; 
break;
case 45: console.log("boolean:"+yy_.yytext);  return 55; 
break;
case 46: console.log("boolean:"+yy_.yytext);  return 55; 
break;
case 47: console.log("sentencias:"+yy_.yytext);  return 75; 
break;
case 48: console.log("sentencias:"+yy_.yytext);  return 77; 
break;
case 49: console.log("sentencias:"+yy_.yytext);  return 78; 
break;
case 50: console.log("sentencias:"+yy_.yytext);  return 82; 
break;
case 51: console.log("sentencias:"+yy_.yytext);  return 83; 
break;
case 52: console.log("sentencias:"+yy_.yytext);  return 84; 
break;
case 53: console.log("sentencias:"+yy_.yytext);  return 85; 
break;
case 54: console.log("sentencias:"+yy_.yytext);  return 86; 
break;
case 55: console.log("sentencias:"+yy_.yytext);  return 87; 
break;
case 56: console.log("sentencias:"+yy_.yytext);  return 88; 
break;
case 57: console.log("transferencia:"+yy_.yytext);  return 89; 
break;
case 58: console.log("transferencia:"+yy_.yytext);  return 90; 
break;
case 59: console.log("transferencia:"+yy_.yytext);  return 91; 
break;
case 60: console.log("funcion:"+yy_.yytext);  return 92; 
break;
case 61: console.log("funcion:"+yy_.yytext);  return 95; 
break;
case 62: console.log("funcion:"+yy_.yytext);  return 96; 
break;
case 63: console.log("funcion:"+yy_.yytext);  return 97; 
break;
case 64: console.log("funcion:"+yy_.yytext);  return 98; 
break;
case 65: console.log("funcion:"+yy_.yytext);  return 99; 
break;
case 66: console.log("arimetica:"+yy_.yytext); return 65; 
break;
case 67: console.log("arimetica:"+yy_.yytext); return 24; 
break;
case 68: console.log("arimetica:"+yy_.yytext); return 25; 
break;
case 69: console.log("arimetica:"+yy_.yytext); return 61; 
break;
case 70: console.log("arimetica:"+yy_.yytext); return 62; 
break;
case 71: console.log("arimetica:"+yy_.yytext); return 63; 
break;
case 72: console.log("arimetica:"+yy_.yytext); return 64; 
break;
case 73: console.log("arimetica:"+yy_.yytext); return 66; 
break;
case 74: console.log("relacional:"+yy_.yytext); return 57; 
break;
case 75: console.log("relacional:"+yy_.yytext); return 58; 
break;
case 76: console.log("relacional:"+yy_.yytext); return 59; 
break;
case 77: console.log("relacional:"+yy_.yytext); return 60; 
break;
case 78: console.log("relacional:"+yy_.yytext); return 46; 
break;
case 79: console.log("relacional:"+yy_.yytext); return 45; 
break;
case 80: console.log("Logica:"+yy_.yytext); return 52; 
break;
case 81: console.log("Logica:"+yy_.yytext); return 53; 
break;
case 82: console.log("Logica:"+yy_.yytext); return 54; 
break;
case 83: console.log("ternario:"+yy_.yytext); return 51; 
break;
case 84: console.log("simbolo:"+yy_.yytext); return 42; 
break;
case 85: console.log("simbolo:"+yy_.yytext); return 43; 
break;
case 86: console.log("simbolo:"+yy_.yytext); return 17; 
break;
case 87: console.log("simbolo:"+yy_.yytext); return 19; 
break;
case 88: console.log("simbolo:"+yy_.yytext); return 21; 
break;
case 89: console.log("simbolo:"+yy_.yytext); return 38; 
break;
case 90: console.log("simbolo:"+yy_.yytext); return 40; 
break;
case 91: console.log("simbolo:"+yy_.yytext); return 48; 
break;
case 92: console.log("simbolo:"+yy_.yytext); return 67; 
break;
case 93: console.log("simbolo:"+yy_.yytext); return 68; 
break;
case 94: console.log("numero decimal:"+yy_.yytext);  return 71; 
break;
case 95: console.log("numero entero:"+yy_.yytext);  return 70; 
break;
case 96:  console.log("id:"+yy_.yytext); return 16; 
break;
case 97: /*se ignoran*/ 
break;
case 98:  return 5;  
break;
case 99:  
                                    console.error("Error Lexico:"+yy_.yytext); 
                                    var error = new Error("Lexico",yy_.yytext,+yy_.yylineno+1,yy_.yylloc.last_column)
                                    errores.addError(error);
                                
break;
}
},
rules: [/^(?:\/\/)/,/^(?:[\n])/,/^(?:[^\n])/,/^(?:$)/,/^(?:\/\*)/,/^(?:\*\/)/,/^(?:.)/,/^(?:[ \t\r\n\f])/,/^(?:["])/,/^(?:["])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:['])/,/^(?:['])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:[`])/,/^(?:[`])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:\\")/,/^(?:\\\\)/,/^(?:\\n)/,/^(?:\\r)/,/^(?:\\t)/,/^(?:string\b)/,/^(?:number\b)/,/^(?:boolean\b)/,/^(?:void\b)/,/^(?:type\b)/,/^(?:Array\b)/,/^(?:let\b)/,/^(?:const\b)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:if\b)/,/^(?:else\b)/,/^(?:switch\b)/,/^(?:case\b)/,/^(?:default\b)/,/^(?:while\b)/,/^(?:do\b)/,/^(?:for\b)/,/^(?:in\b)/,/^(?:of\b)/,/^(?:break\b)/,/^(?:continue\b)/,/^(?:return\b)/,/^(?:function\b)/,/^(?:console\.log\b)/,/^(?:graficar_ts\b)/,/^(?:\.Lenght\b)/,/^(?:\.Push\b)/,/^(?:\.Pop\b)/,/^(?:\*\*)/,/^(?:\+\+)/,/^(?:--)/,/^(?:\+)/,/^(?:-)/,/^(?:\*)/,/^(?:\/)/,/^(?:%)/,/^(?:>=)/,/^(?:<=)/,/^(?:==)/,/^(?:!=)/,/^(?:>)/,/^(?:<)/,/^(?:&&)/,/^(?:\|\|)/,/^(?:!)/,/^(?:\?)/,/^(?:\[)/,/^(?:\])/,/^(?::)/,/^(?:=)/,/^(?:;)/,/^(?:\{)/,/^(?:\})/,/^(?:,)/,/^(?:\()/,/^(?:\))/,/^(?:[0-9]+\.[0-9]+)/,/^(?:[0-9]+)/,/^(?:[[a-zA-ZñÑáéíóúÁÉÍÓÚ]["_"0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]*|["_"]+[0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]["_"0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]*)/,/^(?:[ \t\n\r\f])/,/^(?:$)/,/^(?:.)/],
conditions: {"ttstring":{"rules":[25,26,27,28,29,30,31],"inclusive":false},"tstring2":{"rules":[17,18,19,20,21,22,23],"inclusive":false},"tstring":{"rules":[9,10,11,12,13,14,15],"inclusive":false},"comentariomulti":{"rules":[5,6,7],"inclusive":false},"comentarios":{"rules":[1,2,3],"inclusive":false},"INITIAL":{"rules":[0,4,8,16,24,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"inclusive":true}}
});
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = analizador;
exports.Parser = analizador.Parser;
exports.parse = function () { return analizador.parse.apply(analizador, arguments); };
exports.main = function commonjsMain (args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}