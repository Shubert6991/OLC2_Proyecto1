/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var analizador = (function(){
var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,15],$V1=[1,18],$V2=[1,16],$V3=[1,28],$V4=[1,19],$V5=[1,20],$V6=[1,21],$V7=[1,22],$V8=[1,23],$V9=[1,26],$Va=[1,24],$Vb=[1,25],$Vc=[5,16,17,23,36,76,79,85,86,87,93,96,97],$Vd=[5,16,17,23,36,39,76,79,83,84,85,86,87,90,91,92,93,96,97],$Ve=[1,47],$Vf=[1,51],$Vg=[1,59],$Vh=[1,88],$Vi=[1,87],$Vj=[1,89],$Vk=[1,90],$Vl=[1,92],$Vm=[1,93],$Vn=[1,96],$Vo=[1,97],$Vp=[1,98],$Vq=[1,99],$Vr=[1,100],$Vs=[1,103],$Vt=[1,117],$Vu=[1,136],$Vv=[1,137],$Vw=[1,138],$Vx=[1,139],$Vy=[1,167],$Vz=[1,166],$VA=[1,162],$VB=[1,163],$VC=[1,164],$VD=[1,165],$VE=[1,168],$VF=[2,22,39,40,42,66],$VG=[2,110],$VH=[1,175],$VI=[1,176],$VJ=[1,177],$VK=[1,178],$VL=[1,179],$VM=[2,57],$VN=[1,182],$VO=[1,186],$VP=[1,187],$VQ=[2,18,22,39,40,42,49,50,51,66],$VR=[1,195],$VS=[1,196],$VT=[1,197],$VU=[1,198],$VV=[1,199],$VW=[1,200],$VX=[2,18,22,39,40,42,44,45,49,50,51,55,56,57,58,59,60,61,62,63,64,66],$VY=[40,66],$VZ=[5,16,17,23,36,39,76,78,79,83,84,85,86,87,90,91,92,93,96,97],$V_=[16,17,23,36,39,76,79,83,84,85,86,87,90,91,92,93,96,97],$V$=[1,276],$V01=[1,279],$V11=[2,20,22,37,40,66],$V21=[2,44],$V31=[2,45],$V41=[2,46],$V51=[2,20,22,37,40,45,66],$V61=[2,48],$V71=[1,304],$V81=[2,40,42],$V91=[2,18,22,39,40,42,44,45,49,50,51,55,56,57,58,59,60,66],$Va1=[1,326],$Vb1=[2,22,44,45,49,50,51,55,56,57,58,59,60,61,62,63,64],$Vc1=[2,40,66],$Vd1=[2,286],$Ve1=[1,401],$Vf1=[2,18,22,39,40,42,44,45,49,50,51,55,56,57,58,59,60,61,62,64,66],$Vg1=[22,44,45,49,50,51,55,56,57,58,59,60,61,62,63,64],$Vh1=[2,106],$Vi1=[2,39,40],$Vj1=[39,83,84];
var parser = {trace: function trace () { },
yy: {},
symbols_: {"error":2,"S":3,"I":4,"EOF":5,"DECLARACION":6,"ASIGNACION":7,"IF":8,"SWITCH":9,"WHILE":10,"DOWHILE":11,"FOR":12,"FESP":13,"FUNCION":14,"USEFUNC":15,"tk_let":16,"tk_id":17,"tk_dospuntos":18,"TIPOV2":19,"tk_igual":20,"VALOR":21,"tk_puntoycoma":22,"tk_const":23,"TYPES":24,"tk_inc":25,"tk_dec":26,"TIPOV":27,"tk_string":28,"tk_number":29,"tk_boolean":30,"tk_void":31,"ARRAY":32,"ASIGTYPE":33,"VARRAY":34,"T":35,"tk_type":36,"tk_llavea":37,"LTYPE":38,"tk_llavec":39,"tk_coma":40,"tk_llaveca":41,"tk_llavecc":42,"tk_array":43,"tk_menor":44,"tk_mayor":45,"LVALARRAY":46,"A":47,"L":48,"tk_ternario":49,"tk_and":50,"tk_or":51,"tk_not":52,"tk_t_boolean":53,"R":54,"tk_mayorigual":55,"tk_menorigual":56,"tk_igualdad":57,"tk_diferente":58,"tk_suma":59,"tk_resta":60,"tk_mult":61,"tk_div":62,"tk_exp":63,"tk_mod":64,"tk_pabierto":65,"tk_pcerrado":66,"tk_t_string":67,"tk_t_entero":68,"tk_t_decimal":69,"VALFUNCION":70,"tk_punto":71,"tk_lenght":72,"BSENTENCIAS":73,"SENTENCIAS":74,"ST":75,"tk_if":76,"ELSE":77,"tk_else":78,"tk_switch":79,"BSWITCH":80,"CASE":81,"DEFAULT":82,"tk_case":83,"tk_default":84,"tk_while":85,"tk_do":86,"tk_for":87,"tk_in":88,"tk_of":89,"tk_break":90,"tk_continue":91,"tk_return":92,"tk_fn":93,"PARFUNC":94,"LPAR":95,"tk_console":96,"tk_graficar":97,"tk_push":98,"tk_pop":99,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",16:"tk_let",17:"tk_id",18:"tk_dospuntos",20:"tk_igual",22:"tk_puntoycoma",23:"tk_const",25:"tk_inc",26:"tk_dec",28:"tk_string",29:"tk_number",30:"tk_boolean",31:"tk_void",36:"tk_type",37:"tk_llavea",39:"tk_llavec",40:"tk_coma",41:"tk_llaveca",42:"tk_llavecc",43:"tk_array",44:"tk_menor",45:"tk_mayor",49:"tk_ternario",50:"tk_and",51:"tk_or",52:"tk_not",53:"tk_t_boolean",55:"tk_mayorigual",56:"tk_menorigual",57:"tk_igualdad",58:"tk_diferente",59:"tk_suma",60:"tk_resta",61:"tk_mult",62:"tk_div",63:"tk_exp",64:"tk_mod",65:"tk_pabierto",66:"tk_pcerrado",67:"tk_t_string",68:"tk_t_entero",69:"tk_t_decimal",71:"tk_punto",72:"tk_lenght",76:"tk_if",78:"tk_else",79:"tk_switch",83:"tk_case",84:"tk_default",85:"tk_while",86:"tk_do",87:"tk_for",88:"tk_in",89:"tk_of",90:"tk_break",91:"tk_continue",92:"tk_return",93:"tk_fn",96:"tk_console",97:"tk_graficar",98:"tk_push",99:"tk_pop"},
productions_: [0,[3,2],[3,1],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[6,7],[6,7],[6,7],[6,7],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,3],[6,3],[6,1],[6,3],[6,3],[6,3],[6,3],[6,2],[6,2],[6,2],[27,1],[27,1],[27,1],[27,1],[27,1],[27,1],[19,1],[19,1],[21,1],[21,1],[21,1],[21,2],[21,2],[21,1],[24,6],[24,6],[24,6],[24,6],[24,6],[24,6],[38,5],[38,3],[33,3],[33,3],[32,3],[32,3],[32,3],[32,3],[32,4],[34,3],[46,3],[46,3],[46,1],[7,4],[7,4],[7,7],[7,7],[35,5],[35,1],[48,3],[48,3],[48,2],[48,1],[48,1],[54,3],[54,3],[54,3],[54,3],[54,3],[54,3],[54,1],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,2],[47,3],[47,1],[47,1],[47,1],[47,4],[47,1],[47,3],[47,4],[47,1],[73,3],[73,2],[74,2],[74,2],[74,2],[74,2],[74,2],[74,2],[74,2],[74,2],[74,2],[74,2],[74,2],[74,1],[74,1],[74,1],[74,1],[74,1],[74,1],[74,1],[74,1],[74,1],[74,1],[74,1],[74,1],[8,6],[8,5],[8,5],[8,5],[8,3],[77,2],[77,2],[9,5],[9,5],[9,5],[9,3],[80,4],[80,3],[80,2],[80,3],[81,5],[81,5],[81,5],[81,5],[81,4],[81,4],[81,4],[81,4],[81,4],[81,4],[81,3],[81,3],[82,3],[82,3],[82,2],[10,5],[10,5],[10,5],[10,5],[10,3],[11,7],[11,7],[11,7],[11,7],[11,7],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,5],[12,3],[75,2],[75,2],[75,2],[75,2],[75,2],[75,2],[75,3],[75,3],[75,2],[14,7],[14,7],[14,7],[14,7],[14,7],[14,7],[14,8],[14,8],[14,8],[14,8],[14,8],[14,8],[94,5],[94,3],[94,1],[15,2],[15,2],[70,3],[70,4],[95,3],[95,1],[13,5],[13,5],[13,5],[13,5],[13,4],[13,4],[13,4],[13,4],[13,6],[13,6],[13,6],[13,6],[13,6],[13,5],[13,5],[13,5],[13,5]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:

          var nodo = new Nodo("S","S",+yylineno+1,+_$[$0-1].first_column+1)
          nodo.addHijo($$[$0-1])
          var texto = ""
          if($$[$0-1].trad){
            texto = $$[$0-1].trad;
          }
          var trad = new Traduccion(nodo,texto,errores.getLista()); 
          errores.limpiar();
          return trad;
        
break;
case 2:

        var trad = new Traduccion(new Nodo("S","S",+yylineno+1,+_$[$0].first_column+1),"",errores.getLista()); 
        errores.limpiar();
        return trad;
      
break;
case 3: case 4:

                  var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
                  nodo.addHijo($$[$0-1]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-1].trad + $$[$0].trad;
                
break;
case 5: case 9:

          var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
          nodo.addHijo($$[$0-1]);
          nodo.addHijo($$[$0]);
          this.$ = nodo;
          this.$.trad = $$[$0-1].trad + $$[$0].trad;
        
break;
case 6: case 8: case 11:

              var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
              nodo.addHijo($$[$0-1]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-1].trad + $$[$0].trad;
            
break;
case 7: case 10:

            var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
            nodo.addHijo($$[$0-1]);
            nodo.addHijo($$[$0]);
            this.$ = nodo;
            this.$.trad = $$[$0-1].trad + $$[$0].trad;
          
break;
case 12:
  
                var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
                nodo.addHijo($$[$0-1]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-1].trad + $$[$0].trad;
             
break;
case 13: case 14: case 15: case 16: case 17: case 18: case 19: case 20: case 107: case 124: case 125: case 126: case 127: case 128: case 129: case 130: case 131: case 132:
 this.$ = $$[$0]; this.$.trad = $$[$0].trad; 
break;
case 21:

              this.$ = $$[$0];
              this.$.trad = $$[$0].trad; 
            
break;
case 22:

            this.$ = $$[$0];
            this.$.trad = $$[$0].trad; 
          
break;
case 23:

          console.error("Error sintactico: "+$$[$0]+" Desconocido Inicio");
          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> DECLARACION || ASIGNACION || IF || SWITCH || WHILE || DOWHILE || FOR || console.log || graficar_ts",+yylineno+1,+_$[$0].last_column+1)
          errores.addError(error);
          this.$ = new Nodo("","")
          this.$.trad = "";
        
break;
case 24:
 
                                                                            var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-6].first_column+1);
                                                                            var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                            nodo.addHijo(id);
                                                                            nodo.addHijo($$[$0-3]); //tipo
                                                                            nodo.addHijo($$[$0-1]); //valor
                                                                            this.$ = nodo;
                                                                            this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                          
break;
case 25:

                                                                    console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                                    var error = new Error("Sintactico","Encontrado: \""+$$[$0]+"\" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1)
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-6].first_column+1);
                                                                    var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                    nodo.addHijo(id);
                                                                    nodo.addHijo($$[$0-3]); //tipo
                                                                    nodo.addHijo($$[$0-1]); //valor
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                                  
break;
case 26:

                                                                              var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-6].first_column+1);
                                                                              var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                              nodo.addHijo(id);
                                                                              nodo.addHijo($$[$0-3]); //tipo
                                                                              nodo.addHijo($$[$0-1]); //valor
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                            
break;
case 27:

                                                                      console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                                      errores.addError(error);

                                                                      var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-6].first_column+1);
                                                                      var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                      nodo.addHijo(id);
                                                                      nodo.addHijo($$[$0-3]); //tipo
                                                                      nodo.addHijo($$[$0-1]); //valor
                                                                      this.$ = nodo;
                                                                      this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                                    
break;
case 28:

                                                        var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                        var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                        nodo.addHijo(id);
                                                        nodo.addHijo($$[$0-1]);
                                                        this.$ = nodo;
                                                        this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                      
break;
case 29:

                                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                errores.addError(error);

                                                var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                              
break;
case 30:

                                                          var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-4].first_column+1);
                                                          var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                          nodo.addHijo(id);
                                                          nodo.addHijo($$[$0-1]);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                        
break;
case 31:

                                                  console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                  errores.addError(error);

                                                  var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-4].first_column+1);
                                                  var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                  nodo.addHijo(id);
                                                  nodo.addHijo($$[$0-1]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                
break;
case 32:

                                                            var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                            var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                            nodo.addHijo(id);
                                                            nodo.addHijo($$[$0-1]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                          
break;
case 33:

                                                    console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                    errores.addError(error);

                                                    var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                    var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                    nodo.addHijo(id);
                                                    nodo.addHijo($$[$0-1]);
                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                  
break;
case 34:

                                        var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+" "+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 35:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+" "+$$[$0-1]+";\n";
                              
break;
case 36:

                    this.$ = $$[$0];
                    this.$.trad = $$[$0].trad;
                  
break;
case 37:

                                        var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-1].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 38:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+$$[$0-1]+";\n";
                              
break;
case 39:

                                        var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 40:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+$$[$0-1]+";\n";
                              
break;
case 41: case 43:

                          console.error("Error Sintactico: "+$$[$0]+" error de declaracion");
                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> incremento o decremento",+yylineno+1,+_$[$0].last_column+1);
                          errores.addError(error);

                          this.$ = new Nodo("","")
                          this.$.trad = "";
                        
break;
case 42:

                            console.error("Error Sintactico: "+$$[$0]+" error de declaracion");
                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> incremento o decremento",+yylineno+1,+_$[$0].last_column+1);
                            errores.addError(error);

                            this.$ = new Nodo("","")
                            this.$.trad = "";
                          
break;
case 44:

                  var nodo = new Nodo("TIPO","STRING",+yylineno+1,+_$[$0].first_column+1); 
                  this.$ = nodo;
                  this.$.trad = $$[$0]; 
                
break;
case 45:

                  var nodo = new Nodo("TIPO","NUMBER",+yylineno+1,+_$[$0].first_column+1); 
                  this.$ = nodo;
                  this.$.trad = $$[$0]; 
                
break;
case 46:

                    var nodo = new Nodo("TIPO","BOOLEAN",+yylineno+1,+_$[$0].first_column+1); 
                    this.$ = nodo;
                    this.$.trad = $$[$0]; 
                  
break;
case 47:

                var nodo = new Nodo("TIPO","VOID",+yylineno+1,+_$[$0].first_column+1); 
                this.$ = nodo;
                this.$.trad = $$[$0]; 
              
break;
case 48:

              var nodo = new Nodo("TIPO","ID",+yylineno+1,+_$[$0].first_column+1);
              var id = new Nodo("ID",$$[$0],+yylineno+1,+_$[$0].first_column+1);
              nodo.addHijo(id); 
              this.$ = nodo;
              this.$.trad = $$[$0]; 
            
break;
case 49:

              console.error("Error sintactico: "+$$[$0]+" error tipo");
              var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> un tipo de dato",+yylineno+1,+_$[$0].last_column+1);
              errores.addError(error);
              this.$ = new Nodo("","")
              this.$.trad = "";
            
break;
case 50: case 51:
 
              this.$ = $$[$0];
              this.$.trad = $$[$0].trad; 
            
break;
case 52:
 
                  this.$ = $$[$0];
                  this.$.trad = $$[$0].trad; 
                
break;
case 53:
 
                this.$ = $$[$0];
                this.$.trad = $$[$0].trad; 
              
break;
case 54:
 
          this.$ = $$[$0];
          this.$.trad = $$[$0].trad;
        
break;
case 55:
 
                      var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-1].first_column+1);
                      var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1)
                      nodo.addHijo(id);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1] + $$[$0];
                    
break;
case 56:
 
                      var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-1].first_column+1);
                      var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1)
                      nodo.addHijo(id);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1] + $$[$0];
                    
break;
case 57:

              console.error("Error sintactico: "+$$[$0]+" error valor");
              var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> un valor o operacion",+yylineno+1,+_$[$0].last_column+1);
              errores.addError(error);
              this.$ = new Nodo("","")
              this.$.trad = "";
            
break;
case 58:

                                                              var nodo = new Nodo("DECLARACION","TYPE",+yylineno+1,+_$[$0-5].first_column+1);
                                                              var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].first_column+1);
                                                              nodo.addHijo(id);
                                                              nodo.addHijo($$[$0-2]); //lista
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-5] + " " + $$[$0-4] + $$[$0-3] + "\n" + $$[$0-2].trad +"\n"+$$[$0-1] + $$[$0] + "\n";  
                                                            
break;
case 63:

                                                        console.error("Error sintantico: "+$$[$0]+" error types");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                        errores.addError(error);

                                                        var nodo = new Nodo("DECLARACION","TYPE",+yylineno+1,+_$[$0-5].first_column+1);
                                                        var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-5].first_column+1);
                                                        nodo.addHijo(id);
                                                        nodo.addHijo($$[$0-2]); //lista
                                                        this.$ = nodo;
                                                        this.$.trad = $$[$0-5] + " " + $$[$0-4] + $$[$0-3] + "\n" + $$[$0-2].trad + $$[$0-1] + ";\n";
                                                     
break;
case 64:

                                                var nodo = new Nodo("LTYPE","LTYPE",+yylineno+1,+_$[$0-4].first_column+1);
                                                var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                                nodo.addHijo($$[$0-4]);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4].trad+$$[$0-3]+"\n"+$$[$0-2]+$$[$0-1]+" "+$$[$0].trad;
                                              
break;
case 65:

                                  var nodo = new Nodo("LTYPE","LTYPE",+yylineno+1,+_$[$0-2].first_column+1);
                                  var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0].first_column+1);
                                  nodo.addHijo(id);
                                  nodo.addHijo($$[$0]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2]+$$[$0-1]+" "+$$[$0].trad;
                                
break;
case 66:

                                      this.$ = $$[$0-1];
                                      this.$.trad = $$[$0-2] + "\n" + $$[$0-1].trad +"\n"+ $$[$0];
                                    
break;
case 67:

                                      console.error("Error sintactico: "+$$[$0-1]+" error valor");
                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> una lista de valores",+yylineno+1,+_$[$0-1].last_column+1);
                                      errores.addError(error);

                                      var nodo = new Nodo("","");
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2] + "\n" + $$[$0];
                                    
break;
case 68:

                                          var nodo = new Nodo("TIPO","ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                       
break;
case 69:

                                        var nodo = new Nodo("TIPO","ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                      
break;
case 70:

                                        var nodo = new Nodo("TIPO","ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                       
break;
case 71:

                                    var nodo = new Nodo("TIPO","ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                    var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                    nodo.addHijo(id)
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                  
break;
case 72:

                                          var nodo = new Nodo("TIPO","ARRAY",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-1])
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                        
break;
case 73:

                                          var nodo = new Nodo("VARRAY","VARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                          nodo.addHijo($$[$0-1]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-2] + $$[$0-1].trad + $$[$0];
                                        
break;
case 74:

                                      var nodo = new Nodo("LISTA_ARRAY","LISTA_ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                      nodo.addHijo($$[$0-2]);
                                      nodo.addHijo($$[$0]);
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2].trad + $$[$0-1] + " " + $$[$0].trad;
                                   
break;
case 75:

                                  console.error("Error sintactico: "+$$[$0-1]+" error valor");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> ,",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  var nodo = new Nodo("LISTA_ARRAY","LISTA_ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                  nodo.addHijo($$[$0-2]);
                                  nodo.addHijo($$[$0]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2].trad + ", " + $$[$0].trad;
                                
break;
case 76:

                  this.$ = $$[$0];
                  this.$.trad = $$[$0].trad;
                
break;
case 77:
 
                                                var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-3].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                              
break;
case 78:

                                        console.log("Error Sintactico "+$$[$0]+"Error falto punto y coma");
                                        var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                        errores.addError(error);

                                        var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-3].first_column+1);
                                        var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                        nodo.addHijo(id);
                                        nodo.addHijo($$[$0-1]);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                      
break;
case 79:

                                                                        var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-6].first_column+1);
                                                                        var arr = new Nodo("ARRAY","ARRAY",+yylineno+1,+_$[$0-6].first_column+1);
                                                                        var id = new Nodo("ID",$$[$0-6],+yylineno+1,+_$[$0-6].first_column+1);
                                                                        arr.addHijo(id);
                                                                        arr.addHijo($$[$0-4]);
                                                                        nodo.addHijo(arr);
                                                                        nodo.addHijo($$[$0-1]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                      
break;
case 80:

                                                                console.log("Error Sintactico "+$$[$0-3]+"Error falto punto y coma");
                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> ;",+yylineno+1,+_$[$0-3].last_column+1);
                                                                errores.addError(error);

                                                                var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-6].first_column+1);
                                                                var arr = new Nodo("ARRAY","ARRAY",+yylineno+1,+_$[$0-6].first_column+1);
                                                                var id = new Nodo("ID",$$[$0-6],+yylineno+1,+_$[$0-6].first_column+1);
                                                                arr.addHijo(id);
                                                                arr.addHijo($$[$0-4]);
                                                                nodo.addHijo(arr);
                                                                nodo.addHijo($$[$0-1]);
                                                                this.$ = nodo;
                                                                this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                              
break;
case 81:

                                    var nodo = new Nodo("T","T",+yylineno+1,+_$[$0-4].first_column+1);
                                    nodo.addHijo($$[$0-4]);
                                    nodo.addHijo($$[$0-2]);
                                    nodo.addHijo($$[$0]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-4].trad + " " + $$[$0-3] + " " + $$[$0-2].trad +$$[$0-1]+$$[$0].trad;
                                  
break;
case 82:
 
      this.$ = $$[$0]; 
      this.$.trad = $$[$0].trad; 
    
break;
case 83:

                var nodo = new Nodo("L","AND",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 84:

              var nodo = new Nodo("L","OR",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 85:

              var nodo = new Nodo("L","NOT",+yylineno+1,+_$[$0-1].first_column+1);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-1] + " " + $$[$0].trad;
            
break;
case 86:

                  var nodo = new Nodo("BOOLEAN",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                  this.$ = nodo;
                  this.$.trad = $$[$0]
                
break;
case 87:

       this.$=$$[$0];
       this.$.trad = $$[$0].trad;
     
break;
case 88:

                  var nodo = new Nodo("R","MAYOR",+yylineno+1,+_$[$0-2].first_column+1);
                  nodo.addHijo($$[$0-2]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                
break;
case 89:

                  var nodo = new Nodo("R","MENOR",+yylineno+1,+_$[$0-2].first_column+1);
                  nodo.addHijo($$[$0-2]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                
break;
case 90:

                      var nodo = new Nodo("R","MAYORIGUAL",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 91:

                      var nodo = new Nodo("R","MENORIGUAL",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 92:

                      var nodo = new Nodo("R","IGUALDAD",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                   
break;
case 93:

                      var nodo = new Nodo("R","DESIGUALDAD",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 94:

      this.$ = $$[$0];
      this.$.trad = $$[$0].trad;
    
break;
case 95:

                var nodo = new Nodo("A","SUMA",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 96:

                var nodo = new Nodo("A","RESTA",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 97:

                var nodo = new Nodo("A","MULTI",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 98:

              var nodo = new Nodo("A","DIV",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 99:

              var nodo = new Nodo("A","EXP",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 100:

              var nodo = new Nodo("A","MOD",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 101:

                var nodo = new Nodo("NEGATIVO","NEGATIVO",+yylineno+1,+_$[$0-1].first_column+1);
                nodo.addHijo($$[$0])
                this.$ = nodo;
                this.$.trad = $$[$0-1] + $$[$0].trad;
             
break;
case 102:

                              this.$ = $$[$0-1];
                              this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+" "+$$[$0];
                           
break;
case 103:

                var nodo = new Nodo("STRING",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = "\""+$$[$0]+"\"";
              
break;
case 104:

                var nodo = new Nodo("ENTERO",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = $$[$0];
              
break;
case 105:

                var nodo = new Nodo("DECIMAL",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = $$[$0];
              
break;
case 106:

                                  var nodo = new Nodo("ARRAY","ARRAY",+yylineno+1,+_$[$0-3].first_column+1);
                                  var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                  nodo.addHijo(id);
                                  nodo.addHijo($$[$0-1]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                
break;
case 108:

                          var nodo = new Nodo("PROPIEDAD","PROPIEDAD",+yylineno+1,+_$[$0-2].first_column+1);
                          var id1 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                          var id2 = new Nodo("ID",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                          nodo.addHijo(id1);
                          nodo.addHijo(id2);
                          this.$ = nodo;
                          this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                        
break;
case 109:

                                              var nodo = new Nodo("LENGTH","LENGTH",+yylineno+1,+_$[$0-3].last_column+1);
                                              var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                              nodo.addHijo(id);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0];
                                            
break;
case 110:

            var nodo = new Nodo("ID",$$[$0],+yylineno+1,+_$[$0].first_column+1);
            this.$ = nodo;
            this.$.trad = $$[$0];
          
break;
case 111:

                                              //console.log("BSENTENCIAS-----------------")
                                              //var s =  eval('$$');
                                              //console.log(s)
                                              this.$ = $$[$0-1];
                                              if($$[$0-1].func){
                                                this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n"+$$[$0-1].func;
                                              } else {
                                                this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n";
                                              }
                                            
break;
case 112:

                                  //console.log("BSENTENCIAS-----------------")
                                  //var s =  eval('$$');
                                  //console.log(s)
                                  this.$ = new Nodo("","");
                                  this.$.trad = $$[$0-1]+$$[$0]+"\n";
                                
break;
case 113:

                                      var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                      nodo.addHijo($$[$0-1]);
                                      nodo.addHijo($$[$0]);
                                      this.$ = nodo;
                                      this.$.func = $$[$0-1].func;
                                      this.$.trad = $$[$0-1].trad + $$[$0].trad;
                                   
break;
case 114:

                                    var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                    nodo.addHijo($$[$0-1]);
                                    nodo.addHijo($$[$0]);
                                    this.$ = nodo;
                                    this.$.func = $$[$0-1].func;
                                    this.$.trad = $$[$0-1].trad + $$[$0].trad;
                                  
break;
case 115: case 119:

                            var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                            nodo.addHijo($$[$0-1]);
                            nodo.addHijo($$[$0]);
                            this.$ = nodo;
                            this.$.func = $$[$0-1].func;
                            this.$.trad = $$[$0-1].trad + $$[$0].trad;
                          
break;
case 116: case 118: case 123:

                                var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo($$[$0-1]);
                                nodo.addHijo($$[$0]);
                                this.$ = nodo;
                                this.$.func = $$[$0-1].func;
                                this.$.trad = $$[$0-1].trad + $$[$0].trad;
                              
break;
case 117:

                              var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              nodo.addHijo($$[$0]);
                              this.$ = nodo;
                              this.$.func = $$[$0-1].func;
                              this.$.trad = $$[$0-1].trad + $$[$0].trad;
                            
break;
case 120:
  
                            var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                            nodo.addHijo($$[$0-1]);
                            nodo.addHijo($$[$0]);
                            this.$ = nodo;
                            this.$.func = $$[$0-1].func;
                            this.$.trad = $$[$0-1].trad + $$[$0].trad;
                          
break;
case 121:
  
                              var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              nodo.addHijo($$[$0]);
                              this.$ = nodo;
                              this.$.func = $$[$0-1].func;
                              this.$.trad = $$[$0-1].trad + $$[$0].trad;
                            
break;
case 122:
  
                                var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo($$[$0-1]);
                                nodo.addHijo($$[$0]);
                                this.$ = nodo;
                                if($$[$0-1].func){
                                  this.$.func = $$[$0-1].func + $$[$0].func;
                                } else {
                                  this.$.func = $$[$0].func;
                                }
                                this.$.trad = $$[$0-1].trad;
                              
break;
case 133:
 
                     this.$ = $$[$0]; 
                     this.$.func = $$[$0].func;
                     this.$.trad = ""; 
                    
break;
case 134:
this.$ = $$[$0]; this.$.trad = $$[$0].trad;
break;
case 135:

                    console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> DECLARACION||ASIGNACION||IF||SWITCH||WHILE||DO WHILE||SENTENCIAS DE TRANSFARENCIA||console.log()||graficar_ts()",+yylineno+1,+_$[$0].last_column+1);
                    errores.addError(error);
                    this.$ = new Nodo("","");
                    this.$.trad = "";
                  
break;
case 136:

                                                      var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-5].first_column+1);
                                                      nodo.addHijo($$[$0-3]); //condicion
                                                      nodo.addHijo($$[$0-1]); //sentencias
                                                      nodo.addHijo($$[$0]); //else
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3].trad+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                    
break;
case 137:

                                                  var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                                  nodo.addHijo($$[$0-2]); //condicion
                                                  nodo.addHijo($$[$0]); //sentencias
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                
break;
case 138:

                                            console.error("Error Sintactico: "+$$[$0-3]+" Error parametros en if")
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                            nodo.addHijo($$[$0-2]); //condicion
                                            nodo.addHijo($$[$0]); //sentencias
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-4]+"("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                          
break;
case 139:

                                            console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en if")
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                            nodo.addHijo($$[$0-2]); //condicion
                                            nodo.addHijo($$[$0]); //sentencias
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                          
break;
case 140:

                              console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en if")
                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Condicion en if",+yylineno+1,+_$[$0-1].last_column+1);
                              errores.addError(error);

                              this.$ = new Nodo("","");
                              this.$.trad = "";
                            
break;
case 141:

                            var nodo = new Nodo("ELSE","ELSE",+yylineno+1,+_$[$0-1].first_column+1)
                            nodo.addHijo($$[$0]);

                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                          
break;
case 142:

                  var nodo = new Nodo("ELSE","ELSE",+yylineno+1,+_$[$0-1].first_column+1)
                  nodo.addHijo($$[$0]);

                  this.$ = nodo;
                  this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                
break;
case 143:

                                                      var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                      nodo.addHijo($$[$0-2]);
                                                      nodo.addHijo($$[$0]);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                    
break;
case 144:

                                                console.error("Error Sintactico: "+$$[$0-3]+" Error parametros en switch")
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                errores.addError(error);

                                                var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" ("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                              
break;
case 145:

                                                console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en switch")
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                errores.addError(error);

                                                var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                              
break;
case 146:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en switch")
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> condicion del switch",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  this.$ = new Nodo("","");
                                  this.$.trad = "";
                                
break;
case 147:

                                            var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-3].first_column+1);
                                            nodo.addHijo($$[$0-2]);
                                            nodo.addHijo($$[$0-1]);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-3]+"\n"+$$[$0-2].trad+$$[$0-1].trad+$$[$0]+"\n";
                                          
break;
case 148:

                                  var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-2].first_column+1);
                                  nodo.addHijo($$[$0-1]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n";
                                
break;
case 149:

                            var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-1].first_column+1);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+"\n"+$$[$0]+"\n";
                          
break;
case 150:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> CASE o DEFAULT",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-2].first_column+1);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2]+"\n"+$$[$0]+"\n";
                                
break;
case 151:

                                              var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-4].first_column+1);
                                              nodo.addHijo($$[$0-4]);
                                              nodo.addHijo($$[$0-2]);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-4].trad+$$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+"\n"+$$[$0].trad;
                                            
break;
case 152:

                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                                  errores.addError(error);

                                                  this.$ = new Nodo("","");
                                                  this.$.trad = "";
                                                
break;
case 153:

                                                var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-4]);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4].trad+$$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                              
break;
case 154:

                                                    console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                                    errores.addError(error);

                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                 
break;
case 155:

                                    var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                    nodo.addHijo($$[$0-3]);
                                    nodo.addHijo($$[$0-1]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-3].trad+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                  
break;
case 156:

                                        console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-1].last_column+1);
                                        errores.addError(error);

                                        this.$ = new Nodo("","");
                                        this.$.trad = "";
                                      
break;
case 157:

                                          var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-2]);
                                          nodo.addHijo($$[$0]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+"\n"+$$[$0].trad;
                                        
break;
case 158: case 160:

                                              console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                              errores.addError(error);

                                              this.$ = new Nodo("","");
                                              this.$.trad = "";
                                            
break;
case 159:

                                          var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-2]);
                                          nodo.addHijo($$[$0]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                        
break;
case 161:

                              var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-2].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              this.$ = nodo;
                              this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                            
break;
case 162:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  this.$ = new Nodo("","");
                                  this.$.trad = "";
                                
break;
case 163:

                                              var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-2].last_column+1);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-2]+$$[$0-1]+"\n"+$$[$0].trad;
                                            
break;
case 164:

                                              var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-2].last_column+1);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0].trad;
                                            
break;
case 165:

                                  var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-1].last_column+1);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-1]+$$[$0]+"\n";
                                
break;
case 166:

                                                        var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                        nodo.addHijo($$[$0-2]);
                                                        nodo.addHijo($$[$0]);
                                                        this.$ = nodo;
                                                        this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                      
break;
case 167:

                                                  console.error("Error Sintactico: "+$$[$0-3]+" Error en While");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo($$[$0-2]);
                                                  nodo.addHijo($$[$0]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+"("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                
break;
case 168:

                                                            console.error("Error Sintactico: "+$$[$0-2]+" Error en While");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> (",+yylineno+1,+_$[$0-2].last_column+1);
                                                            errores.addError(error);

                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 169:

                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en While");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> (",+yylineno+1,+_$[$0-1].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo($$[$0-2]);
                                                  nodo.addHijo($$[$0]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                                
break;
case 170:

                                    console.error("Error Sintactico: "+$$[$0]+" Error en While");
                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Parametros While",+yylineno+1,+_$[$0].last_column+1);
                                    errores.addError(error);

                                    this.$ = new Nodo("","");
                                    this.$.trad = "";
                                  
break;
case 171:

                                                                              var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                              nodo.addHijo($$[$0-5]);
                                                                              nodo.addHijo($$[$0-2]);
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                            
break;
case 172:

                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                        nodo.addHijo($$[$0-5]);
                                                                        nodo.addHijo($$[$0-2]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5].trad+"("+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                      
break;
case 173:

                                                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error en do While");
                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametros do While",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                  errores.addError(error);
                                                                                  
                                                                                  this.$ = new Nodo("","");
                                                                                  this.$.trad = "";
                                                                                
break;
case 174:

                                                                        console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                        nodo.addHijo($$[$0-5]);
                                                                        nodo.addHijo($$[$0-2]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0]+"\n";
                                                                      
break;
case 175:

                                                                      console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                                      errores.addError(error);

                                                                      var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                      nodo.addHijo($$[$0-5]);
                                                                      nodo.addHijo($$[$0-2]);
                                                                      this.$ = nodo;
                                                                      this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                                    
break;
case 176:

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                        
                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 177:
  
                                                                                                                  console.error("Error Sintactico: "+$$[$0-11]+" Error en for");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-11]+" Se esperaba -> (",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+"("+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 178:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-10]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> let",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                      var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      dec.addHijo(id1);
                                                                                                                      dec.addHijo($$[$0-7]);

                                                                                                                      var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      inc.addHijo(id2);

                                                                                                                      nodo.addHijo(dec); //declaracion
                                                                                                                      nodo.addHijo($$[$0-5]); //condicion
                                                                                                                      nodo.addHijo(inc); //incremento
                                                                                                                      nodo.addHijo($$[$0]); //sentencias

                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+"let"+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;    
                                                                                                                    
break;
case 179: case 191:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-9]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-9]+" Se esperaba -> id",+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        this.$ = new Nodo("","");
                                                                                                                        this.$.trad = "";
                                                                                                                      
break;
case 180:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-8]+" Error en do While");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                    var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                    dec.addHijo(id1);
                                                                                                                    dec.addHijo($$[$0-7]);

                                                                                                                    var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                    var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                    inc.addHijo(id2);

                                                                                                                    nodo.addHijo(dec); //declaracion
                                                                                                                    nodo.addHijo($$[$0-5]); //condicion
                                                                                                                    nodo.addHijo(inc); //incremento
                                                                                                                    nodo.addHijo($$[$0]); //sentencias

                                                                                                                    this.$ = nodo;
                                                                                                                    this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                  
break;
case 181:

                                                                                                                console.error("Error Sintactico: "+$$[$0-6]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 182: case 194:

                                                                                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en do While");
                                                                                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> Condicion For",+yylineno+1,+_$[$0-5].last_column+1);
                                                                                                                            errores.addError(error);

                                                                                                                            this.$ = new Nodo("","");
                                                                                                                            this.$.trad = "";
                                                                                                                          
break;
case 183:

                                                                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias
                                                                                                                
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 184:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
    
                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 185:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-2]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ++||--",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                      var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      dec.addHijo(id1);
                                                                                                                      dec.addHijo($$[$0-7]);

                                                                                                                      var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      inc.addHijo(id2);

                                                                                                                      nodo.addHijo(dec); //declaracion
                                                                                                                      nodo.addHijo($$[$0-5]); //condicion
                                                                                                                      nodo.addHijo(inc); //incremento
                                                                                                                      nodo.addHijo($$[$0]); //sentencias

                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+"++"+$$[$0-1]+$$[$0].trad;
                                                                                                                    
break;
case 186:

                                                                                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 187:

                                                                                                                  console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> SENTENCIAS",+yylineno+1,+_$[$0].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                                
break;
case 188:

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 189:
  
                                                                                                                  console.error("Error Sintactico: "+$$[$0-11]+" Error en for");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-11]+" Se esperaba -> (",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+"("+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 190:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-10]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> let",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                      var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      dec.addHijo(id1);
                                                                                                                      dec.addHijo($$[$0-7]);

                                                                                                                      var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      inc.addHijo(id2);

                                                                                                                      nodo.addHijo(dec); //declaracion
                                                                                                                      nodo.addHijo($$[$0-5]); //condicion
                                                                                                                      nodo.addHijo(inc); //incremento
                                                                                                                      nodo.addHijo($$[$0]); //sentencias

                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+"let"+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;    
                                                                                                                    
break;
case 192:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-8]+" Error en do While");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                    var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                    dec.addHijo(id1);
                                                                                                                    dec.addHijo($$[$0-7]);

                                                                                                                    var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                    var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                    inc.addHijo(id2);

                                                                                                                    nodo.addHijo(dec); //declaracion
                                                                                                                    nodo.addHijo($$[$0-5]); //condicion
                                                                                                                    nodo.addHijo(inc); //incremento
                                                                                                                    nodo.addHijo($$[$0]); //sentencias

                                                                                                                    this.$ = nodo;
                                                                                                                    this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                  
break;
case 193:

                                                                                                                console.error("Error Sintactico: "+$$[$0-6]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 195:

                                                                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias
                                                                                                                
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 196:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 197:

                                                                                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 198:

                                                                                                                  console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> SENTENCIAS",+yylineno+1,+_$[$0].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                                
break;
case 199:

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 200:

                                                                                                          console.error("Error Sintactico: "+$$[$0-10]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> (",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //incremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+"("+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                        
break;
case 201: case 212:

                                                                                                                console.error("Error Sintactico: "+$$[$0-9]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-9]+" Se esperaba -> id",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                this.$ = new Nodo("","");
                                                                                                                this.$.trad = "";
                                                                                                              
break;
case 202:

                                                                                                              console.error("Error Sintactico: "+$$[$0-8]+" Error en for");
                                                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                              errores.addError(error);

                                                                                                              var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                              var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                              var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                              dec.addHijo(id1);
                                                                                                              dec.addHijo($$[$0-7]);

                                                                                                              var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                              var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                              inc.addHijo(id2);

                                                                                                              nodo.addHijo(dec); //declaracion
                                                                                                              nodo.addHijo($$[$0-5]); //condicion
                                                                                                              nodo.addHijo(inc); //incremento
                                                                                                              nodo.addHijo($$[$0]); //sentencias

                                                                                                              this.$ = nodo;
                                                                                                              this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                            
break;
case 203:

                                                                                                        console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 204: case 215:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> condicion for",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    this.$ = new Nodo("","");
                                                                                                                    this.$.trad = "";
                                                                                                                  
break;
case 205:

                                                                                                        console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 206:

                                                                                                                console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 207:
  
                                                                                                                console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ++||--",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+"++"+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 208:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //incremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+")"+$$[$0].trad;
                                                                                                        
break;
case 209:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //incremento
                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                        
break;
case 210:

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //decremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 211:

                                                                                                          console.error("Error Sintactico: "+$$[$0-10]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> (",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //decremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+"("+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                        
break;
case 213:

                                                                                                              console.error("Error Sintactico: "+$$[$0-8]+" Error en for");
                                                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                              errores.addError(error);

                                                                                                              var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                              var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                              var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                              dec.addHijo(id1);
                                                                                                              dec.addHijo($$[$0-7]);

                                                                                                              var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                              var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                              inc.addHijo(id2);

                                                                                                              nodo.addHijo(dec); //declaracion
                                                                                                              nodo.addHijo($$[$0-5]); //condicion
                                                                                                              nodo.addHijo(inc); //decremento
                                                                                                              nodo.addHijo($$[$0]); //sentencias

                                                                                                              this.$ = nodo;
                                                                                                              this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                            
break;
case 214:

                                                                                                        console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //decremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 216:

                                                                                                        console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //decremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 217:

                                                                                                                console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //decremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 218:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //decremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+")"+$$[$0].trad;
                                                                                                        
break;
case 219:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //decremento

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                        
break;
case 220:

                                                                  var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-6].last_column+1);
                                                                  var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                  var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                  nodo.addHijo(id1);
                                                                  nodo.addHijo(id2);
                                                                  nodo.addHijo($$[$0]);
                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                
break;
case 221:

                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> (",+yylineno+1,+_$[$0-5].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+"("+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                          
break;
case 222: case 243:

                                                                  console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-4].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 223: case 245:

                                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> id",+yylineno+1,+_$[$0-2].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 224:

                                                            var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);
                                                            nodo.addHijo($$[$0]);

                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                          
break;
case 225:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);

                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                          
break;
case 226:

                                                                          var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1)
                                                                          var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                          dec.addHijo(id1);
                                                                          nodo.addHijo(dec);
                                                                          nodo.addHijo(id2);
                                                                          nodo.addHijo($$[$0]);
                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 227:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 228:

                                                                        console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> let||const",+yylineno+1,+_$[$0-5].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1)
                                                                        var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                        var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                        dec.addHijo(id1);
                                                                        nodo.addHijo(dec);
                                                                        nodo.addHijo(id2);
                                                                        nodo.addHijo($$[$0]);

                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-7]+$$[$0-6]+"let"+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                      
break;
case 229: case 236:

                                                                          console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-5].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 230: case 237:

                                                                          console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> in, of",+yylineno+1,+_$[$0-3].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 231: case 238: case 252: case 258:

                                                                          console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> id",+yylineno+1,+_$[$0-2].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 232:

                                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 233:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 234:

                                                                          var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1)
                                                                          var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                          dec.addHijo(id1);
                                                                          nodo.addHijo(dec);
                                                                          nodo.addHijo(id2);
                                                                          nodo.addHijo($$[$0]);
                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 235:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 239:

                                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 240:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 241:

                                                                  var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-6].last_column+1);
                                                                  var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                  var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                  nodo.addHijo(id1);
                                                                  nodo.addHijo(id2);
                                                                  nodo.addHijo($$[$0]);

                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                
break;
case 242:

                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> (",+yylineno+1,+_$[$0-5].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);
                                                            nodo.addHijo($$[$0]);

                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+"("+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                          
break;
case 244:

                                                                  console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> in||of",+yylineno+1,+_$[$0-3].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 246:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);
                                                            nodo.addHijo($$[$0]);

                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                          
break;
case 247:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);

                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                          
break;
case 248:

                                                                          var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1);
                                                                          var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                          dec.addHijo(id1);
                                                                          nodo.addHijo(dec);
                                                                          nodo.addHijo(id2);
                                                                          nodo.addHijo($$[$0]);

                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 249:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 250:

                                                                        console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> let|const",+yylineno+1,+_$[$0-5].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1);
                                                                        var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                        var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                        dec.addHijo(id1);
                                                                        nodo.addHijo(dec);
                                                                        nodo.addHijo(id2);
                                                                        nodo.addHijo($$[$0]);

                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-7]+$$[$0-6]+"let"+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                      
break;
case 251: case 257:

                                                                          console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-4].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 253:

                                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 254:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 255:

                                                                          var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1);
                                                                          var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                          dec.addHijo(id1);
                                                                          nodo.addHijo(dec);
                                                                          nodo.addHijo(id2);
                                                                          nodo.addHijo($$[$0]);

                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 256:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 259:

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 260:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 261:
 
                                                      console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-2].last_column+1);
                                                      errores.addError(error);

                                                      this.$ = new Nodo("","")
                                                      this.$.trad = "";
                                                    
break;
case 262:

                              console.error("Error Sintactico: "+$$[$0-1]+" Error parametros for");
                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                              errores.addError(error);

                              this.$ = new Nodo("","")
                              this.$.trad = "";
                            
break;
case 263:

                            var nodo = new Nodo("BREAK","BREAK",+yylineno+1,+_$[$0-1].last_column+1);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+$$[$0]+"\n";
                          
break;
case 264:

                    console.error("Error Sintactico: "+$$[$0]+" Error break");
                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                    errores.addError(error);

                    var nodo = new Nodo("BREAK","BREAK",+yylineno+1,+_$[$0-1].last_column+1);
                    this.$ = nodo;
                    this.$.trad = $$[$0-1]+";\n";
                  
break;
case 265:

                                var nodo = new Nodo("CONTINUE","CONTINUE",+yylineno+1,+_$[$0-1].last_column+1);
                                this.$ = nodo;
                                this.$.trad = $$[$0-1]+$$[$0]+"\n";
                              
break;
case 266:

                        console.error("Error Sintactico: "+$$[$0]+" Error continue");
                        var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                        errores.addError(error);

                        var nodo = new Nodo("CONTINUE","CONTINUE",+yylineno+1,+_$[$0-1].last_column+1);
                        this.$ = nodo;
                        this.$.trad = $$[$0-1]+";\n";
                      
break;
case 267:

                              var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                              this.$ = nodo;
                              this.$.trad = $$[$0-1]+$$[$0]+"\n";
                            
break;
case 268:

                      console.error("Error Sintactico: "+$$[$0]+" Error return");
                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                      errores.addError(error);

                      var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1]+";\n";
                    
break;
case 269:

                                    var nodo = new Nodo("RETURN","VALOR",+yylineno+1,+_$[$0-2].last_column+1);
                                    nodo.addHijo($$[$0-1]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                  
break;
case 270:

                            console.error("Error Sintactico: "+$$[$0]+" Error return");
                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                            errores.addError(error);

                            var nodo = new Nodo("RETURN","VALOR",+yylineno+1,+_$[$0-2].last_column+1);
                            nodo.addHijo($$[$0-1]);
                            this.$ = nodo;
                            this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+";\n";
                          
break;
case 271:

                          var nodo = new Nodo("RETURN","ASIGNACION",+yylineno+1,+_$[$0-1].last_column+1);
                          nodo.addHijo($$[$0]);
                          this.$ = nodo;
                          this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                        
break;
case 272:
 
                                                                              var s =  eval('$$');
                                                                              var ids = "";
                                                                              for(var i=0;i<s.length;i++){
                                                                                if(s[i] === $$[$0-6]){
                                                                                    ids += s[i+1]+"_";
                                                                                }
                                                                              }
                                                                              var nodo = new Nodo("FUNCION","FUNCION",+yylineno+1,+_$[$0-6].first_column+1);
                                                                              var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                              nodo.addHijo(id);
                                                                              nodo.addHijo($$[$0-1]);
                                                                              nodo.addHijo($$[$0]);
                                                                              this.$ = nodo;
                                                                              this.$.func = $$[$0-6]+" "+ids.replace(/.$/,"")+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                              this.$.trad = this.$.func;  
                                                                            
break;
case 273:

                                                                              console.error("Error sintactico: "+$$[$0-5]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> id"+yylineno+1,+_$[$0-5].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 274:

                                                                        console.error("Error sintactico: "+$$[$0-4]+" Desconocido Sentencias");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ("+yylineno+1,+_$[$0-4].last_column+1);
                                                                        
                                                                        errores.addError(error);
                                                                        this.$ = new Nodo("","");
                                                                        this.$.trad = "";
                                                                      
break;
case 275:

                                                                        console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> )"+yylineno+1,+_$[$0-3].last_column+1);
                                                                        
                                                                        errores.addError(error);
                                                                        this.$ = new Nodo("","");
                                                                        this.$.trad = "";
                                                                      
break;
case 276:

                                                                      console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> :"+yylineno+1,+_$[$0-2].last_column+1);
                                                                      
                                                                      errores.addError(error);
                                                                      this.$ = new Nodo("","");
                                                                      this.$.trad = "";
                                                                    
break;
case 277:

                                                                      console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> {"+yylineno+1,+_$[$0].last_column+1);
                                                                      
                                                                      errores.addError(error);
                                                                      this.$ = new Nodo("","");
                                                                      this.$.trad = "";
                                                                    
break;
case 278:

                                                                                      var s =  eval('$$');
                                                                                      var ids = "";
                                                                                      for(var i=0;i<s.length;i++){
                                                                                        if(s[i] === $$[$0-7]){
                                                                                            ids += s[i+1]+"_";
                                                                                        }
                                                                                      }
                                                                                      var nodo = new Nodo("FUNCION","FUNCION",+yylineno+1,+_$[$0-7].first_column+1);
                                                                                      var id = new Nodo("ID",$$[$0-6],+yylineno+1,+_$[$0-6].first_column+1);
                                                                                      nodo.addHijo(id);
                                                                                      nodo.addHijo($$[$0-4]);
                                                                                      nodo.addHijo($$[$0-1]);
                                                                                      nodo.addHijo($$[$0]);
                                                                                      this.$ = nodo;
                                                                                      this.$.trad = $$[$0-7]+" "+ids.replace(/.$/,"")+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                                      this.$.func = $$[$0-7]+" "+ids.replace(/.$/,"")+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                                    
break;
case 279:

                                                                                      console.error("Error sintactico: "+$$[$0-6]+" Desconocido Sentencias");
                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> id"+yylineno+1,+_$[$0-6].last_column+1);
                                                                                      
                                                                                      errores.addError(error);
                                                                                      this.$ = new Nodo("","");
                                                                                      this.$.trad = "";
                                                                                    
break;
case 280:

                                                                                console.error("Error sintactico: "+$$[$0-5]+" Desconocido Sentencias");
                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> ("+yylineno+1,+_$[$0-5].last_column+1);
                                                                                
                                                                                errores.addError(error);
                                                                                this.$ = new Nodo("","");
                                                                                this.$.trad = "";
                                                                              
break;
case 281:

                                                                                console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> )"+yylineno+1,+_$[$0-3].last_column+1);
                                                                                
                                                                                errores.addError(error);
                                                                                this.$ = new Nodo("","");
                                                                                this.$.trad = "";
                                                                              
break;
case 282:

                                                                              console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> :"+yylineno+1,+_$[$0-2].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 283:

                                                                              console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> {"+yylineno+1,+_$[$0-1].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 284:

                                                    var nodo = new Nodo("PARFUNC","PARFUNC",+yylineno+1,+_$[$0-4].first_column+1);
                                                    var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                                    nodo.addHijo($$[$0-4]);
                                                    nodo.addHijo(id);
                                                    nodo.addHijo($$[$0]);

                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                  
break;
case 285:

                                      var nodo = new Nodo("PARFUNC","PARFUNC",+yylineno+1,+_$[$0-2].first_column+1);
                                      var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                      nodo.addHijo(id);
                                      nodo.addHijo($$[$0]);

                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0].trad;
                                    
break;
case 286:

                  console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Parametro de funcion(id)"+yylineno+1,+_$[$0].last_column+1);
                  
                  errores.addError(error);
                  this.$ = new Nodo("","");
                  this.$.trad = "";
                
break;
case 287:

                                    this.$=$$[$0-1];
                                    this.$.trad = $$[$0-1].trad+$$[$0]+"\n";
                                  
break;
case 288:

                          this.$=$$[$0-1];
                          this.$.trad = $$[$0-1].trad+";\n";
                        
break;
case 289:
 
                                            var nodo = new Nodo("VALFUNCION","VALFUNCION",+yylineno+1,+_$[$0-2].first_column+1);
                                            var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                            nodo.addHijo(id);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                          
break;
case 290:

                                                var nodo = new Nodo("VALFUNCION","VALFUNCION",+yylineno+1,+_$[$0-3].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                              
break;
case 291:

                          var nodo = new Nodo("LPAR","LPAR",+yylineno+1,+_$[$0-2].first_column+1);
                          nodo.addHijo($$[$0-2]);
                          nodo.addHijo($$[$0]);
                          this.$ = nodo;
                          this.$.trad = $$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                        
break;
case 292:

              this.$ = $$[$0];
              this.$.trad = $$[$0].trad;
            
break;
case 293:

                                                              var nodo = new Nodo("CONSOLE","CONSOLE",+yylineno+1,+_$[$0-4].last_column+1);
                                                              nodo.addHijo($$[$0-2]);
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                            
break;
case 294:

                                                        console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> ("+yylineno+1,+_$[$0-3].last_column+1);
                                                        
                                                        errores.addError(error);
                                                        this.$ = new Nodo("","");
                                                        this.$.trad = "";
                                                      
break;
case 295:

                                                        console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> ("+yylineno+1,+_$[$0-1].last_column+1);
                                                        
                                                        errores.addError(error);
                                                        this.$ = new Nodo("","");
                                                        this.$.trad = "";
                                                      
break;
case 296:

                                                      console.error("Error Sintactico: "+$$[$0]+" Error console");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                      errores.addError(error);

                                                      var nodo = new Nodo("CONSOLE","CONSOLE",+yylineno+1,+_$[$0-4].last_column+1);
                                                      nodo.addHijo($$[$0-2]);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                    
break;
case 297:

                                                          var nodo = new Nodo("GRAFICAR","GRAFICAR",+yylineno+1,+_$[$0-3].last_column+1);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                                        
break;
case 298:

                                                    console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ("+yylineno+1,+_$[$0-2].last_column+1);
                                                    
                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 299:

                                                    console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )"+yylineno+1,+_$[$0-1].last_column+1);
                                                    
                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 300:
 
                                                  console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("GRAFICAR","GRAFICAR",+yylineno+1,+_$[$0-3].last_column+1);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+";\n";
                                                
break;
case 301:

                                                                  var nodo = new Nodo("PUSH","PUSH",+yylineno+1,+_$[$0-5].last_column+1);
                                                                  var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].last_column+1);
                                                                  nodo.addHijo(id);
                                                                  nodo.addHijo($$[$0-2]);
                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                
break;
case 302:
 
                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error graficar");
                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> .push",+yylineno+1,+_$[$0-4].last_column+1);
                                                                errores.addError(error);

                                                                errores.addError(error);
                                                                this.$ = new Nodo("","");
                                                                this.$.trad = "";
                                                              
break;
case 303:
 
                                                            console.error("Error Sintactico: "+$$[$0-3]+" Error graficar");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                            errores.addError(error);

                                                            errores.addError(error);
                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 304:
 
                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error graficar");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            errores.addError(error);
                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 305:
 
                                                          console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> )",+yylineno+1,+_$[$0].last_column+1);
                                                          errores.addError(error);

                                                          var nodo = new Nodo("PUSH","PUSH",+yylineno+1,+_$[$0-5].last_column+1);
                                                          var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].last_column+1);
                                                          nodo.addHijo(id);
                                                          nodo.addHijo($$[$0-2]);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                        
break;
case 306:

                                                          var nodo = new Nodo("POP","POP",+yylineno+1,+_$[$0-4].last_column+1);
                                                          var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                          nodo.addHijo(id);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                                        
break;
case 307:
 
                                                    console.error("Error Sintactico: "+$$[$0-2]+" Error graficar");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> (",+yylineno+1,+_$[$0-2].last_column+1);
                                                    errores.addError(error);

                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 308:
 
                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error graficar");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                    errores.addError(error);

                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 309:
 
                                                  console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("POP","POP",+yylineno+1,+_$[$0-4].last_column+1);
                                                  var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo(id);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+";\n";
                                                
break;
}
},
table: [{2:[1,14],3:1,4:2,5:[1,3],6:4,7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:12,15:13,16:$V0,17:$V1,23:$V2,24:17,36:$V3,70:27,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,93:$V9,96:$Va,97:$Vb},{1:[3]},{5:[1,29],6:30,7:31,8:32,9:33,10:34,11:35,12:36,13:37,14:38,15:39,16:$V0,17:$V1,23:$V2,24:17,36:$V3,70:27,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,93:$V9,96:$Va,97:$Vb},{1:[2,2]},o($Vc,[2,13]),o($Vc,[2,14]),o($Vc,[2,15]),o($Vc,[2,16]),o($Vc,[2,17]),o($Vc,[2,18]),o($Vc,[2,19]),o($Vc,[2,20]),o($Vc,[2,21]),o($Vc,[2,22]),o($Vc,[2,23]),{2:[1,41],17:[1,40]},{2:[1,43],17:[1,42]},o($Vd,[2,36]),{2:[1,46],20:$Ve,25:[1,44],26:[1,45],41:[1,48],65:$Vf,98:[1,49],99:[1,50]},{2:[1,53],65:[1,52]},{2:[1,55],65:[1,54]},{2:[1,57],65:[1,56]},{37:$Vg,73:58},{2:[1,61],65:[1,60]},{2:[1,63],65:[1,62]},{2:[1,65],65:[1,64]},{2:[1,67],17:[1,66]},{2:[1,69],22:[1,68]},{2:[1,71],17:[1,70]},{1:[2,1]},o($Vc,[2,3]),o($Vc,[2,4]),o($Vc,[2,5]),o($Vc,[2,6]),o($Vc,[2,7]),o($Vc,[2,8]),o($Vc,[2,9]),o($Vc,[2,10]),o($Vc,[2,11]),o($Vc,[2,12]),{2:[1,75],18:[1,72],20:[1,73],22:[1,74]},o($Vd,[2,41]),{18:[1,76],20:[1,77]},o($Vd,[2,42]),{2:[1,79],22:[1,78]},{2:[1,81],22:[1,80]},o($Vd,[2,43],{65:[1,82]}),{2:$Vh,17:$Vi,21:83,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:102,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:[1,105],65:[1,104]},{2:[1,107],65:[1,106]},{2:$Vh,17:$Vi,21:110,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,66:[1,108],67:$Vp,68:$Vq,69:$Vr,70:101,95:109},{17:$Vs,47:95,48:111,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,37:$Vg,47:95,48:112,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101,73:113},{17:$Vs,47:95,48:114,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,37:$Vt,47:95,48:115,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101,80:116},{2:[1,119],17:$Vs,47:95,48:118,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,37:$Vg,47:95,48:120,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101,73:121},{85:[1,122]},{2:$Vu,6:125,7:126,8:127,9:128,10:129,11:130,12:131,13:133,14:134,15:135,16:$V0,17:$V1,23:$V2,24:17,36:$V3,39:[1,124],70:27,74:123,75:132,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb},{2:[1,141],16:[1,140],17:[1,142],23:[1,143]},{16:[1,144],17:[1,145],23:[1,146],37:$Vg,73:147},{2:$Vh,17:$Vi,21:148,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:$Vh,17:$Vi,21:149,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:[1,151],66:[1,150]},{66:[1,152]},{2:[1,154],65:[1,153]},{65:[1,155]},o($Vd,[2,287]),o($Vd,[2,288]),{2:[1,157],37:[1,156]},{37:[1,158]},{2:$Vy,17:$Vz,19:159,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{2:$Vh,17:$Vi,21:169,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($Vd,[2,34]),o($Vd,[2,35]),{2:$Vy,17:$Vz,19:170,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{2:$Vh,17:$Vi,21:171,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($Vd,[2,37]),o($Vd,[2,38]),o($Vd,[2,39]),o($Vd,[2,40]),{2:$Vh,17:$Vi,21:172,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:[1,174],22:[1,173]},o($VF,[2,52]),o($VF,[2,53]),o($VF,[2,54]),o([2,22,39,40,42,44,45,49,50,51,55,56,57,58,59,60,61,62,63,64,66],$VG,{25:$VH,26:$VI,41:$VJ,65:$Vf,71:$VK,72:$VL}),o($VF,$VM),{2:[1,181],17:$VN,38:180},{2:$Vh,17:$Vi,21:184,33:84,34:85,35:86,37:$Vj,41:$Vk,46:183,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($VF,[2,82],{49:[1,185],50:$VO,51:$VP}),{17:$Vs,47:95,48:188,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($VQ,[2,86]),o($VQ,[2,87]),o($VQ,[2,94],{44:[1,190],45:[1,189],55:[1,191],56:[1,192],57:[1,193],58:[1,194],59:$VR,60:$VS,61:$VT,62:$VU,63:$VV,64:$VW}),{17:$Vs,47:201,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,35:202,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($VX,[2,103]),o($VX,[2,104]),o($VX,[2,105]),o($VX,[2,107]),{42:[1,203],59:$VR,60:$VS,61:$VT,62:$VU,63:$VV,64:$VW},o($VX,$VG,{41:$VJ,65:$Vf,71:$VK,72:$VL}),{2:$Vh,17:$Vi,21:204,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:$Vh,17:$Vi,21:205,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:[1,207],66:[1,206]},{66:[1,208]},o($VX,[2,289]),{40:[1,210],66:[1,209]},o($VY,[2,292]),{2:[1,212],50:$VO,51:$VP,66:[1,211]},{50:$VO,51:$VP,66:[1,213]},o($Vd,[2,140]),{2:[1,215],50:$VO,51:$VP,66:[1,214]},{50:$VO,51:$VP,66:[1,216]},o($Vd,[2,146]),{2:[1,219],39:[1,218],81:217,83:[1,220]},{2:[1,222],50:$VO,51:$VP,66:[1,221]},{66:[1,223]},{50:$VO,51:$VP,66:[1,224]},o($Vd,[2,170]),{2:[1,226],65:[1,225]},{6:228,7:229,8:230,9:231,10:232,11:233,12:234,13:236,14:237,15:238,16:$V0,17:$V1,23:$V2,24:17,36:$V3,39:[1,227],70:27,75:235,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb},o($VZ,[2,112]),o($V_,[2,124]),o($V_,[2,125]),o($V_,[2,126]),o($V_,[2,127]),o($V_,[2,128]),o($V_,[2,129]),o($V_,[2,130]),o($V_,[2,131]),o($V_,[2,132]),o($V_,[2,133]),o($V_,[2,134]),o($V_,[2,135]),{2:[1,240],22:[1,239]},{2:[1,242],22:[1,241]},{2:[1,244],7:246,17:[1,247],21:245,22:[1,243],33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:[1,249],17:[1,248]},{17:[1,250],20:[1,251],66:[1,254],88:[1,252],89:[1,253]},{2:[1,256],20:[1,255],88:[1,257],89:[1,258]},{2:[1,260],17:[1,259]},{17:[1,261]},{20:[1,262],88:[1,263],89:[1,264]},{17:[1,265]},o($Vd,[2,262]),{2:[1,267],66:[1,266]},{66:[1,268]},{2:[1,270],22:[1,269]},{22:[1,271]},{22:[1,272]},{2:[1,274],17:$V$,66:[1,273],94:275},{2:$V01,17:$V$,66:[1,277],94:278},{2:$V01,17:$V$,66:[1,280],94:281},{2:[1,283],17:$VN,38:282},{17:$VN,38:284},{17:$VN,38:285},{2:[1,288],20:[1,286],22:[1,287]},o($V11,[2,50]),o($V11,[2,51]),o($V11,$V21,{41:[1,289]}),o($V11,$V31,{41:[1,290]}),o($V11,$V41,{41:[1,291]}),o($V51,[2,47]),o($V11,$V61,{41:[1,292]}),o($V51,[2,49]),{44:[1,293]},{2:[1,295],22:[1,294]},{20:[1,296]},{2:[1,298],22:[1,297]},{66:[1,299]},o($Vd,[2,77]),o($Vd,[2,78]),o($VF,[2,55]),o($VF,[2,56]),{17:$Vs,47:300,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:[1,301]},{65:[1,302]},{39:[1,303],40:$V71},{39:[1,305]},{18:[1,306]},{2:[1,309],40:[1,308],42:[1,307]},o($V81,[2,76]),{17:$Vs,47:95,48:310,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:95,48:311,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:95,48:312,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($VQ,[2,85]),{17:$Vs,47:313,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:314,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:315,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:316,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:317,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:318,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:319,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:320,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:321,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:322,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:323,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:324,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($V91,[2,101],{61:$VT,62:$VU,63:$VV,64:$VW}),{66:[1,325]},{20:$Va1},{2:[1,328],66:[1,327]},{66:[1,329]},{2:[1,331],22:[1,330]},{22:[1,332]},{22:[1,333]},o($VX,[2,290]),{2:$Vh,17:$Vi,21:334,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{37:$Vg,73:335},{37:$Vg,73:336},{37:$Vg,73:337},{37:$Vt,80:338},{37:$Vt,80:339},{37:$Vt,80:340},{39:[1,342],82:341,83:[1,343],84:[1,344]},o($Vd,[2,149]),{39:[1,345]},{2:[1,347],17:$Vs,47:95,48:346,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{37:$Vg,73:348},{37:$Vg,73:349},{37:$Vg,73:350},{37:$Vg,73:351},{2:[1,353],17:$Vs,47:95,48:352,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:95,48:354,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($VZ,[2,111]),o($V_,[2,113]),o($V_,[2,114]),o($V_,[2,115]),o($V_,[2,116]),o($V_,[2,117]),o($V_,[2,118]),o($V_,[2,119]),o($V_,[2,120]),o($V_,[2,121]),o($V_,[2,122]),o($V_,[2,123]),o($V_,[2,263]),o($V_,[2,264]),o($V_,[2,265]),o($V_,[2,266]),o($V_,[2,267]),o($V_,[2,268],{2:$VM,22:$VM}),{2:[1,356],22:[1,355]},o($V_,[2,271]),o($Vb1,$VG,{20:$Ve,25:$VH,26:$VI,41:[1,357],65:$Vf,71:$VK,72:$VL}),{2:[1,359],20:[1,358],88:[1,360],89:[1,361]},{20:[1,362],88:[1,363],89:[1,364]},{20:[1,365],88:[1,366],89:[1,367]},{2:$Vh,17:$Vi,21:368,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:[1,369]},{17:[1,370]},{37:$Vg,73:371},{2:$Vh,17:$Vi,21:372,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:$Vh,17:[1,374],21:373,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:[1,376],17:[1,375]},{2:[1,378],17:[1,377]},{2:[1,380],88:[1,379],89:[1,381]},{88:[1,382],89:[1,383]},{20:[1,384],88:[1,385],89:[1,386]},{2:$Vh,17:$Vi,21:387,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:[1,388]},{17:[1,389]},{88:[1,390],89:[1,391]},{2:[1,393],22:[1,392]},{22:[1,394]},{22:[1,395]},o($Vd,[2,297]),o($Vd,[2,300]),o($Vd,[2,299]),o($Vd,[2,298]),{2:[1,397],18:[1,396]},o($Vc1,$Vd1,{18:[1,398]}),{2:[1,400],40:$Ve1,66:[1,399]},{18:[1,402]},{18:[1,403]},{40:$Ve1,66:[1,404]},o($VY,$Vd1),{18:[1,405]},{40:$Ve1,66:[1,406]},{2:[1,408],39:[1,407],40:$V71},{39:[1,409]},{39:[1,410],40:$V71},{39:[1,411],40:$V71},{2:$Vh,17:$Vi,21:412,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($Vd,[2,32]),o($Vd,[2,33]),{42:[1,413]},{42:[1,414]},{42:[1,415]},{42:[1,416]},{2:$Vy,17:[1,421],27:417,28:[1,418],29:[1,419],30:[1,420],31:$VD},o($Vd,[2,28]),o($Vd,[2,29]),{2:$Vh,17:$Vi,21:422,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($Vd,[2,30]),o($Vd,[2,31]),{22:[1,423]},{42:[1,424],59:$VR,60:$VS,61:$VT,62:$VU,63:$VV,64:$VW},o($VX,[2,108]),{66:[1,425]},o($VF,[2,66]),{17:[1,426]},o($VF,[2,67]),{2:$Vh,17:$Vi,21:427,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($VF,[2,73]),{2:$Vh,17:$Vi,21:428,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:$Vh,17:$Vi,21:429,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{18:[1,430],50:$VO,51:$VP},o($VQ,[2,83]),o([2,18,22,39,40,42,49,51,66],[2,84],{50:$VO}),o($VQ,[2,88],{59:$VR,60:$VS,61:$VT,62:$VU,63:$VV,64:$VW}),o($VQ,[2,89],{59:$VR,60:$VS,61:$VT,62:$VU,63:$VV,64:$VW}),o($VQ,[2,90],{59:$VR,60:$VS,61:$VT,62:$VU,63:$VV,64:$VW}),o($VQ,[2,91],{59:$VR,60:$VS,61:$VT,62:$VU,63:$VV,64:$VW}),o($VQ,[2,92],{59:$VR,60:$VS,61:$VT,62:$VU,63:$VV,64:$VW}),o($VQ,[2,93],{59:$VR,60:$VS,61:$VT,62:$VU,63:$VV,64:$VW}),o($V91,[2,95],{61:$VT,62:$VU,63:$VV,64:$VW}),o($V91,[2,96],{61:$VT,62:$VU,63:$VV,64:$VW}),o($Vf1,[2,97],{63:$VV}),o($Vf1,[2,98],{63:$VV}),o($VX,[2,99]),o($Vf1,[2,100],{63:$VV}),o($VX,[2,102]),{2:$Vh,17:$Vi,21:431,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:[1,433],22:[1,432]},{22:[1,434]},{22:[1,435]},o($Vd,[2,306]),o($Vd,[2,309]),o($Vd,[2,308]),o($Vd,[2,307]),o($VY,[2,291]),o($Vd,[2,137],{77:436,78:[1,437]}),o($Vd,[2,139]),o($Vd,[2,138]),o($Vd,[2,143]),o($Vd,[2,145]),o($Vd,[2,144]),{39:[1,438]},o($Vd,[2,148]),{2:[1,440],17:$Vs,47:95,48:439,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{18:[1,441]},o($Vd,[2,150]),{18:[1,442],50:$VO,51:$VP},{18:[1,443]},o($Vd,[2,166]),o($Vd,[2,169]),o($Vd,[2,168]),o($Vd,[2,167]),{2:[1,445],50:$VO,51:$VP,66:[1,444]},{66:[1,446]},{50:$VO,51:$VP,66:[1,447]},o($V_,[2,269]),o($V_,[2,270]),{17:$Vs,47:448,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:$Vh,17:$Vi,21:449,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:$Vh,17:[1,451],21:450,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:[1,453],17:[1,452]},{2:[1,455],17:[1,454]},{2:$Vh,17:$Vi,21:456,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:[1,457]},{17:[1,458]},{2:$Vh,17:$Vi,21:459,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:[1,460]},{17:[1,461]},{22:[1,462]},{66:[1,463]},{66:[1,464]},o($Vd,[2,261]),{2:[1,466],22:[1,465]},{22:[1,467]},o($Vg1,$VG,{25:$VH,26:$VI,41:$VJ,65:$Vf,66:[1,468],71:$VK,72:$VL}),{2:[1,470],66:[1,469]},{66:[1,471]},{2:[1,473],66:[1,472]},{66:[1,474]},{2:[1,476],17:[1,475]},{17:[1,477]},{2:[1,479],17:[1,478]},{17:[1,480]},{17:[1,481]},{2:$Vh,17:$Vi,21:482,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:[1,483]},{17:[1,484]},{22:[1,485]},{66:[1,486]},{66:[1,487]},{17:[1,488]},{17:[1,489]},o($Vd,[2,293]),o($Vd,[2,296]),o($Vd,[2,295]),o($Vd,[2,294]),{2:$Vy,17:$Vz,19:490,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{2:$Vy,17:$Vz,19:491,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{2:$Vy,17:$Vz,19:492,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{2:[1,494],18:[1,493]},{18:[1,495]},{17:[1,496]},{2:$Vy,17:$Vz,19:497,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{2:$Vy,17:$Vz,19:498,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{18:[1,499]},{2:$Vy,17:$Vz,19:500,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{18:[1,501]},{2:[1,503],22:[1,502]},{22:[1,504]},{22:[1,505]},{22:[1,506]},{22:[1,507]},{2:[1,509],22:[1,508]},o($V11,[2,68]),o($V11,[2,69]),o($V11,[2,70]),o($V11,[2,71]),{45:[1,510]},{45:$V21},{45:$V31},{45:$V41},{45:$V61},{2:[1,512],22:[1,511]},o($Vd,[2,302]),o($VX,$Vh1),o($VX,[2,109]),{18:[1,513]},o($Vi1,[2,65]),o($V81,[2,74]),o($V81,[2,75]),{17:$Vs,47:95,48:514,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{2:[1,516],22:[1,515]},o($Vd,[2,301]),o($Vd,[2,305]),o($Vd,[2,304]),o($Vd,[2,303]),o($Vd,[2,136]),{8:518,37:$Vg,73:517,76:$V4},o($Vd,[2,147]),{18:[1,519],50:$VO,51:$VP},{18:[1,520]},{2:$Vu,6:125,7:126,8:127,9:128,10:129,11:130,12:131,13:133,14:134,15:135,16:$V0,17:$V1,23:$V2,24:17,36:$V3,37:$Vg,39:[2,165],70:27,73:522,74:521,75:132,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb},o($Vj1,[2,161],{24:17,70:27,6:125,7:126,8:127,9:128,10:129,11:130,12:131,75:132,13:133,14:134,15:135,74:523,73:524,2:$Vu,16:$V0,17:$V1,23:$V2,36:$V3,37:$Vg,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb}),o($Vj1,[2,162],{24:17,70:27,6:125,7:126,8:127,9:128,10:129,11:130,12:131,75:132,13:133,14:134,15:135,74:525,73:526,2:$Vu,16:$V0,17:$V1,23:$V2,36:$V3,37:$Vg,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb}),{2:[1,528],22:[1,527]},{22:[1,529]},{22:[1,530]},{22:[1,531]},{42:[1,532],59:$VR,60:$VS,61:$VT,62:$VU,63:$VV,64:$VW},{2:[1,534],22:[1,533]},{22:[1,535]},o($Vg1,$VG,{25:$VH,26:$VI,41:$VJ,65:$Vf,66:[1,536],71:$VK,72:$VL}),{2:[1,538],66:[1,537]},{66:[1,539]},{2:[1,541],66:[1,540]},{66:[1,542]},{22:[1,543]},{66:[1,544]},{66:[1,545]},{22:[1,546]},{66:[1,547]},{66:[1,548]},{17:$Vs,47:95,48:549,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{37:$Vg,73:550},{37:$Vg,73:551},{2:[1,553],17:$Vs,47:95,48:552,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:95,48:554,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:95,48:555,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{37:$Vg,73:556},{2:[1,558],37:$Vg,73:557},{37:$Vg,73:559},{37:$Vg,73:560},{2:[1,562],37:$Vg,73:561},{37:$Vg,73:563},{37:$Vg,73:564},{2:[1,566],66:[1,565]},{66:[1,567]},{66:[1,568]},{2:[1,570],66:[1,569]},{66:[1,571]},{66:[1,572]},{66:[1,573]},{22:[1,574]},{66:[1,575]},{66:[1,576]},{17:$Vs,47:95,48:577,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{37:$Vg,73:578},{37:$Vg,73:579},{66:[1,580]},{66:[1,581]},{2:[1,583],37:$Vg,73:582},{37:$Vg,73:584},{37:$Vg,73:585},{2:$Vy,17:$Vz,19:586,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{2:$Vy,17:$Vz,19:587,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{2:$Vy,17:$Vz,19:588,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{18:[1,589]},o($Vc1,[2,285]),{37:$Vg,73:590},{2:$Vy,17:$Vz,19:591,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},{37:$Vg,73:592},{2:$Vy,17:$Vz,19:593,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},o($Vd,[2,58]),o($Vd,[2,63]),o($Vd,[2,62]),o($Vd,[2,61]),o($Vd,[2,60]),o($Vd,[2,59]),o($Vd,[2,24]),o($Vd,[2,25]),o($V11,[2,72]),o($Vd,[2,26]),o($Vd,[2,27]),{2:$Vh,17:$Vi,21:594,33:84,34:85,35:86,37:$Vj,41:$Vk,47:95,48:91,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},o($VF,[2,81],{50:$VO,51:$VP}),o($Vd,[2,79]),o($Vd,[2,80]),o($Vd,[2,141]),o($Vd,[2,142]),o($Vj1,[2,155],{24:17,70:27,6:125,7:126,8:127,9:128,10:129,11:130,12:131,75:132,13:133,14:134,15:135,74:595,73:596,2:$Vu,16:$V0,17:$V1,23:$V2,36:$V3,37:$Vg,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb}),o($Vj1,[2,156],{24:17,70:27,6:125,7:126,8:127,9:128,10:129,11:130,12:131,75:132,13:133,14:134,15:135,74:597,73:598,2:$Vu,16:$V0,17:$V1,23:$V2,36:$V3,37:$Vg,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb}),{6:228,7:229,8:230,9:231,10:232,11:233,12:234,13:236,14:237,15:238,16:$V0,17:$V1,23:$V2,24:17,36:$V3,39:[2,163],70:27,75:235,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb},{39:[2,164]},o($Vj1,[2,157],{24:17,70:27,6:228,7:229,8:230,9:231,10:232,11:233,12:234,75:235,13:236,14:237,15:238,16:$V0,17:$V1,23:$V2,36:$V3,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb}),o($Vj1,[2,159]),o($Vj1,[2,158],{24:17,70:27,6:228,7:229,8:230,9:231,10:232,11:233,12:234,75:235,13:236,14:237,15:238,16:$V0,17:$V1,23:$V2,36:$V3,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb}),o($Vj1,[2,160]),o($Vd,[2,171]),o($Vd,[2,175]),o($Vd,[2,174]),o($Vd,[2,173]),o($Vd,[2,172]),o($Vb1,$Vh1,{20:$Va1}),{2:[1,600],17:$Vs,47:95,48:599,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:95,48:601,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{17:$Vs,47:95,48:602,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{37:$Vg,73:603},{2:[1,605],37:$Vg,73:604},{37:$Vg,73:606},{37:$Vg,73:607},{2:[1,609],37:$Vg,73:608},{37:$Vg,73:610},{37:$Vg,73:611},{17:$Vs,47:95,48:612,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{37:$Vg,73:613},{37:$Vg,73:614},{17:$Vs,47:95,48:615,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{37:$Vg,73:616},{37:$Vg,73:617},{22:[1,618],50:$VO,51:$VP},o($Vd,[2,222]),o($Vd,[2,243]),{2:[1,620],22:[1,619],50:$VO,51:$VP},{22:[1,621]},{22:[1,622],50:$VO,51:$VP},{22:[1,623],50:$VO,51:$VP},o($Vd,[2,244]),o($Vd,[2,220]),o($Vd,[2,225]),o($Vd,[2,224]),o($Vd,[2,223]),o($Vd,[2,241]),o($Vd,[2,247]),o($Vd,[2,246]),o($Vd,[2,245]),{2:[1,625],37:$Vg,73:624},{37:$Vg,73:626},{37:$Vg,73:627},{37:$Vg,73:628},{2:[1,630],37:$Vg,73:629},{37:$Vg,73:631},{37:$Vg,73:632},{37:$Vg,73:633},{37:$Vg,73:634},{17:$Vs,47:95,48:635,52:$Vl,53:$Vm,54:94,60:$Vn,65:$Vo,67:$Vp,68:$Vq,69:$Vr,70:101},{37:$Vg,73:636},{37:$Vg,73:637},{22:[1,638],50:$VO,51:$VP},o($Vd,[2,221]),o($Vd,[2,242]),{37:$Vg,73:639},{37:$Vg,73:640},o($Vd,[2,272]),o($Vd,[2,277]),o($Vd,[2,276]),o($Vd,[2,275]),{2:[1,642],37:$Vg,73:641},{37:$Vg,73:643},{37:$Vg,73:644},{2:$Vy,17:$Vz,19:645,27:160,28:$VA,29:$VB,30:$VC,31:$VD,32:161,43:$VE},o($Vd,[2,274]),{37:$Vg,73:646},o($Vd,[2,273]),{37:$Vg,73:647},o($Vi1,[2,64]),o($Vj1,[2,151],{24:17,70:27,6:228,7:229,8:230,9:231,10:232,11:233,12:234,75:235,13:236,14:237,15:238,16:$V0,17:$V1,23:$V2,36:$V3,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb}),o($Vj1,[2,153]),o($Vj1,[2,152],{24:17,70:27,6:228,7:229,8:230,9:231,10:232,11:233,12:234,75:235,13:236,14:237,15:238,16:$V0,17:$V1,23:$V2,36:$V3,76:$V4,79:$V5,85:$V6,86:$V7,87:$V8,90:$Vv,91:$Vw,92:$Vx,93:$V9,96:$Va,97:$Vb}),o($Vj1,[2,154]),{2:[1,649],22:[1,648],50:$VO,51:$VP},{22:[1,650]},{22:[1,651],50:$VO,51:$VP},{22:[1,652],50:$VO,51:$VP},o($Vd,[2,230]),o($Vd,[2,226]),o($Vd,[2,233]),o($Vd,[2,232]),o($Vd,[2,231]),o($Vd,[2,248]),o($Vd,[2,254]),o($Vd,[2,253]),o($Vd,[2,252]),{22:[1,653],50:$VO,51:$VP},o($Vd,[2,229]),o($Vd,[2,251]),{22:[1,654],50:$VO,51:$VP},o($Vd,[2,228]),o($Vd,[2,250]),{17:[1,655]},{2:[1,657],17:[1,656]},{17:[1,658]},{17:[1,659]},{17:[1,660]},{17:[1,661]},o($Vd,[2,234]),o($Vd,[2,240]),o($Vd,[2,239]),o($Vd,[2,238]),o($Vd,[2,237]),o($Vd,[2,255]),o($Vd,[2,260]),o($Vd,[2,259]),o($Vd,[2,258]),o($Vd,[2,236]),o($Vd,[2,257]),{22:[1,662],50:$VO,51:$VP},o($Vd,[2,227]),o($Vd,[2,249]),{17:[1,663]},o($Vd,[2,235]),o($Vd,[2,256]),o($Vd,[2,278]),o($Vd,[2,283]),o($Vd,[2,282]),o($Vd,[2,281]),o($Vc1,[2,284]),o($Vd,[2,280]),o($Vd,[2,279]),{2:[1,665],17:[1,664]},{17:[1,666]},{17:[1,667]},{17:[1,668]},{17:[1,669]},{17:[1,670]},{17:[1,671]},{25:[1,672],26:[1,673]},{2:[1,675],25:[1,674],26:[1,676]},{25:[1,677],26:[1,678]},{25:[1,679],26:[1,680]},{25:[1,681],26:[1,682]},{25:[1,683],26:[1,684]},{25:[1,685],26:[1,686]},{17:[1,687]},{25:[1,688],26:[1,689]},{2:[1,691],25:[1,690],26:[1,692]},{25:[1,693],26:[1,694]},{25:[1,695],26:[1,696]},{25:[1,697],26:[1,698]},{25:[1,699],26:[1,700]},{25:[1,701],26:[1,702]},{25:[1,703],26:[1,704]},{25:[1,705],26:[1,706]},{66:[1,707]},{66:[1,708]},{2:[1,710],66:[1,709]},{66:[1,711]},{2:[1,713],66:[1,712]},{66:[1,714]},{66:[1,715]},{66:[1,716]},{66:[1,717]},{66:[1,718]},{66:[1,719]},{66:[1,720]},{66:[1,721]},{66:[1,722]},{66:[1,723]},{25:[1,724],26:[1,725]},{66:[1,726]},{66:[1,727]},{2:[1,729],66:[1,728]},{66:[1,730]},{2:[1,732],66:[1,731]},{66:[1,733]},{66:[1,734]},{66:[1,735]},{66:[1,736]},{66:[1,737]},{66:[1,738]},{66:[1,739]},{66:[1,740]},{66:[1,741]},{66:[1,742]},{66:[1,743]},{66:[1,744]},{66:[1,745]},{66:[1,746]},{37:$Vg,73:747},{37:$Vg,73:748},{2:[1,750],37:$Vg,73:749},{37:$Vg,73:751},{37:$Vg,73:752},{2:[1,754],37:$Vg,73:753},{37:$Vg,73:755},{37:$Vg,73:756},{37:$Vg,73:757},{37:$Vg,73:758},{37:$Vg,73:759},{37:$Vg,73:760},{37:$Vg,73:761},{37:$Vg,73:762},{37:$Vg,73:763},{37:$Vg,73:764},{37:$Vg,73:765},{66:[1,766]},{66:[1,767]},{37:$Vg,73:768},{37:$Vg,73:769},{2:[1,771],37:$Vg,73:770},{37:$Vg,73:772},{37:$Vg,73:773},{2:[1,775],37:$Vg,73:774},{37:$Vg,73:776},{37:$Vg,73:777},{37:$Vg,73:778},{37:$Vg,73:779},{37:$Vg,73:780},{37:$Vg,73:781},{37:$Vg,73:782},{37:$Vg,73:783},{37:$Vg,73:784},{37:$Vg,73:785},{37:$Vg,73:786},{37:$Vg,73:787},{37:$Vg,73:788},{37:$Vg,73:789},{37:$Vg,73:790},o($Vd,[2,201]),o($Vd,[2,212]),o($Vd,[2,199]),o($Vd,[2,209]),o($Vd,[2,208]),o($Vd,[2,207]),o($Vd,[2,210]),o($Vd,[2,219]),o($Vd,[2,218]),o($Vd,[2,206]),o($Vd,[2,217]),o($Vd,[2,205]),o($Vd,[2,216]),o($Vd,[2,204]),o($Vd,[2,215]),o($Vd,[2,203]),o($Vd,[2,214]),o($Vd,[2,202]),o($Vd,[2,213]),{37:$Vg,73:791},{37:$Vg,73:792},o($Vd,[2,200]),o($Vd,[2,211]),o($Vd,[2,176]),o($Vd,[2,187]),o($Vd,[2,186]),o($Vd,[2,185]),o($Vd,[2,188]),o($Vd,[2,198]),o($Vd,[2,197]),o($Vd,[2,184]),o($Vd,[2,196]),o($Vd,[2,183]),o($Vd,[2,195]),o($Vd,[2,182]),o($Vd,[2,194]),o($Vd,[2,181]),o($Vd,[2,193]),o($Vd,[2,180]),o($Vd,[2,192]),o($Vd,[2,179]),o($Vd,[2,191]),o($Vd,[2,178]),o($Vd,[2,190]),o($Vd,[2,177]),o($Vd,[2,189])],
defaultActions: {3:[2,2],29:[2,1],418:[2,44],419:[2,45],420:[2,46],421:[2,48],522:[2,164]},
parseError: function parseError (str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        var error = new Error(str);
        error.hash = hash;
        throw error;
    }
},
parse: function parse (input) {
    var self = this,
        stack = [0],
        tstack = [], // token stack
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    var args = lstack.slice.call(arguments, 1);

    //this.reductionCount = this.shiftCount = 0;

    var lexer = Object.create(this.lexer);
    var sharedState = { yy: {} };
    // copy state
    for (var k in this.yy) {
      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
        sharedState.yy[k] = this.yy[k];
      }
    }

    lexer.setInput(input, sharedState.yy);
    sharedState.yy.lexer = lexer;
    sharedState.yy.parser = this;
    if (typeof lexer.yylloc == 'undefined') {
        lexer.yylloc = {};
    }
    var yyloc = lexer.yylloc;
    lstack.push(yyloc);

    var ranges = lexer.options && lexer.options.ranges;

    if (typeof sharedState.yy.parseError === 'function') {
        this.parseError = sharedState.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }

    function popStack (n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

_token_stack:
    var lex = function () {
        var token;
        token = lexer.lex() || EOF;
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }

    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length - 1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

_handle_error:
        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {
            var error_rule_depth;
            var errStr = '';

            // Return the rule stack depth where the nearest error rule can be found.
            // Return FALSE when no error recovery rule was found.
            function locateNearestErrorRecoveryRule(state) {
                var stack_probe = stack.length - 1;
                var depth = 0;

                // try to recover from error
                for(;;) {
                    // check for error recovery rule in this state
                    if ((TERROR.toString()) in table[state]) {
                        return depth;
                    }
                    if (state === 0 || stack_probe < 2) {
                        return false; // No suitable error recovery rule available.
                    }
                    stack_probe -= 2; // popStack(1): [symbol, action]
                    state = stack[stack_probe];
                    ++depth;
                }
            }

            if (!recovering) {
                // first see if there's any chance at hitting an error recovery rule:
                error_rule_depth = locateNearestErrorRecoveryRule(state);

                // Report error
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push("'"+this.terminals_[p]+"'");
                    }
                }
                if (lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(', ') + ", got '" + (this.terminals_[symbol] || symbol)+ "'";
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == EOF ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr, {
                    text: lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: lexer.yylineno,
                    loc: yyloc,
                    expected: expected,
                    recoverable: (error_rule_depth !== false)
                });
            } else if (preErrorSymbol !== EOF) {
                error_rule_depth = locateNearestErrorRecoveryRule(state);
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol === EOF || preErrorSymbol === EOF) {
                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');
                }

                // discard current lookahead and grab another
                yyleng = lexer.yyleng;
                yytext = lexer.yytext;
                yylineno = lexer.yylineno;
                yyloc = lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            if (error_rule_depth === false) {
                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');
            }
            popStack(error_rule_depth);

            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {
            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(lexer.yytext);
                lstack.push(lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = lexer.yyleng;
                    yytext = lexer.yytext;
                    yylineno = lexer.yylineno;
                    yyloc = lexer.yylloc;
                    if (recovering > 0) {
                        recovering--;
                    }
                } else {
                    // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2:
                // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                if (ranges) {
                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];
                }
                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3:
                // accept
                return true;
        }

    }

    return true;
}};

  let valcadena = ""; 
  let resultado = "";
  let errores = new ListaErrores();
  var ids = new Array();
  var funcs = new Array();
  var trads = new Array();
/* generated by jison-lex 0.3.4 */
var lexer = (function(){
var lexer = ({

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input, yy) {
        this.yy = yy || this.yy || {};
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function(match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex () {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin (condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState () {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules () {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState (n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState (condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0: this.begin("comentarios"); 
break;
case 1: this.popState(); 
break;
case 2: 
break;
case 3: this.popState(); return 5; 
break;
case 4: this.begin("comentariomulti"); 
break;
case 5: this.popState(); 
break;
case 6:  
break;
case 7:  
break;
case 8: this.begin("tstring"); 
break;
case 9: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 67;
                                
break;
case 10: valcadena +='\n'; 
break;
case 11: valcadena +='\t'; 
break;
case 12: valcadena +='\\'; 
break;
case 13: valcadena +='\r'; 
break;
case 14: valcadena +='\"'; 
break;
case 15: valcadena += yy_.yytext; 
break;
case 16: this.begin("tstring2"); 
break;
case 17: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 67;
                                
break;
case 18: valcadena +='\n'; 
break;
case 19: valcadena +='\t'; 
break;
case 20: valcadena +='\\'; 
break;
case 21: valcadena +='\r'; 
break;
case 22: valcadena +='\"'; 
break;
case 23: valcadena += yy_.yytext; 
break;
case 24: this.begin("ttstring"); 
break;
case 25: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 67;
                                
break;
case 26: valcadena +='\n'; 
break;
case 27: valcadena +='\t'; 
break;
case 28: valcadena +='\\'; 
break;
case 29: valcadena +='\r'; 
break;
case 30: valcadena +='\"'; 
break;
case 31: valcadena += yy_.yytext; 
break;
case 32: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_comilladoble'; 
break;
case 33: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_barrainvertida'; 
break;
case 34: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_salto'; 
break;
case 35: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_retorno'; 
break;
case 36: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_tab'; 
break;
case 37: console.log("simbolo:"+yy_.yytext);  return 71; 
break;
case 38: console.log("tipo de dato:"+yy_.yytext);  return 28; 
break;
case 39: console.log("tipo de dato:"+yy_.yytext);  return 29; 
break;
case 40: console.log("tipo de dato:"+yy_.yytext);  return 30; 
break;
case 41: console.log("tipo de dato:"+yy_.yytext);  return 31; 
break;
case 42: console.log("tipo de dato:"+yy_.yytext);  return 36; 
break;
case 43: console.log("inicio array:"+yy_.yytext);  return 43; 
break;
case 44: console.log("declaracion:"+yy_.yytext);  return 16; 
break;
case 45: console.log("declaracion:"+yy_.yytext);  return 23; 
break;
case 46: console.log("boolean:"+yy_.yytext);  return 53; 
break;
case 47: console.log("boolean:"+yy_.yytext);  return 53; 
break;
case 48: console.log("sentencias:"+yy_.yytext);  return 76; 
break;
case 49: console.log("sentencias:"+yy_.yytext);  return 78; 
break;
case 50: console.log("sentencias:"+yy_.yytext);  return 79; 
break;
case 51: console.log("sentencias:"+yy_.yytext);  return 83; 
break;
case 52: console.log("sentencias:"+yy_.yytext);  return 84; 
break;
case 53: console.log("sentencias:"+yy_.yytext);  return 85; 
break;
case 54: console.log("sentencias:"+yy_.yytext);  return 86; 
break;
case 55: console.log("sentencias:"+yy_.yytext);  return 87; 
break;
case 56: console.log("sentencias:"+yy_.yytext);  return 88; 
break;
case 57: console.log("sentencias:"+yy_.yytext);  return 89; 
break;
case 58: console.log("transferencia:"+yy_.yytext);  return 90; 
break;
case 59: console.log("transferencia:"+yy_.yytext);  return 91; 
break;
case 60: console.log("transferencia:"+yy_.yytext);  return 92; 
break;
case 61: console.log("funcion:"+yy_.yytext);  return 93; 
break;
case 62: console.log("funcion:"+yy_.yytext);  return 96; 
break;
case 63: console.log("funcion:"+yy_.yytext);  return 97; 
break;
case 64: console.log("funcion:"+yy_.yytext);  return 72; 
break;
case 65: console.log("funcion:"+yy_.yytext);  return 98; 
break;
case 66: console.log("funcion:"+yy_.yytext);  return 99; 
break;
case 67: console.log("arimetica:"+yy_.yytext); return 63; 
break;
case 68: console.log("arimetica:"+yy_.yytext); return 25; 
break;
case 69: console.log("arimetica:"+yy_.yytext); return 26; 
break;
case 70: console.log("arimetica:"+yy_.yytext); return 59; 
break;
case 71: console.log("arimetica:"+yy_.yytext); return 60; 
break;
case 72: console.log("arimetica:"+yy_.yytext); return 61; 
break;
case 73: console.log("arimetica:"+yy_.yytext); return 62; 
break;
case 74: console.log("arimetica:"+yy_.yytext); return 64; 
break;
case 75: console.log("relacional:"+yy_.yytext); return 55; 
break;
case 76: console.log("relacional:"+yy_.yytext); return 56; 
break;
case 77: console.log("relacional:"+yy_.yytext); return 57; 
break;
case 78: console.log("relacional:"+yy_.yytext); return 58; 
break;
case 79: console.log("relacional:"+yy_.yytext); return 45; 
break;
case 80: console.log("relacional:"+yy_.yytext); return 44; 
break;
case 81: console.log("Logica:"+yy_.yytext); return 50; 
break;
case 82: console.log("Logica:"+yy_.yytext); return 51; 
break;
case 83: console.log("Logica:"+yy_.yytext); return 52; 
break;
case 84: console.log("ternario:"+yy_.yytext); return 49; 
break;
case 85: console.log("simbolo:"+yy_.yytext); return 41; 
break;
case 86: console.log("simbolo:"+yy_.yytext); return 42; 
break;
case 87: console.log("simbolo:"+yy_.yytext); return 18; 
break;
case 88: console.log("simbolo:"+yy_.yytext); return 20; 
break;
case 89: console.log("simbolo:"+yy_.yytext); return 22; 
break;
case 90: console.log("simbolo:"+yy_.yytext); return 37; 
break;
case 91: console.log("simbolo:"+yy_.yytext); return 39; 
break;
case 92: console.log("simbolo:"+yy_.yytext); return 40; 
break;
case 93: console.log("simbolo:"+yy_.yytext); return 65; 
break;
case 94: console.log("simbolo:"+yy_.yytext); return 66; 
break;
case 95: console.log("numero decimal:"+yy_.yytext);  return 69; 
break;
case 96: console.log("numero entero:"+yy_.yytext);  return 68; 
break;
case 97:  console.log("id:"+yy_.yytext); return 17; 
break;
case 98: /*se ignoran*/ 
break;
case 99:  return 5;  
break;
case 100:  
                                    console.error("Error Lexico:"+yy_.yytext); 
                                    var error = new Error("Lexico",yy_.yytext,+yy_.yylineno+1,yy_.yylloc.last_column)
                                    errores.addError(error);
                                
break;
}
},
rules: [/^(?:\/\/)/,/^(?:[\n])/,/^(?:[^\n])/,/^(?:$)/,/^(?:\/\*)/,/^(?:\*\/)/,/^(?:.)/,/^(?:[ \t\r\n\f])/,/^(?:["])/,/^(?:["])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:['])/,/^(?:['])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:[`])/,/^(?:[`])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:\\")/,/^(?:\\\\)/,/^(?:\\n)/,/^(?:\\r)/,/^(?:\\t)/,/^(?:\.)/,/^(?:string\b)/,/^(?:number\b)/,/^(?:boolean\b)/,/^(?:void\b)/,/^(?:type\b)/,/^(?:Array\b)/,/^(?:let\b)/,/^(?:const\b)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:if\b)/,/^(?:else\b)/,/^(?:switch\b)/,/^(?:case\b)/,/^(?:default\b)/,/^(?:while\b)/,/^(?:do\b)/,/^(?:for\b)/,/^(?:in\b)/,/^(?:of\b)/,/^(?:break\b)/,/^(?:continue\b)/,/^(?:return\b)/,/^(?:function\b)/,/^(?:console\.log\b)/,/^(?:graficar_ts\b)/,/^(?:\.Length\b)/,/^(?:\.Push\b)/,/^(?:\.Pop\b)/,/^(?:\*\*)/,/^(?:\+\+)/,/^(?:--)/,/^(?:\+)/,/^(?:-)/,/^(?:\*)/,/^(?:\/)/,/^(?:%)/,/^(?:>=)/,/^(?:<=)/,/^(?:==)/,/^(?:!=)/,/^(?:>)/,/^(?:<)/,/^(?:&&)/,/^(?:\|\|)/,/^(?:!)/,/^(?:\?)/,/^(?:\[)/,/^(?:\])/,/^(?::)/,/^(?:=)/,/^(?:;)/,/^(?:\{)/,/^(?:\})/,/^(?:,)/,/^(?:\()/,/^(?:\))/,/^(?:[0-9]+\.[0-9]+)/,/^(?:[0-9]+)/,/^(?:[[a-zA-ZñÑáéíóúÁÉÍÓÚ]["_"0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]*|["_"]+[0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]["_"0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]*)/,/^(?:[ \t\n\r\f])/,/^(?:$)/,/^(?:.)/],
conditions: {"ttstring":{"rules":[25,26,27,28,29,30,31],"inclusive":false},"tstring2":{"rules":[17,18,19,20,21,22,23],"inclusive":false},"tstring":{"rules":[9,10,11,12,13,14,15],"inclusive":false},"comentariomulti":{"rules":[5,6,7],"inclusive":false},"comentarios":{"rules":[1,2,3],"inclusive":false},"INITIAL":{"rules":[0,4,8,16,24,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"inclusive":true}}
});
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = analizador;
exports.Parser = analizador.Parser;
exports.parse = function () { return analizador.parse.apply(analizador, arguments); };
exports.main = function commonjsMain (args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}