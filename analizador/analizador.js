/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var analizador = (function(){
var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,14],$V1=[1,17],$V2=[1,15],$V3=[1,26],$V4=[1,18],$V5=[1,19],$V6=[1,20],$V7=[1,21],$V8=[1,22],$V9=[1,25],$Va=[1,23],$Vb=[1,24],$Vc=[5,15,16,22,36,75,78,84,85,86,92,95,96],$Vd=[5,15,16,22,36,39,75,78,82,83,84,85,86,89,90,91,92,95,96],$Ve=[1,44],$Vf=[1,55],$Vg=[1,82],$Vh=[1,81],$Vi=[1,83],$Vj=[1,84],$Vk=[1,86],$Vl=[1,87],$Vm=[1,90],$Vn=[1,91],$Vo=[1,92],$Vp=[1,93],$Vq=[1,94],$Vr=[1,96],$Vs=[1,107],$Vt=[1,125],$Vu=[1,126],$Vv=[1,127],$Vw=[1,128],$Vx=[1,152],$Vy=[1,151],$Vz=[1,147],$VA=[1,148],$VB=[1,149],$VC=[1,150],$VD=[1,153],$VE=[2,21,42,47,67],$VF=[2,109],$VG=[1,160],$VH=[1,161],$VI=[1,163],$VJ=[1,162],$VK=[1,164],$VL=[2,56],$VM=[1,171],$VN=[1,172],$VO=[2,17,21,42,47,50,51,52,67],$VP=[1,180],$VQ=[1,181],$VR=[1,182],$VS=[1,183],$VT=[1,184],$VU=[1,185],$VV=[2,17,21,42,44,45,47,50,51,52,56,57,58,59,60,61,62,63,64,65,67],$VW=[5,15,16,22,36,39,75,77,78,82,83,84,85,86,89,90,91,92,95,96],$VX=[15,16,22,36,39,75,78,82,83,84,85,86,89,90,91,92,95,96],$VY=[1,255],$VZ=[1,258],$V_=[2,17,19,21,37,47,67],$V$=[2,42],$V01=[2,43],$V11=[2,44],$V21=[2,17,19,21,37,45,47,67],$V31=[2,46],$V41=[2,42,47],$V51=[2,17,21,42,44,45,47,50,51,52,56,57,58,59,60,61,67],$V61=[1,305],$V71=[2,21,44,45,50,51,52,56,57,58,59,60,61,62,63,64,65],$V81=[2,47,67],$V91=[2,270],$Va1=[1,372],$Vb1=[47,67],$Vc1=[2,17,21,42,44,45,47,50,51,52,56,57,58,59,60,61,62,63,65,67],$Vd1=[21,44,45,50,51,52,56,57,58,59,60,61,62,63,64,65],$Ve1=[2,107],$Vf1=[39,82,83],$Vg1=[16,39],$Vh1=[2,16,27,28,29,30,39,43];
var parser = {trace: function trace () { },
yy: {},
symbols_: {"error":2,"S":3,"I":4,"EOF":5,"DECLARACION":6,"ASIGNACION":7,"IF":8,"SWITCH":9,"WHILE":10,"DOWHILE":11,"FOR":12,"FESP":13,"FUNCION":14,"tk_let":15,"tk_id":16,"tk_dospuntos":17,"TIPOV2":18,"tk_igual":19,"VALOR":20,"tk_puntoycoma":21,"tk_const":22,"TYPES":23,"tk_inc":24,"tk_dec":25,"TIPOV":26,"tk_string":27,"tk_number":28,"tk_boolean":29,"tk_void":30,"ARRAY":31,"ASIGTYPE":32,"VARRAY":33,"T":34,"VALFUNCION":35,"tk_type":36,"tk_llavea":37,"LTYPE":38,"tk_llavec":39,"LASIGTYPE":40,"tk_llaveca":41,"tk_llavecc":42,"tk_array":43,"tk_menor":44,"tk_mayor":45,"LVALARRAY":46,"tk_coma":47,"A":48,"L":49,"tk_ternario":50,"tk_and":51,"tk_or":52,"tk_not":53,"tk_t_boolean":54,"R":55,"tk_mayorigual":56,"tk_menorigual":57,"tk_igualdad":58,"tk_diferente":59,"tk_suma":60,"tk_resta":61,"tk_mult":62,"tk_div":63,"tk_exp":64,"tk_mod":65,"tk_pabierto":66,"tk_pcerrado":67,"tk_t_string":68,"tk_t_entero":69,"tk_t_decimal":70,"tk_lenght":71,"BSENTENCIAS":72,"SENTENCIAS":73,"ST":74,"tk_if":75,"ELSE":76,"tk_else":77,"tk_switch":78,"BSWITCH":79,"CASE":80,"DEFAULT":81,"tk_case":82,"tk_default":83,"tk_while":84,"tk_do":85,"tk_for":86,"tk_in":87,"tk_of":88,"tk_break":89,"tk_continue":90,"tk_return":91,"tk_fn":92,"PARFUNC":93,"LPAR":94,"tk_console":95,"tk_graficar":96,"tk_push":97,"tk_pop":98,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",15:"tk_let",16:"tk_id",17:"tk_dospuntos",19:"tk_igual",21:"tk_puntoycoma",22:"tk_const",24:"tk_inc",25:"tk_dec",27:"tk_string",28:"tk_number",29:"tk_boolean",30:"tk_void",36:"tk_type",37:"tk_llavea",39:"tk_llavec",41:"tk_llaveca",42:"tk_llavecc",43:"tk_array",44:"tk_menor",45:"tk_mayor",47:"tk_coma",50:"tk_ternario",51:"tk_and",52:"tk_or",53:"tk_not",54:"tk_t_boolean",56:"tk_mayorigual",57:"tk_menorigual",58:"tk_igualdad",59:"tk_diferente",60:"tk_suma",61:"tk_resta",62:"tk_mult",63:"tk_div",64:"tk_exp",65:"tk_mod",66:"tk_pabierto",67:"tk_pcerrado",68:"tk_t_string",69:"tk_t_entero",70:"tk_t_decimal",71:"tk_lenght",75:"tk_if",77:"tk_else",78:"tk_switch",82:"tk_case",83:"tk_default",84:"tk_while",85:"tk_do",86:"tk_for",87:"tk_in",88:"tk_of",89:"tk_break",90:"tk_continue",91:"tk_return",92:"tk_fn",95:"tk_console",96:"tk_graficar",97:"tk_push",98:"tk_pop"},
productions_: [0,[3,2],[3,1],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[6,7],[6,7],[6,7],[6,7],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,3],[6,3],[6,1],[6,3],[6,3],[6,3],[6,3],[6,2],[6,2],[6,2],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[18,1],[18,1],[20,1],[20,1],[20,1],[20,1],[20,2],[20,2],[20,1],[23,6],[23,6],[38,5],[38,5],[38,4],[38,4],[32,3],[32,3],[40,5],[40,5],[40,4],[40,4],[31,3],[31,3],[31,3],[31,3],[31,4],[33,3],[46,3],[46,3],[46,1],[7,4],[7,4],[7,7],[7,7],[34,5],[34,1],[49,3],[49,3],[49,2],[49,1],[49,1],[55,3],[55,3],[55,3],[55,3],[55,3],[55,3],[55,1],[48,3],[48,3],[48,3],[48,3],[48,3],[48,3],[48,2],[48,3],[48,1],[48,1],[48,1],[48,4],[48,4],[48,1],[72,3],[72,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[73,1],[8,6],[8,5],[8,5],[8,5],[8,3],[76,2],[76,2],[9,5],[9,5],[9,5],[9,3],[79,4],[79,3],[79,2],[79,3],[80,5],[80,5],[80,5],[80,5],[80,4],[80,4],[80,4],[80,4],[80,4],[80,4],[80,3],[80,3],[81,3],[81,3],[81,2],[10,5],[10,5],[10,5],[10,5],[10,3],[11,7],[11,7],[11,7],[11,7],[11,7],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,5],[12,3],[74,2],[74,2],[74,2],[74,2],[74,2],[74,2],[74,3],[74,3],[74,2],[14,7],[14,7],[14,7],[14,7],[14,7],[14,7],[14,8],[14,8],[14,8],[14,8],[14,8],[14,8],[93,5],[93,3],[93,1],[35,3],[35,4],[94,3],[94,1],[13,5],[13,5],[13,5],[13,5],[13,4],[13,4],[13,4],[13,4],[13,6],[13,6],[13,6],[13,6],[13,6],[13,5],[13,5],[13,5],[13,5]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:

          var nodo = new Nodo("S","S",+yylineno+1,+_$[$0-1].first_column+1)
          nodo.addHijo($$[$0-1])
          var texto = ""
          if($$[$0-1].trad){
            texto = $$[$0-1].trad;
          }
          var trad = new Traduccion(nodo,texto,errores.getLista()); 
          errores.limpiar();
          return trad;
        
break;
case 2:

        var trad = new Traduccion(new Nodo("S","S",+yylineno+1,+_$[$0].first_column+1),"",errores.getLista()); 
        errores.limpiar();
        return trad;
      
break;
case 3: case 4:

                  var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
                  nodo.addHijo($$[$0-1]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-1].trad + $$[$0].trad;
                
break;
case 5: case 9:

          var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
          nodo.addHijo($$[$0-1]);
          nodo.addHijo($$[$0]);
          this.$ = nodo;
          this.$.trad = $$[$0-1].trad + $$[$0].trad;
        
break;
case 6: case 8: case 11:

              var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
              nodo.addHijo($$[$0-1]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-1].trad + $$[$0].trad;
            
break;
case 7: case 10:

            var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
            nodo.addHijo($$[$0-1]);
            nodo.addHijo($$[$0]);
            this.$ = nodo;
            this.$.trad = $$[$0-1].trad + $$[$0].trad;
          
break;
case 12: case 13: case 14: case 15: case 16: case 17: case 18: case 19: case 122: case 123: case 124: case 125: case 126: case 127: case 128: case 129: case 130:
 this.$ = $$[$0]; this.$.trad = $$[$0].trad; 
break;
case 20:

              this.$ = $$[$0];
              this.$.trad = $$[$0].trad; 
            
break;
case 21:

          console.error("Error sintactico: "+$$[$0]+" Desconocido Inicio");
          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> DECLARACION || ASIGNACION || IF || SWITCH || WHILE || DOWHILE || FOR || console.log || graficar_ts",+yylineno+1,+_$[$0].last_column+1)
          errores.addError(error);
          this.$ = new Nodo("","")
          this.$.trad = "";
        
break;
case 22:
 
                                                                            var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-6].first_column+1);
                                                                            var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                            nodo.addHijo(id);
                                                                            nodo.addHijo($$[$0-3]); //tipo
                                                                            nodo.addHijo($$[$0-1]); //valor
                                                                            this.$ = nodo;
                                                                            this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                          
break;
case 23:

                                                                    console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                                    var error = new Error("Sintactico","Encontrado: \""+$$[$0]+"\" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1)
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-6].first_column+1);
                                                                    var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                    nodo.addHijo(id);
                                                                    nodo.addHijo($$[$0-3]); //tipo
                                                                    nodo.addHijo($$[$0-1]); //valor
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                                  
break;
case 24:

                                                                              var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-6].first_column+1);
                                                                              var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                              nodo.addHijo(id);
                                                                              nodo.addHijo($$[$0-3]); //tipo
                                                                              nodo.addHijo($$[$0-1]); //valor
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                            
break;
case 25:

                                                                      console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                                      errores.addError(error);

                                                                      var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-6].first_column+1);
                                                                      var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                      nodo.addHijo(id);
                                                                      nodo.addHijo($$[$0-3]); //tipo
                                                                      nodo.addHijo($$[$0-1]); //valor
                                                                      this.$ = nodo;
                                                                      this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                                    
break;
case 26:

                                                        var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                        var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                        nodo.addHijo(id);
                                                        nodo.addHijo($$[$0-1]);
                                                        this.$ = nodo;
                                                        this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                      
break;
case 27:

                                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                errores.addError(error);

                                                var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                              
break;
case 28:

                                                          var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-4].first_column+1);
                                                          var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                          nodo.addHijo(id);
                                                          nodo.addHijo($$[$0-1]);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                        
break;
case 29:

                                                  console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                  errores.addError(error);

                                                  var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-4].first_column+1);
                                                  var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                  nodo.addHijo(id);
                                                  nodo.addHijo($$[$0-1]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                
break;
case 30:

                                                            var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                            var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                            nodo.addHijo(id);
                                                            nodo.addHijo($$[$0-1]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                          
break;
case 31:

                                                    console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                    errores.addError(error);

                                                    var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                    var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                    nodo.addHijo(id);
                                                    nodo.addHijo($$[$0-1]);
                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                  
break;
case 32:

                                        var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+" "+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 33:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+" "+$$[$0-1]+";\n";
                              
break;
case 34:

                    this.$ = $$[$0];
                    this.$.trad = $$[$0].trad;
                  
break;
case 35:

                                        var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-1].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 36:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+$$[$0-1]+";\n";
                              
break;
case 37:

                                        var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 38:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+$$[$0-1]+";\n";
                              
break;
case 39: case 41:

                          console.error("Error Sintactico: "+$$[$0]+" error de declaracion");
                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> incremento o decremento",+yylineno+1,+_$[$0].last_column+1);
                          errores.addError(error);

                          this.$ = new Nodo("","")
                          this.$.trad = "";
                        
break;
case 40:

                            console.error("Error Sintactico: "+$$[$0]+" error de declaracion");
                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> incremento o decremento",+yylineno+1,+_$[$0].last_column+1);
                            errores.addError(error);

                            this.$ = new Nodo("","")
                            this.$.trad = "";
                          
break;
case 42:

                  var nodo = new Nodo("TIPO","STRING",+yylineno+1,+_$[$0].first_column+1); 
                  this.$ = nodo;
                  this.$.trad = $$[$0]; 
                
break;
case 43:

                  var nodo = new Nodo("TIPO","NUMBER",+yylineno+1,+_$[$0].first_column+1); 
                  this.$ = nodo;
                  this.$.trad = $$[$0]; 
                
break;
case 44:

                    var nodo = new Nodo("TIPO","BOOLEAN",+yylineno+1,+_$[$0].first_column+1); 
                    this.$ = nodo;
                    this.$.trad = $$[$0]; 
                  
break;
case 45:

                var nodo = new Nodo("TIPO","VOID",+yylineno+1,+_$[$0].first_column+1); 
                this.$ = nodo;
                this.$.trad = $$[$0]; 
              
break;
case 46:

              var nodo = new Nodo("TIPO","ID",+yylineno+1,+_$[$0].first_column+1);
              var id = new Nodo("ID",$$[$0],+yylineno+1,+_$[$0].first_column+1);
              nodo.addHijo(id); 
              this.$ = nodo;
              this.$.trad = $$[$0]; 
            
break;
case 47:

              console.error("Error sintactico: "+$$[$0]+" error tipo");
              var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> un tipo de dato",+yylineno+1,+_$[$0].last_column+1);
              errores.addError(error);
              this.$ = new Nodo("","")
              this.$.trad = "";
            
break;
case 48: case 49:
 
              this.$ = $$[$0];
              this.$.trad = $$[$0].trad; 
            
break;
case 50:
 
                  this.$ = $$[$0];
                  this.$.trad = $$[$0].trad; 
                
break;
case 51:
 
                this.$ = $$[$0];
                this.$.trad = $$[$0].trad; 
              
break;
case 52:
 
          this.$ = $$[$0];
          this.$.trad = $$[$0].trad;
        
break;
case 53:
 
                    this.$ = $$[$0];
                    this.$.trad = $$[$0].trad;
                  
break;
case 54:
 
                      var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-1].first_column+1);
                      var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1)
                      nodo.addHijo(id);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1] + $$[$0];
                    
break;
case 55:
 
                      var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-1].first_column+1);
                      var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1)
                      nodo.addHijo(id);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1] + $$[$0];
                    
break;
case 56:

              console.error("Error sintactico: "+$$[$0]+" error valor");
              var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> un valor o operacion",+yylineno+1,+_$[$0].last_column+1);
              errores.addError(error);
              this.$ = new Nodo("","")
              this.$.trad = "";
            
break;
case 57:

                                                              var nodo = new Nodo("DECLARACION","TYPE",+yylineno+1,+_$[$0-5].first_column+1);
                                                              var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-5].first_column+1);
                                                              nodo.addHijo(id);
                                                              nodo.addHijo($$[$0-2]); //lista
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-5] + " " + $$[$0-4] + $$[$0-3] + "\n" + $$[$0-2].trad + $$[$0-1] + $$[$0] + "\n";  
                                                            
break;
case 58:

                                                      console.error("Error sintantico: "+$$[$0]+" error types");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                      errores.addError(error);

                                                      var nodo = new Nodo("DECLARACION","TYPE",+yylineno+1,+_$[$0-5].first_column+1);
                                                      var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-5].first_column+1);
                                                      nodo.addHijo(id);
                                                      nodo.addHijo($$[$0-2]); //lista
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-5] + " " + $$[$0-4] + $$[$0-3] + "\n" + $$[$0-2].trad + $$[$0-1] + ";\n";
                                                    
break;
case 59:

                                                      var nodo = new Nodo("LISTATIPO","LISTATIPO",+yylineno+1,+_$[$0-4].first_column+1);
                                                      nodo.addHijo($$[$0-4]);
                                                      nodo.addHijo($$[$0-3]);
                                                      var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                                      nodo.addHijo(id);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4].trad + $$[$0-3].trad + $$[$0-2] + " " + $$[$0-1] + $$[$0] + "\n";
                                                    
break;
case 60:

                                                console.error("Error sintantico: "+$$[$0]+" error types");
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                errores.addError(error);
                                                
                                                var nodo = new Nodo("LISTATIPO","LISTATIPO",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-4]);
                                                nodo.addHijo($$[$0-3]);
                                                var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                                nodo.addHijo(id);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4].trad + $$[$0-3].trad + $$[$0-2] + " " + $$[$0-1] + ";\n";
                                              
break;
case 61:

                                                  var nodo = new Nodo("LISTATIPO","LISTATIPO",+yylineno+1,+_$[$0-3].first_column+1);
                                                  nodo.addHijo($$[$0-3]);
                                                  var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                                  nodo.addHijo(id);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-3].trad + $$[$0-2] + " " + $$[$0-1] + $$[$0] + "\n";
                                                
break;
case 62:

                                          console.error("Error sintantico: "+$$[$0]+" error types");
                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                          errores.addError(error);

                                          var nodo = new Nodo("LISTATIPO","LISTATIPO",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-3]);
                                          var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                          nodo.addHijo(id);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3].trad + $$[$0-2] + " " + $$[$0-1] + ";\n";
                                        
break;
case 63:

                                          var nodo = new Nodo("VALOR","ASIGNACION_TIPO",+yylineno+1,+_$[$0-2].first_column+1);
                                          nodo.addHijo($$[$0-1]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-2] + "\n" + $$[$0-1].trad + $$[$0];
                                        
break;
case 64:

                                      console.error("Error sintactico: "+$$[$0-1]+" error valor");
                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> una lista de valores",+yylineno+1,+_$[$0-1].last_column+1);
                                      errores.addError(error);

                                      var nodo = new Nodo("VALOR","ASIGNACION_TIPO",+yylineno+1,+_$[$0-2].first_column+1);
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2] + "\n" + $$[$0];
                                    
break;
case 65:

                                                              var nodo = new Nodo("LISTATYPE","LISTATYPE",+yylineno+1,+_$[$0-4].first_column+1);
                                                              var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                              nodo.addHijo($$[$0-4]);
                                                              nodo.addHijo(id);
                                                              nodo.addHijo($$[$0-1]);
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-4].trad + $$[$0-3] + $$[$0-2] + " " + $$[$0-1].trad + $$[$0] + "\n";
                                                            
break;
case 66:

                                                      console.error("Error sintactico: "+$$[$0]+" error valor");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                      errores.addError(error);

                                                      var nodo = new Nodo("LISTATYPE","LISTATYPE",+yylineno+1,+_$[$0-4].first_column+1);
                                                      var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                      nodo.addHijo($$[$0-4]);
                                                      nodo.addHijo(id);
                                                      nodo.addHijo($$[$0-1]);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4].trad + $$[$0-3] + $$[$0-2] + " " + $$[$0-1].trad +";\n";
                                                    
break;
case 67:

                                                    var nodo = new Nodo("LISTATYPE","LISTATYPE",+yylineno+1,+_$[$0-3].first_column+1);
                                                    var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                    nodo.addHijo(id);
                                                    nodo.addHijo($$[$0-1]);
                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-3] + $$[$0-2] + $$[$0-1].trad + $$[$0] + "\n";
                                                  
break;
case 68:

                                            console.error("Error sintactico: "+$$[$0]+" error valor");
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("LISTATYPE","LISTATYPE",+yylineno+1,+_$[$0-3].first_column+1);
                                            var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                            nodo.addHijo(id);
                                            nodo.addHijo($$[$0-1]);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-3] + $$[$0-2] + $$[$0-1].trad +";\n";
                                          
break;
case 69:

                                          var nodo = new Nodo("TIPO","ARRAY_STRING",+yylineno+1,+_$[$0-2].first_column+1);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                       
break;
case 70:

                                        var nodo = new Nodo("TIPO","ARRAY_NUMBER",+yylineno+1,+_$[$0-2].first_column+1);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                      
break;
case 71:

                                        var nodo = new Nodo("TIPO","ARRAY_BOOLEAN",+yylineno+1,+_$[$0-2].first_column+1);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                       
break;
case 72:

                                    var nodo = new Nodo("TIPO","ARRAY_ID",+yylineno+1,+_$[$0-2].first_column+1);
                                    var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                    nodo.addHijo(id)
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                  
break;
case 73:

                                          var nodo = new Nodo("TIPO","ARRAY_TIPO",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-1])
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                        
break;
case 74:

                                          var nodo = new Nodo("VARRAY","VARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                          nodo.addHijo($$[$0-1]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-2] + $$[$0-1].trad + $$[$0];
                                        
break;
case 75:

                                      var nodo = new Nodo("LISTA_ARRAY","LISTA_ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                      nodo.addHijo($$[$0-2]);
                                      nodo.addHijo($$[$0]);
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2].trad + $$[$0-1] + " " + $$[$0].trad;
                                   
break;
case 76:

                                  console.error("Error sintactico: "+$$[$0-1]+" error valor");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> ,",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  var nodo = new Nodo("LISTA_ARRAY","LISTA_ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                  nodo.addHijo($$[$0-2]);
                                  nodo.addHijo($$[$0]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2].trad + ", " + $$[$0].trad;
                                
break;
case 77:

                  this.$ = $$[$0];
                  this.$.trad = $$[$0].trad;
                
break;
case 78:
 
                                                var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-3].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                              
break;
case 79:

                                        console.log("Error Sintactico "+$$[$0]+"Error falto punto y coma");
                                        var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                        errores.addError(error);

                                        var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-3].first_column+1);
                                        var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                        nodo.addHijo(id);
                                        nodo.addHijo($$[$0-1]);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                      
break;
case 80:

                                                                        var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-6].first_column+1);
                                                                        var arr = new Nodo("ARRAY","ARRAY",+yylineno+1,+_$[$0-6].first_column+1);
                                                                        var id = new Nodo("ID",$$[$0-6],+yylineno+1,+_$[$0-6].first_column+1);
                                                                        arr.addHijo(id);
                                                                        arr.addHijo($$[$0-4]);
                                                                        nodo.addHijo(arr);
                                                                        nodo.addHijo($$[$0-1]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                      
break;
case 81:

                                                                console.log("Error Sintactico "+$$[$0-3]+"Error falto punto y coma");
                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> ;",+yylineno+1,+_$[$0-3].last_column+1);
                                                                errores.addError(error);

                                                                var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-6].first_column+1);
                                                                var arr = new Nodo("ARRAY","ARRAY",+yylineno+1,+_$[$0-6].first_column+1);
                                                                var id = new Nodo("ID",$$[$0-6],+yylineno+1,+_$[$0-6].first_column+1);
                                                                arr.addHijo(id);
                                                                arr.addHijo($$[$0-4]);
                                                                nodo.addHijo(arr);
                                                                nodo.addHijo($$[$0-1]);
                                                                this.$ = nodo;
                                                                this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                              
break;
case 82:

                                    var nodo = new Nodo("T","T",+yylineno+1,+_$[$0-4].first_column+1);
                                    nodo.addHijo($$[$0-4]);
                                    nodo.addHijo($$[$0-2]);
                                    nodo.addHijo($$[$0]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-4].trad + " " + $$[$0-3] + " " + $$[$0-2].trad +$$[$0-1]+$$[$0].trad;
                                  
break;
case 83:
 
      this.$ = $$[$0]; 
      this.$.trad = $$[$0].trad; 
    
break;
case 84:

                var nodo = new Nodo("L","AND",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 85:

              var nodo = new Nodo("L","OR",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 86:

              var nodo = new Nodo("L","NOT",+yylineno+1,+_$[$0-1].first_column+1);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-1] + " " + $$[$0].trad;
            
break;
case 87:

                  var nodo = new Nodo("BOOLEAN",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                  this.$ = nodo;
                  this.$.trad = $$[$0]
                
break;
case 88:

       this.$=$$[$0];
       this.$.trad = $$[$0].trad;
     
break;
case 89:

                  var nodo = new Nodo("R","MAYOR",+yylineno+1,+_$[$0-2].first_column+1);
                  nodo.addHijo($$[$0-2]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                
break;
case 90:

                  var nodo = new Nodo("R","MENOR",+yylineno+1,+_$[$0-2].first_column+1);
                  nodo.addHijo($$[$0-2]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                
break;
case 91:

                      var nodo = new Nodo("R","MAYORIGUAL",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 92:

                      var nodo = new Nodo("R","MENORIGUAL",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 93:

                      var nodo = new Nodo("R","IGUALDAD",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                   
break;
case 94:

                      var nodo = new Nodo("R","DESIGUALDAD",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 95:

      this.$ = $$[$0];
      this.$.trad = $$[$0].trad;
    
break;
case 96:

                var nodo = new Nodo("A","SUMA",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 97:

                var nodo = new Nodo("A","RESTA",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 98:

                var nodo = new Nodo("A","MULTI",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 99:

              var nodo = new Nodo("A","DIV",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 100:

              var nodo = new Nodo("A","EXP",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 101:

              var nodo = new Nodo("A","MOD",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 102:

                var nodo = new Nodo("NEGATIVO","NEGATIVO",+yylineno+1,+_$[$0-1].first_column+1);
                nodo.addHijo($$[$0])
                this.$ = nodo;
                this.$.trad = $$[$0-1] + $$[$0].trad;
             
break;
case 103:

                              this.$ = $$[$0-1];
                              this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+" "+$$[$0];
                           
break;
case 104:

                var nodo = new Nodo("STRING",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = "\""+$$[$0]+"\"";
              
break;
case 105:

                var nodo = new Nodo("ENTERO",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = $$[$0];
              
break;
case 106:

                var nodo = new Nodo("DECIMAL",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = $$[$0];
              
break;
case 107:

                                  var nodo = new Nodo("ARRAY","ARRAY",+yylineno+1,+_$[$0-3].first_column+1);
                                  var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                  nodo.addHijo(id);
                                  nodo.addHijo($$[$0-1]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                
break;
case 108:

                                              var nodo = new Nodo("LENGTH","LENGTH",+yylineno+1,+_$[$0-3].last_column+1);
                                              var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                              nodo.addHijo(id);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0];
                                            
break;
case 109:

            var nodo = new Nodo("ID",$$[$0],+yylineno+1,+_$[$0].first_column+1);
            this.$ = nodo;
            this.$.trad = $$[$0];
          
break;
case 110:

                                              //console.log("BSENTENCIAS-----------------")
                                              //var s =  eval('$$');
                                              //console.log(s)
                                              this.$ = $$[$0-1];
                                              if($$[$0-1].func){
                                                this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n"+$$[$0-1].func;
                                              } else {
                                                this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n";
                                              }
                                            
break;
case 111:

                                  //console.log("BSENTENCIAS-----------------")
                                  //var s =  eval('$$');
                                  //console.log(s)
                                  this.$ = new Nodo("","");
                                  this.$.trad = $$[$0-1]+$$[$0]+"\n";
                                
break;
case 112:

                                      var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                      nodo.addHijo($$[$0-1]);
                                      nodo.addHijo($$[$0]);
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-1].trad + $$[$0].trad;
                                   
break;
case 113:

                                    var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                    nodo.addHijo($$[$0-1]);
                                    nodo.addHijo($$[$0]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-1].trad + $$[$0].trad;
                                  
break;
case 114: case 118:

                            var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                            nodo.addHijo($$[$0-1]);
                            nodo.addHijo($$[$0]);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1].trad + $$[$0].trad;
                          
break;
case 115: case 117:

                                var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo($$[$0-1]);
                                nodo.addHijo($$[$0]);
                                this.$ = nodo;
                                this.$.trad = $$[$0-1].trad + $$[$0].trad;
                              
break;
case 116:

                              var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              nodo.addHijo($$[$0]);
                              this.$ = nodo;
                              this.$.trad = $$[$0-1].trad + $$[$0].trad;
                            
break;
case 119:
  
                            var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                            nodo.addHijo($$[$0-1]);
                            nodo.addHijo($$[$0]);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1].trad + $$[$0].trad;
                          
break;
case 120:
  
                              var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              nodo.addHijo($$[$0]);
                              this.$ = nodo;
                              this.$.trad = $$[$0-1].trad + $$[$0].trad;
                            
break;
case 121:
  
                                var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo($$[$0-1]);
                                nodo.addHijo($$[$0]);
                                this.$ = nodo;
                                this.$.trad = $$[$0-1].trad;
                                this.$.func = $$[$0].trad;
                              
break;
case 131:
 
                     this.$ = $$[$0]; 
                     this.$.trad = ""; 
                     this.$.func = $$[$0].func;
                    
break;
case 132:

                    console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> DECLARACION||ASIGNACION||IF||SWITCH||WHILE||DO WHILE||SENTENCIAS DE TRANSFARENCIA||console.log()||graficar_ts()",+yylineno+1,+_$[$0].last_column+1);
                    errores.addError(error);
                    this.$ = new Nodo("","");
                    this.$.trad = "";
                  
break;
case 133:

                                                      var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-5].first_column+1);
                                                      nodo.addHijo($$[$0-3]); //condicion
                                                      nodo.addHijo($$[$0-1]); //sentencias
                                                      nodo.addHijo($$[$0]); //else
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3].trad+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                    
break;
case 134:

                                                  var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                                  nodo.addHijo($$[$0-2]); //condicion
                                                  nodo.addHijo($$[$0]); //sentencias
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                
break;
case 135:

                                            console.error("Error Sintactico: "+$$[$0-3]+" Error parametros en if")
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                            nodo.addHijo($$[$0-2]); //condicion
                                            nodo.addHijo($$[$0]); //sentencias
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-4]+"("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                          
break;
case 136:

                                            console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en if")
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                            nodo.addHijo($$[$0-2]); //condicion
                                            nodo.addHijo($$[$0]); //sentencias
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                          
break;
case 137:

                              console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en if")
                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Condicion en if",+yylineno+1,+_$[$0-1].last_column+1);
                              errores.addError(error);

                              this.$ = new Nodo("","");
                              this.$.trad = "";
                            
break;
case 138:

                            var nodo = new Nodo("ELSE","ELSE",+yylineno+1,+_$[$0-1].first_column+1)
                            nodo.addHijo($$[$0]);

                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                          
break;
case 139:

                  var nodo = new Nodo("ELSE","ELSE",+yylineno+1,+_$[$0-1].first_column+1)
                  nodo.addHijo($$[$0]);

                  this.$ = nodo;
                  this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                
break;
case 140:

                                                      var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                      nodo.addHijo($$[$0-2]);
                                                      nodo.addHijo($$[$0]);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                    
break;
case 141:

                                                console.error("Error Sintactico: "+$$[$0-3]+" Error parametros en switch")
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                errores.addError(error);

                                                var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" ("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                              
break;
case 142:

                                                console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en switch")
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                errores.addError(error);

                                                var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                              
break;
case 143:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en switch")
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> condicion del switch",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  this.$ = new Nodo("","");
                                  this.$.trad = "";
                                
break;
case 144:

                                            var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-3].first_column+1);
                                            nodo.addHijo($$[$0-2]);
                                            nodo.addHijo($$[$0-1]);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-3]+"\n"+$$[$0-2].trad+$$[$0-1].trad+$$[$0]+"\n";
                                          
break;
case 145:

                                  var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-2].first_column+1);
                                  nodo.addHijo($$[$0-1]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n";
                                
break;
case 146:

                            var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-1].first_column+1);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+"\n"+$$[$0]+"\n";
                          
break;
case 147:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> CASE o DEFAULT",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-2].first_column+1);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2]+"\n"+$$[$0]+"\n";
                                
break;
case 148:

                                              var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-4].first_column+1);
                                              nodo.addHijo($$[$0-4]);
                                              nodo.addHijo($$[$0-2]);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-4].trad+$$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+"\n"+$$[$0].trad;
                                            
break;
case 149:

                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                                  errores.addError(error);

                                                  this.$ = new Nodo("","");
                                                  this.$.trad = "";
                                                
break;
case 150:

                                                var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-4]);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4].trad+$$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                              
break;
case 151:

                                                    console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                                    errores.addError(error);

                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                 
break;
case 152:

                                    var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                    nodo.addHijo($$[$0-3]);
                                    nodo.addHijo($$[$0-1]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-3].trad+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                  
break;
case 153:

                                        console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-1].last_column+1);
                                        errores.addError(error);

                                        this.$ = new Nodo("","");
                                        this.$.trad = "";
                                      
break;
case 154:

                                          var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-2]);
                                          nodo.addHijo($$[$0]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+"\n"+$$[$0].trad;
                                        
break;
case 155: case 157:

                                              console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                              errores.addError(error);

                                              this.$ = new Nodo("","");
                                              this.$.trad = "";
                                            
break;
case 156:

                                          var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-2]);
                                          nodo.addHijo($$[$0]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                        
break;
case 158:

                              var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-2].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              this.$ = nodo;
                              this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                            
break;
case 159:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  this.$ = new Nodo("","");
                                  this.$.trad = "";
                                
break;
case 160:

                                              var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-2].last_column+1);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-2]+$$[$0-1]+"\n"+$$[$0].trad;
                                            
break;
case 161:

                                              var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-2].last_column+1);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0].trad;
                                            
break;
case 162:

                                  var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-1].last_column+1);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-1]+$$[$0]+"\n";
                                
break;
case 163:

                                                        var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                        nodo.addHijo($$[$0-2]);
                                                        nodo.addHijo($$[$0]);
                                                        this.$ = nodo;
                                                        this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                      
break;
case 164:

                                                  console.error("Error Sintactico: "+$$[$0-3]+" Error en While");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo($$[$0-2]);
                                                  nodo.addHijo($$[$0]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+"("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                
break;
case 165:

                                                            console.error("Error Sintactico: "+$$[$0-2]+" Error en While");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> (",+yylineno+1,+_$[$0-2].last_column+1);
                                                            errores.addError(error);

                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 166:

                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en While");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> (",+yylineno+1,+_$[$0-1].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo($$[$0-2]);
                                                  nodo.addHijo($$[$0]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                                
break;
case 167:

                                    console.error("Error Sintactico: "+$$[$0]+" Error en While");
                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Parametros While",+yylineno+1,+_$[$0].last_column+1);
                                    errores.addError(error);

                                    this.$ = new Nodo("","");
                                    this.$.trad = "";
                                  
break;
case 168:

                                                                              var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                              nodo.addHijo($$[$0-5]);
                                                                              nodo.addHijo($$[$0-2]);
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                            
break;
case 169:

                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                        nodo.addHijo($$[$0-5]);
                                                                        nodo.addHijo($$[$0-2]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5].trad+"("+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                      
break;
case 170:

                                                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error en do While");
                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametros do While",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                  errores.addError(error);
                                                                                  
                                                                                  this.$ = new Nodo("","");
                                                                                  this.$.trad = "";
                                                                                
break;
case 171:

                                                                        console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                        nodo.addHijo($$[$0-5]);
                                                                        nodo.addHijo($$[$0-2]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0]+"\n";
                                                                      
break;
case 172:

                                                                      console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                                      errores.addError(error);

                                                                      var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                      nodo.addHijo($$[$0-5]);
                                                                      nodo.addHijo($$[$0-2]);
                                                                      this.$ = nodo;
                                                                      this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                                    
break;
case 173:

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                        
                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 174:
  
                                                                                                                  console.error("Error Sintactico: "+$$[$0-11]+" Error en for");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-11]+" Se esperaba -> (",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+"("+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 175:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-10]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> let",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                      var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      dec.addHijo(id1);
                                                                                                                      dec.addHijo($$[$0-7]);

                                                                                                                      var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      inc.addHijo(id2);

                                                                                                                      nodo.addHijo(dec); //declaracion
                                                                                                                      nodo.addHijo($$[$0-5]); //condicion
                                                                                                                      nodo.addHijo(inc); //incremento
                                                                                                                      nodo.addHijo($$[$0]); //sentencias

                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+"let"+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;    
                                                                                                                    
break;
case 176: case 188:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-9]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-9]+" Se esperaba -> id",+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        this.$ = new Nodo("","");
                                                                                                                        this.$.trad = "";
                                                                                                                      
break;
case 177:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-8]+" Error en do While");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                    var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                    dec.addHijo(id1);
                                                                                                                    dec.addHijo($$[$0-7]);

                                                                                                                    var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                    var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                    inc.addHijo(id2);

                                                                                                                    nodo.addHijo(dec); //declaracion
                                                                                                                    nodo.addHijo($$[$0-5]); //condicion
                                                                                                                    nodo.addHijo(inc); //incremento
                                                                                                                    nodo.addHijo($$[$0]); //sentencias

                                                                                                                    this.$ = nodo;
                                                                                                                    this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                  
break;
case 178:

                                                                                                                console.error("Error Sintactico: "+$$[$0-6]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 179: case 191:

                                                                                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en do While");
                                                                                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> Condicion For",+yylineno+1,+_$[$0-5].last_column+1);
                                                                                                                            errores.addError(error);

                                                                                                                            this.$ = new Nodo("","");
                                                                                                                            this.$.trad = "";
                                                                                                                          
break;
case 180:

                                                                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias
                                                                                                                
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 181:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
    
                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 182:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-2]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ++||--",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                      var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      dec.addHijo(id1);
                                                                                                                      dec.addHijo($$[$0-7]);

                                                                                                                      var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      inc.addHijo(id2);

                                                                                                                      nodo.addHijo(dec); //declaracion
                                                                                                                      nodo.addHijo($$[$0-5]); //condicion
                                                                                                                      nodo.addHijo(inc); //incremento
                                                                                                                      nodo.addHijo($$[$0]); //sentencias

                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+"++"+$$[$0-1]+$$[$0].trad;
                                                                                                                    
break;
case 183:

                                                                                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 184:

                                                                                                                  console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> SENTENCIAS",+yylineno+1,+_$[$0].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                                
break;
case 185:

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 186:
  
                                                                                                                  console.error("Error Sintactico: "+$$[$0-11]+" Error en for");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-11]+" Se esperaba -> (",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+"("+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 187:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-10]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> let",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                      var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      dec.addHijo(id1);
                                                                                                                      dec.addHijo($$[$0-7]);

                                                                                                                      var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      inc.addHijo(id2);

                                                                                                                      nodo.addHijo(dec); //declaracion
                                                                                                                      nodo.addHijo($$[$0-5]); //condicion
                                                                                                                      nodo.addHijo(inc); //incremento
                                                                                                                      nodo.addHijo($$[$0]); //sentencias

                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+"let"+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;    
                                                                                                                    
break;
case 189:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-8]+" Error en do While");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                    var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                    dec.addHijo(id1);
                                                                                                                    dec.addHijo($$[$0-7]);

                                                                                                                    var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                    var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                    inc.addHijo(id2);

                                                                                                                    nodo.addHijo(dec); //declaracion
                                                                                                                    nodo.addHijo($$[$0-5]); //condicion
                                                                                                                    nodo.addHijo(inc); //incremento
                                                                                                                    nodo.addHijo($$[$0]); //sentencias

                                                                                                                    this.$ = nodo;
                                                                                                                    this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                  
break;
case 190:

                                                                                                                console.error("Error Sintactico: "+$$[$0-6]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 192:

                                                                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias
                                                                                                                
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 193:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 194:

                                                                                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 195:

                                                                                                                  console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> SENTENCIAS",+yylineno+1,+_$[$0].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                                
break;
case 196:

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 197:

                                                                                                          console.error("Error Sintactico: "+$$[$0-10]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> (",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //incremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+"("+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                        
break;
case 198: case 209:

                                                                                                                console.error("Error Sintactico: "+$$[$0-9]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-9]+" Se esperaba -> id",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                this.$ = new Nodo("","");
                                                                                                                this.$.trad = "";
                                                                                                              
break;
case 199:

                                                                                                              console.error("Error Sintactico: "+$$[$0-8]+" Error en for");
                                                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                              errores.addError(error);

                                                                                                              var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                              var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                              var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                              dec.addHijo(id1);
                                                                                                              dec.addHijo($$[$0-7]);

                                                                                                              var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                              var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                              inc.addHijo(id2);

                                                                                                              nodo.addHijo(dec); //declaracion
                                                                                                              nodo.addHijo($$[$0-5]); //condicion
                                                                                                              nodo.addHijo(inc); //incremento
                                                                                                              nodo.addHijo($$[$0]); //sentencias

                                                                                                              this.$ = nodo;
                                                                                                              this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                            
break;
case 200:

                                                                                                        console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 201: case 212:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> condicion for",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    this.$ = new Nodo("","");
                                                                                                                    this.$.trad = "";
                                                                                                                  
break;
case 202:

                                                                                                        console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 203:

                                                                                                                console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 204:
  
                                                                                                                console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ++||--",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+"++"+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 205:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //incremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+")"+$$[$0].trad;
                                                                                                        
break;
case 206:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //incremento
                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                        
break;
case 207:

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //decremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 208:

                                                                                                          console.error("Error Sintactico: "+$$[$0-10]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> (",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //decremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+"("+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                        
break;
case 210:

                                                                                                              console.error("Error Sintactico: "+$$[$0-8]+" Error en for");
                                                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                              errores.addError(error);

                                                                                                              var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                              var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                              var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                              dec.addHijo(id1);
                                                                                                              dec.addHijo($$[$0-7]);

                                                                                                              var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                              var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                              inc.addHijo(id2);

                                                                                                              nodo.addHijo(dec); //declaracion
                                                                                                              nodo.addHijo($$[$0-5]); //condicion
                                                                                                              nodo.addHijo(inc); //decremento
                                                                                                              nodo.addHijo($$[$0]); //sentencias

                                                                                                              this.$ = nodo;
                                                                                                              this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                            
break;
case 211:

                                                                                                        console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //decremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 213:

                                                                                                        console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //decremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 214:

                                                                                                                console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //decremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 215:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //decremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+")"+$$[$0].trad;
                                                                                                        
break;
case 216:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //decremento

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                        
break;
case 217:

                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                                  var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-3].last_column+1);
                                                                  var id1 = new Nodo("ID",$$[$0-4]);
                                                                  var id2 = new Nodo("ID",$$[$0-2]);
                                                                  fin.addHijo(id1);
                                                                  fin.addHijo(id2);
                                                                  nodo.addHijo(fin);
                                                                  nodo.addHijo($$[$0]);
                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                
break;
case 218:

                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> (",+yylineno+1,+_$[$0-5].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-3].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4]);
                                                            var id2 = new Nodo("ID",$$[$0-2]);
                                                            fin.addHijo(id1);
                                                            fin.addHijo(id2);
                                                            nodo.addHijo(fin);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+"("+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                          
break;
case 219: case 233:

                                                                  console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-4].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 220: case 235:

                                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> id",+yylineno+1,+_$[$0-2].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 221:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-3].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4]);
                                                            var id2 = new Nodo("ID",$$[$0-2]);
                                                            fin.addHijo(id1);
                                                            fin.addHijo(id2);
                                                            nodo.addHijo(fin);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                          
break;
case 222: case 237:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-3].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4]);
                                                            var id2 = new Nodo("ID",$$[$0-2]);
                                                            fin.addHijo(id1);
                                                            fin.addHijo(id2);
                                                            nodo.addHijo(fin);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                          
break;
case 223:

                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","LET");
                                                                          var id1 = new Nodo("ID",$$[$0-5]);
                                                                          var id2 = new Nodo("ID",$$[$0-2]);
                                                                          dec.addHijo(id1);
                                                                          fin.addHijo(dec);
                                                                          fin.addHijo(id2);
                                                                          nodo.addHijo(fin);
                                                                          nodo.addHijo($$[$0]);
                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 224:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    nodo.addHijo($$[$0]);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 225:

                                                                        console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> let",+yylineno+1,+_$[$0-5].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                        var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-4].last_column+1);
                                                                        var dec = new Nodo("DECLARACION","LET");
                                                                        var id1 = new Nodo("ID",$$[$0-5]);
                                                                        var id2 = new Nodo("ID",$$[$0-2]);
                                                                        dec.addHijo(id1);
                                                                        fin.addHijo(dec);
                                                                        fin.addHijo(id2);
                                                                        nodo.addHijo(fin);
                                                                        nodo.addHijo($$[$0]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-7]+$$[$0-6]+"let"+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                      
break;
case 226:

                                                                          console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-5].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 227:

                                                                          console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> in, of",+yylineno+1,+_$[$0-3].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 228: case 242:

                                                                          console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> id",+yylineno+1,+_$[$0-2].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 229:

                                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    nodo.addHijo($$[$0]);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 230:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("IN","IN",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 231:

                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                                  var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-3].last_column+1);
                                                                  var id1 = new Nodo("ID",$$[$0-4]);
                                                                  var id2 = new Nodo("ID",$$[$0-2]);
                                                                  fin.addHijo(id1);
                                                                  fin.addHijo(id2);
                                                                  nodo.addHijo(fin);
                                                                  nodo.addHijo($$[$0]);
                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                
break;
case 232:

                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> (",+yylineno+1,+_$[$0-5].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-3].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4]);
                                                            var id2 = new Nodo("ID",$$[$0-2]);
                                                            fin.addHijo(id1);
                                                            fin.addHijo(id2);
                                                            nodo.addHijo(fin);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+"("+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                          
break;
case 234:

                                                                  console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> in||of",+yylineno+1,+_$[$0-3].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 236:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-3].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4]);
                                                            var id2 = new Nodo("ID",$$[$0-2]);
                                                            fin.addHijo(id1);
                                                            fin.addHijo(id2);
                                                            nodo.addHijo(fin);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                          
break;
case 238:

                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","LET");
                                                                          var id1 = new Nodo("ID",$$[$0-5]);
                                                                          var id2 = new Nodo("ID",$$[$0-2]);
                                                                          dec.addHijo(id1);
                                                                          fin.addHijo(dec);
                                                                          fin.addHijo(id2);
                                                                          nodo.addHijo(fin);
                                                                          nodo.addHijo($$[$0]);
                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 239:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    nodo.addHijo($$[$0]);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 240:

                                                                        console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> let",+yylineno+1,+_$[$0-5].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                        var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-4].last_column+1);
                                                                        var dec = new Nodo("DECLARACION","LET");
                                                                        var id1 = new Nodo("ID",$$[$0-5]);
                                                                        var id2 = new Nodo("ID",$$[$0-2]);
                                                                        dec.addHijo(id1);
                                                                        fin.addHijo(dec);
                                                                        fin.addHijo(id2);
                                                                        nodo.addHijo(fin);
                                                                        nodo.addHijo($$[$0]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-7]+$$[$0-6]+"let"+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                      
break;
case 241:

                                                                          console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-4].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 243:

                                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    nodo.addHijo($$[$0]);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 244:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var fin = new Nodo("OF","OF",+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET");
                                                                    var id1 = new Nodo("ID",$$[$0-5]);
                                                                    var id2 = new Nodo("ID",$$[$0-2]);
                                                                    dec.addHijo(id1);
                                                                    fin.addHijo(dec);
                                                                    fin.addHijo(id2);
                                                                    nodo.addHijo(fin);
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 245:
 
                                                      console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-2].last_column+1);
                                                      errores.addError(error);

                                                      this.$ = new Nodo("","")
                                                      this.$.trad = "";
                                                    
break;
case 246:

                              console.error("Error Sintactico: "+$$[$0-1]+" Error parametros for");
                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                              errores.addError(error);

                              this.$ = new Nodo("","")
                              this.$.trad = "";
                            
break;
case 247:

                            var nodo = new Nodo("BREAK","BREAK",+yylineno+1,+_$[$0-1].last_column+1);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+$$[$0]+"\n";
                          
break;
case 248:

                    console.error("Error Sintactico: "+$$[$0]+" Error break");
                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                    errores.addError(error);

                    var nodo = new Nodo("BREAK","BREAK",+yylineno+1,+_$[$0-1].last_column+1);
                    this.$ = nodo;
                    this.$.trad = $$[$0-1]+";\n";
                  
break;
case 249:

                                var nodo = new Nodo("CONTINUE","CONTINUE",+yylineno+1,+_$[$0-1].last_column+1);
                                this.$ = nodo;
                                this.$.trad = $$[$0-1]+$$[$0]+"\n";
                              
break;
case 250:

                        console.error("Error Sintactico: "+$$[$0]+" Error continue");
                        var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                        errores.addError(error);

                        var nodo = new Nodo("CONTINUE","CONTINUE",+yylineno+1,+_$[$0-1].last_column+1);
                        this.$ = nodo;
                        this.$.trad = $$[$0-1]+";\n";
                      
break;
case 251:

                              var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                              this.$ = nodo;
                              this.$.trad = $$[$0-1]+$$[$0]+"\n";
                            
break;
case 252:

                      console.error("Error Sintactico: "+$$[$0]+" Error return");
                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                      errores.addError(error);

                      var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1]+";\n";
                    
break;
case 253:

                                    var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-2].last_column+1);
                                    nodo.addHijo($$[$0-1]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                  
break;
case 254:

                            console.error("Error Sintactico: "+$$[$0]+" Error return");
                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                            errores.addError(error);

                            var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-2].last_column+1);
                            nodo.addHijo($$[$0-1]);
                            this.$ = nodo;
                            this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+";\n";
                          
break;
case 255:

                          var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                          nodo.addHijo($$[$0]);
                          this.$ = nodo;
                          this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                        
break;
case 256:
 
                                                                              var s =  eval('$$');
                                                                              var ids = "";
                                                                              for(var i=0;i<s.length;i++){
                                                                                if(s[i] === $$[$0-6]){
                                                                                    ids += s[i+1]+"_";
                                                                                }
                                                                              }
                                                                              var nodo = new Nodo("FUNCION","FUNCION",+yylineno+1,+_$[$0-6].first_column+1);
                                                                              var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                              nodo.addHijo(id);
                                                                              nodo.addHijo($$[$0-1]);
                                                                              nodo.addHijo($$[$0]);
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+" "+ids.replace(/.$/,"")+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                              this.$.func = $$[$0-6]+" "+ids.replace(/.$/,"")+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                            
break;
case 257:

                                                                              console.error("Error sintactico: "+$$[$0-5]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> id"+yylineno+1,+_$[$0-5].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 258:

                                                                        console.error("Error sintactico: "+$$[$0-4]+" Desconocido Sentencias");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ("+yylineno+1,+_$[$0-4].last_column+1);
                                                                        
                                                                        errores.addError(error);
                                                                        this.$ = new Nodo("","");
                                                                        this.$.trad = "";
                                                                      
break;
case 259:

                                                                        console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> )"+yylineno+1,+_$[$0-3].last_column+1);
                                                                        
                                                                        errores.addError(error);
                                                                        this.$ = new Nodo("","");
                                                                        this.$.trad = "";
                                                                      
break;
case 260:

                                                                      console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> :"+yylineno+1,+_$[$0-2].last_column+1);
                                                                      
                                                                      errores.addError(error);
                                                                      this.$ = new Nodo("","");
                                                                      this.$.trad = "";
                                                                    
break;
case 261:

                                                                      console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> {"+yylineno+1,+_$[$0].last_column+1);
                                                                      
                                                                      errores.addError(error);
                                                                      this.$ = new Nodo("","");
                                                                      this.$.trad = "";
                                                                    
break;
case 262:

                                                                                      var s =  eval('$$');
                                                                                      var ids = "";
                                                                                      for(var i=0;i<s.length;i++){
                                                                                        if(s[i] === $$[$0-7]){
                                                                                            ids += s[i+1]+"_";
                                                                                        }
                                                                                      }
                                                                                      var nodo = new Nodo("FUNCION","FUNCION",+yylineno+1,+_$[$0-7].first_column+1);
                                                                                      var id = new Nodo("ID",$$[$0-6],+yylineno+1,+_$[$0-6].first_column+1);
                                                                                      nodo.addHijo(id);
                                                                                      nodo.addHijo($$[$0-4]);
                                                                                      nodo.addHijo($$[$0-1]);
                                                                                      nodo.addHijo($$[$0]);
                                                                                      this.$ = nodo;
                                                                                      this.$.trad = $$[$0-7]+" "+ids.replace(/.$/,"")+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                                      this.$.func = $$[$0-7]+" "+ids.replace(/.$/,"")+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                                    
break;
case 263:

                                                                                      console.error("Error sintactico: "+$$[$0-6]+" Desconocido Sentencias");
                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> id"+yylineno+1,+_$[$0-6].last_column+1);
                                                                                      
                                                                                      errores.addError(error);
                                                                                      this.$ = new Nodo("","");
                                                                                      this.$.trad = "";
                                                                                    
break;
case 264:

                                                                                console.error("Error sintactico: "+$$[$0-5]+" Desconocido Sentencias");
                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> ("+yylineno+1,+_$[$0-5].last_column+1);
                                                                                
                                                                                errores.addError(error);
                                                                                this.$ = new Nodo("","");
                                                                                this.$.trad = "";
                                                                              
break;
case 265:

                                                                                console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> )"+yylineno+1,+_$[$0-3].last_column+1);
                                                                                
                                                                                errores.addError(error);
                                                                                this.$ = new Nodo("","");
                                                                                this.$.trad = "";
                                                                              
break;
case 266:

                                                                              console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> :"+yylineno+1,+_$[$0-2].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 267:

                                                                              console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> {"+yylineno+1,+_$[$0-1].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 268:

                                                    var nodo = new Nodo("PARFUNC","PARFUNC",+yylineno+1,+_$[$0-4].first_column+1);
                                                    var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                                    nodo.add($$[$0-4]);
                                                    nodo.add(id);
                                                    noco.add($$[$0]);

                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                  
break;
case 269:

                                      var nodo = new Nodo("PARFUNC","PARFUNC",+yylineno+1,+_$[$0-2].first_column+1);
                                      var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                      nodo.add(id);
                                      noco.add($$[$0]);

                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0].trad;
                                    
break;
case 270:

                  console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Parametro de funcion(id)"+yylineno+1,+_$[$0].last_column+1);
                  
                  errores.addError(error);
                  this.$ = new Nodo("","");
                  this.$.trad = "";
                
break;
case 271:
 
                                            var nodo = new Nodo("VALOR","VALFUNCION",+yylineno+1,+_$[$0-2].first_column+1);
                                            var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                            nodo.addHijo(id);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                          
break;
case 272:

                                                var nodo = new Nodo("VALOR","VALFUNCION",+yylineno+1,+_$[$0-3].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                              
break;
case 273:

                          var nodo = new Nodo("LPAR","LPAR",+yylineno+1,+_$[$0-2].first_column+1);
                          nodo.addHijo($$[$0-2]);
                          nodo.addHijo($$[$0]);
                          this.$ = nodo;
                          this.$.trad = $$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                        
break;
case 274:

              this.$ = $$[$0];
              this.$.trad = $$[$0].trad;
            
break;
case 275:

                                                              var nodo = new Nodo("CONSOLE","CONSOLE",+yylineno+1,+_$[$0-4].last_column+1);
                                                              nodo.addHijo($$[$0-2]);
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                            
break;
case 276:

                                                        console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> ("+yylineno+1,+_$[$0-3].last_column+1);
                                                        
                                                        errores.addError(error);
                                                        this.$ = new Nodo("","");
                                                        this.$.trad = "";
                                                      
break;
case 277:

                                                        console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> ("+yylineno+1,+_$[$0-1].last_column+1);
                                                        
                                                        errores.addError(error);
                                                        this.$ = new Nodo("","");
                                                        this.$.trad = "";
                                                      
break;
case 278:

                                                      console.error("Error Sintactico: "+$$[$0]+" Error console");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                      errores.addError(error);

                                                      var nodo = new Nodo("CONSOLE","CONSOLE",+yylineno+1,+_$[$0-4].last_column+1);
                                                      nodo.addHijo($$[$0-2]);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                    
break;
case 279:

                                                          var nodo = new Nodo("GRAFICAR","GRAFICAR",+yylineno+1,+_$[$0-3].last_column+1);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                                        
break;
case 280:

                                                    console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ("+yylineno+1,+_$[$0-2].last_column+1);
                                                    
                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 281:

                                                    console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )"+yylineno+1,+_$[$0-1].last_column+1);
                                                    
                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 282:
 
                                                  console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("GRAFICAR","GRAFICAR",+yylineno+1,+_$[$0-3].last_column+1);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+";\n";
                                                
break;
case 283:

                                                                  var nodo = new Nodo("PUSH","PUSH",+yylineno+1,+_$[$0-5].last_column+1);
                                                                  var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].last_column+1);
                                                                  nodo.addHijo(id);
                                                                  nodo.addHijo($$[$0-2]);
                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                
break;
case 284:
 
                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error graficar");
                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> .push",+yylineno+1,+_$[$0-4].last_column+1);
                                                                errores.addError(error);

                                                                errores.addError(error);
                                                                this.$ = new Nodo("","");
                                                                this.$.trad = "";
                                                              
break;
case 285:
 
                                                            console.error("Error Sintactico: "+$$[$0-3]+" Error graficar");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                            errores.addError(error);

                                                            errores.addError(error);
                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 286:
 
                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error graficar");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            errores.addError(error);
                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 287:
 
                                                          console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> )",+yylineno+1,+_$[$0].last_column+1);
                                                          errores.addError(error);

                                                          var nodo = new Nodo("PUSH","PUSH",+yylineno+1,+_$[$0-5].last_column+1);
                                                          var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].last_column+1);
                                                          nodo.addHijo(id);
                                                          nodo.addHijo($$[$0-2]);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                        
break;
case 288:

                                                          var nodo = new Nodo("POP","POP",+yylineno+1,+_$[$0-4].last_column+1);
                                                          var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                          nodo.addHijo(id);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                                        
break;
case 289:
 
                                                    console.error("Error Sintactico: "+$$[$0-2]+" Error graficar");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> (",+yylineno+1,+_$[$0-2].last_column+1);
                                                    errores.addError(error);

                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 290:
 
                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error graficar");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                    errores.addError(error);

                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 291:
 
                                                  console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("POP","POP",+yylineno+1,+_$[$0-4].last_column+1);
                                                  var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo(id);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+";\n";
                                                
break;
}
},
table: [{2:[1,13],3:1,4:2,5:[1,3],6:4,7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:12,15:$V0,16:$V1,22:$V2,23:16,36:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,92:$V9,95:$Va,96:$Vb},{1:[3]},{5:[1,27],6:28,7:29,8:30,9:31,10:32,11:33,12:34,13:35,14:36,15:$V0,16:$V1,22:$V2,23:16,36:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,92:$V9,95:$Va,96:$Vb},{1:[2,2]},o($Vc,[2,12]),o($Vc,[2,13]),o($Vc,[2,14]),o($Vc,[2,15]),o($Vc,[2,16]),o($Vc,[2,17]),o($Vc,[2,18]),o($Vc,[2,19]),o($Vc,[2,20]),o($Vc,[2,21]),{2:[1,38],16:[1,37]},{2:[1,40],16:[1,39]},o($Vd,[2,34]),{2:[1,43],19:$Ve,24:[1,41],25:[1,42],41:[1,45],97:[1,46],98:[1,47]},{2:[1,49],66:[1,48]},{2:[1,51],66:[1,50]},{2:[1,53],66:[1,52]},{37:$Vf,72:54},{2:[1,57],66:[1,56]},{2:[1,59],66:[1,58]},{2:[1,61],66:[1,60]},{2:[1,63],16:[1,62]},{16:[1,64]},{1:[2,1]},o($Vc,[2,3]),o($Vc,[2,4]),o($Vc,[2,5]),o($Vc,[2,6]),o($Vc,[2,7]),o($Vc,[2,8]),o($Vc,[2,9]),o($Vc,[2,10]),o($Vc,[2,11]),{2:[1,68],17:[1,65],19:[1,66],21:[1,67]},o($Vd,[2,39]),{17:[1,69],19:[1,70]},o($Vd,[2,40]),{2:[1,72],21:[1,71]},{2:[1,74],21:[1,73]},o($Vd,[2,41],{66:[1,75]}),{2:$Vg,16:$Vh,20:76,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:95,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:[1,98],66:[1,97]},{2:[1,100],66:[1,99]},{16:$Vr,48:89,49:101,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,37:$Vf,48:89,49:102,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq,72:103},{16:$Vr,48:89,49:104,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,37:$Vs,48:89,49:105,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq,79:106},{2:[1,109],16:$Vr,48:89,49:108,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,37:$Vf,48:89,49:110,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq,72:111},{84:[1,112]},{2:$Vt,6:115,7:116,8:117,9:118,10:119,11:120,12:121,13:123,14:124,15:$V0,16:$V1,22:$V2,23:16,36:$V3,39:[1,114],73:113,74:122,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb},{2:[1,130],15:[1,129],16:[1,131]},{15:[1,132],16:[1,133],37:$Vf,72:134},{2:$Vg,16:$Vh,20:135,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:$Vg,16:$Vh,20:136,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:[1,138],67:[1,137]},{67:[1,139]},{2:[1,141],66:[1,140]},{66:[1,142]},{37:[1,143]},{2:$Vx,16:$Vy,18:144,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{2:$Vg,16:$Vh,20:154,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($Vd,[2,32]),o($Vd,[2,33]),{2:$Vx,16:$Vy,18:155,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{2:$Vg,16:$Vh,20:156,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($Vd,[2,35]),o($Vd,[2,36]),o($Vd,[2,37]),o($Vd,[2,38]),{2:$Vg,16:$Vh,20:157,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:[1,159],21:[1,158]},o($VE,[2,50]),o($VE,[2,51]),o($VE,[2,52]),o($VE,[2,53]),o([2,21,42,44,45,47,50,51,52,56,57,58,59,60,61,62,63,64,65,67],$VF,{24:$VG,25:$VH,41:$VI,66:$VJ,71:$VK}),o($VE,$VL),{2:[1,166],16:[1,167],40:165},{2:$Vg,16:$Vh,20:169,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,46:168,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($VE,[2,83],{50:[1,170],51:$VM,52:$VN}),{16:$Vr,48:89,49:173,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($VO,[2,87]),o($VO,[2,88]),o($VO,[2,95],{44:[1,175],45:[1,174],56:[1,176],57:[1,177],58:[1,178],59:[1,179],60:$VP,61:$VQ,62:$VR,63:$VS,64:$VT,65:$VU}),{16:$Vr,48:186,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,34:187,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($VV,[2,104]),o($VV,[2,105]),o($VV,[2,106]),{42:[1,188],60:$VP,61:$VQ,62:$VR,63:$VS,64:$VT,65:$VU},o($VV,$VF,{41:$VI,71:$VK}),{2:$Vg,16:$Vh,20:189,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:$Vg,16:$Vh,20:190,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:[1,192],67:[1,191]},{67:[1,193]},{2:[1,195],51:$VM,52:$VN,67:[1,194]},{51:$VM,52:$VN,67:[1,196]},o($Vd,[2,137]),{2:[1,198],51:$VM,52:$VN,67:[1,197]},{51:$VM,52:$VN,67:[1,199]},o($Vd,[2,143]),{2:[1,202],39:[1,201],80:200,82:[1,203]},{2:[1,205],51:$VM,52:$VN,67:[1,204]},{67:[1,206]},{51:$VM,52:$VN,67:[1,207]},o($Vd,[2,167]),{2:[1,209],66:[1,208]},{6:211,7:212,8:213,9:214,10:215,11:216,12:217,13:219,14:220,15:$V0,16:$V1,22:$V2,23:16,36:$V3,39:[1,210],74:218,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb},o($VW,[2,111]),o($VX,[2,122]),o($VX,[2,123]),o($VX,[2,124]),o($VX,[2,125]),o($VX,[2,126]),o($VX,[2,127]),o($VX,[2,128]),o($VX,[2,129]),o($VX,[2,130]),o($VX,[2,131]),o($VX,[2,132]),{2:[1,222],21:[1,221]},{2:[1,224],21:[1,223]},{2:[1,226],7:228,16:[1,229],20:227,21:[1,225],32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:[1,231],16:[1,230]},{16:[1,232],19:[1,233],67:[1,236],87:[1,234],88:[1,235]},{2:[1,238],19:[1,237],87:[1,239],88:[1,240]},{16:[1,241]},{19:[1,242],87:[1,243],88:[1,244]},o($Vd,[2,246]),{2:[1,246],67:[1,245]},{67:[1,247]},{2:[1,249],21:[1,248]},{21:[1,250]},{21:[1,251]},{2:[1,253],16:$VY,67:[1,252],93:254},{2:$VZ,16:$VY,67:[1,256],93:257},{2:$VZ,16:$VY,67:[1,259],93:260},{2:$Vx,16:$Vy,18:262,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,38:261,43:$VD},{2:[1,265],19:[1,263],21:[1,264]},o($V_,[2,48]),o($V_,[2,49]),o($V_,$V$,{41:[1,266]}),o($V_,$V01,{41:[1,267]}),o($V_,$V11,{41:[1,268]}),o($V21,[2,45]),o($V_,$V31,{41:[1,269]}),o($V21,[2,47]),{44:[1,270]},{2:[1,272],21:[1,271]},{19:[1,273]},{2:[1,275],21:[1,274]},{67:[1,276]},o($Vd,[2,78]),o($Vd,[2,79]),o($VE,[2,54]),o($VE,[2,55]),{2:$Vg,16:$Vh,20:279,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,67:[1,277],68:$Vo,69:$Vp,70:$Vq,94:278},{16:$Vr,48:280,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{66:[1,281]},{16:[1,283],39:[1,282]},{39:[1,284]},{17:[1,285]},{2:[1,288],42:[1,286],47:[1,287]},o($V41,[2,77]),{16:$Vr,48:89,49:289,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:89,49:290,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:89,49:291,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($VO,[2,86]),{16:$Vr,48:292,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:293,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:294,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:295,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:296,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:297,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:298,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:299,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:300,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:301,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:302,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:303,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($V51,[2,102],{62:$VR,63:$VS,64:$VT,65:$VU}),{67:[1,304]},{19:$V61},{2:[1,307],67:[1,306]},{67:[1,308]},{2:[1,310],21:[1,309]},{21:[1,311]},{21:[1,312]},{37:$Vf,72:313},{37:$Vf,72:314},{37:$Vf,72:315},{37:$Vs,79:316},{37:$Vs,79:317},{37:$Vs,79:318},{39:[1,320],81:319,82:[1,321],83:[1,322]},o($Vd,[2,146]),{39:[1,323]},{2:[1,325],16:$Vr,48:89,49:324,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{37:$Vf,72:326},{37:$Vf,72:327},{37:$Vf,72:328},{37:$Vf,72:329},{2:[1,331],16:$Vr,48:89,49:330,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:89,49:332,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($VW,[2,110]),o($VX,[2,112]),o($VX,[2,113]),o($VX,[2,114]),o($VX,[2,115]),o($VX,[2,116]),o($VX,[2,117]),o($VX,[2,118]),o($VX,[2,119]),o($VX,[2,120]),o($VX,[2,121]),o($VX,[2,247]),o($VX,[2,248]),o($VX,[2,249]),o($VX,[2,250]),o($VX,[2,251]),o($VX,[2,252],{2:$VL,21:$VL}),{2:[1,334],21:[1,333]},o($VX,[2,255]),o($V71,$VF,{19:$Ve,24:$VG,25:$VH,41:[1,335],66:$VJ,71:$VK}),{2:[1,337],19:[1,336],87:[1,338],88:[1,339]},{19:[1,340],87:[1,341],88:[1,342]},{19:[1,343],87:[1,344],88:[1,345]},{2:$Vg,16:$Vh,20:346,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:[1,347]},{16:[1,348]},{37:$Vf,72:349},{2:$Vg,16:$Vh,20:350,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:$Vg,16:[1,352],20:351,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:[1,354],16:[1,353]},{2:[1,356],16:[1,355]},{19:[1,357],87:[1,358],88:[1,359]},{2:$Vg,16:$Vh,20:360,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:[1,361]},{16:[1,362]},{2:[1,364],21:[1,363]},{21:[1,365]},{21:[1,366]},o($Vd,[2,279]),o($Vd,[2,282]),o($Vd,[2,281]),o($Vd,[2,280]),{2:[1,368],17:[1,367]},o($V81,$V91,{17:[1,369]}),{2:[1,371],47:$Va1,67:[1,370]},{17:[1,373]},{17:[1,374]},{47:$Va1,67:[1,375]},o($Vb1,$V91),{17:[1,376]},{47:$Va1,67:[1,377]},{2:$Vx,16:$Vy,18:379,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,39:[1,378],43:$VD},{17:[1,380]},{2:$Vg,16:$Vh,20:381,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($Vd,[2,30]),o($Vd,[2,31]),{42:[1,382]},{42:[1,383]},{42:[1,384]},{42:[1,385]},{2:$Vx,16:[1,390],26:386,27:[1,387],28:[1,388],29:[1,389],30:$VC},o($Vd,[2,26]),o($Vd,[2,27]),{2:$Vg,16:$Vh,20:391,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($Vd,[2,28]),o($Vd,[2,29]),{21:[1,392]},o($VE,[2,271]),{47:[1,394],67:[1,393]},o($Vb1,[2,274]),{42:[1,395],60:$VP,61:$VQ,62:$VR,63:$VS,64:$VT,65:$VU},{67:[1,396]},o($VE,[2,63]),{17:[1,397]},o($VE,[2,64]),{2:$Vg,16:$Vh,20:398,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($VE,[2,74]),{2:$Vg,16:$Vh,20:399,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:$Vg,16:$Vh,20:400,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{17:[1,401],51:$VM,52:$VN},o($VO,[2,84]),o([2,17,21,42,47,50,52,67],[2,85],{51:$VM}),o($VO,[2,89],{60:$VP,61:$VQ,62:$VR,63:$VS,64:$VT,65:$VU}),o($VO,[2,90],{60:$VP,61:$VQ,62:$VR,63:$VS,64:$VT,65:$VU}),o($VO,[2,91],{60:$VP,61:$VQ,62:$VR,63:$VS,64:$VT,65:$VU}),o($VO,[2,92],{60:$VP,61:$VQ,62:$VR,63:$VS,64:$VT,65:$VU}),o($VO,[2,93],{60:$VP,61:$VQ,62:$VR,63:$VS,64:$VT,65:$VU}),o($VO,[2,94],{60:$VP,61:$VQ,62:$VR,63:$VS,64:$VT,65:$VU}),o($V51,[2,96],{62:$VR,63:$VS,64:$VT,65:$VU}),o($V51,[2,97],{62:$VR,63:$VS,64:$VT,65:$VU}),o($Vc1,[2,98],{64:$VT}),o($Vc1,[2,99],{64:$VT}),o($VV,[2,100]),o($Vc1,[2,101],{64:$VT}),o($VV,[2,103]),{2:$Vg,16:$Vh,20:402,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:[1,404],21:[1,403]},{21:[1,405]},{21:[1,406]},o($Vd,[2,288]),o($Vd,[2,291]),o($Vd,[2,290]),o($Vd,[2,289]),o($Vd,[2,134],{76:407,77:[1,408]}),o($Vd,[2,136]),o($Vd,[2,135]),o($Vd,[2,140]),o($Vd,[2,142]),o($Vd,[2,141]),{39:[1,409]},o($Vd,[2,145]),{2:[1,411],16:$Vr,48:89,49:410,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{17:[1,412]},o($Vd,[2,147]),{17:[1,413],51:$VM,52:$VN},{17:[1,414]},o($Vd,[2,163]),o($Vd,[2,166]),o($Vd,[2,165]),o($Vd,[2,164]),{2:[1,416],51:$VM,52:$VN,67:[1,415]},{67:[1,417]},{51:$VM,52:$VN,67:[1,418]},o($VX,[2,253]),o($VX,[2,254]),{16:$Vr,48:419,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:$Vg,16:$Vh,20:420,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:$Vg,16:[1,422],20:421,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:[1,424],16:[1,423]},{2:[1,426],16:[1,425]},{2:$Vg,16:$Vh,20:427,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:[1,428]},{16:[1,429]},{2:$Vg,16:$Vh,20:430,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:[1,431]},{16:[1,432]},{21:[1,433]},{67:[1,434]},{67:[1,435]},o($Vd,[2,245]),{2:[1,437],21:[1,436]},{21:[1,438]},o($Vd1,$VF,{24:$VG,25:$VH,41:$VI,66:$VJ,67:[1,439],71:$VK}),{2:[1,441],67:[1,440]},{67:[1,442]},{2:[1,444],67:[1,443]},{67:[1,445]},{2:$Vg,16:$Vh,20:446,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:[1,447]},{16:[1,448]},{21:[1,449]},{67:[1,450]},{67:[1,451]},o($Vd,[2,275]),o($Vd,[2,278]),o($Vd,[2,277]),o($Vd,[2,276]),{2:$Vx,16:$Vy,18:452,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{2:$Vx,16:$Vy,18:453,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{2:$Vx,16:$Vy,18:454,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{2:[1,456],17:[1,455]},{17:[1,457]},{16:[1,458]},{2:$Vx,16:$Vy,18:459,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{2:$Vx,16:$Vy,18:460,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{17:[1,461]},{2:$Vx,16:$Vy,18:462,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{17:[1,463]},{2:[1,465],21:[1,464]},{17:[1,466]},{16:[1,467]},{2:[1,469],21:[1,468]},o($V_,[2,69]),o($V_,[2,70]),o($V_,[2,71]),o($V_,[2,72]),{45:[1,470]},{45:$V$},{45:$V01},{45:$V11},{45:$V31},{2:[1,472],21:[1,471]},o($Vd,[2,284]),o($VE,[2,272]),{2:$Vg,16:$Vh,20:473,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},o($VV,$Ve1),o($VV,[2,108]),{2:$Vg,16:$Vh,20:474,32:77,33:78,34:79,35:80,37:$Vi,41:$Vj,48:89,49:85,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:[1,476],21:[1,475]},o($V41,[2,75]),o($V41,[2,76]),{16:$Vr,48:89,49:477,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{2:[1,479],21:[1,478]},o($Vd,[2,283]),o($Vd,[2,287]),o($Vd,[2,286]),o($Vd,[2,285]),o($Vd,[2,133]),{8:481,37:$Vf,72:480,75:$V4},o($Vd,[2,144]),{17:[1,482],51:$VM,52:$VN},{17:[1,483]},{2:$Vt,6:115,7:116,8:117,9:118,10:119,11:120,12:121,13:123,14:124,15:$V0,16:$V1,22:$V2,23:16,36:$V3,37:$Vf,39:[2,162],72:485,73:484,74:122,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb},o($Vf1,[2,158],{23:16,6:115,7:116,8:117,9:118,10:119,11:120,12:121,74:122,13:123,14:124,73:486,72:487,2:$Vt,15:$V0,16:$V1,22:$V2,36:$V3,37:$Vf,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,159],{23:16,6:115,7:116,8:117,9:118,10:119,11:120,12:121,74:122,13:123,14:124,73:488,72:489,2:$Vt,15:$V0,16:$V1,22:$V2,36:$V3,37:$Vf,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb}),{2:[1,491],21:[1,490]},{21:[1,492]},{21:[1,493]},{21:[1,494]},{42:[1,495],60:$VP,61:$VQ,62:$VR,63:$VS,64:$VT,65:$VU},{2:[1,497],21:[1,496]},{21:[1,498]},o($Vd1,$VF,{24:$VG,25:$VH,41:$VI,66:$VJ,67:[1,499],71:$VK}),{2:[1,501],67:[1,500]},{67:[1,502]},{2:[1,504],67:[1,503]},{67:[1,505]},{21:[1,506]},{67:[1,507]},{67:[1,508]},{21:[1,509]},{67:[1,510]},{67:[1,511]},{16:$Vr,48:89,49:512,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{37:$Vf,72:513},{37:$Vf,72:514},{2:[1,516],16:$Vr,48:89,49:515,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:89,49:517,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:89,49:518,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{37:$Vf,72:519},{2:[1,521],37:$Vf,72:520},{37:$Vf,72:522},{37:$Vf,72:523},{2:[1,525],37:$Vf,72:524},{37:$Vf,72:526},{37:$Vf,72:527},{21:[1,528]},{67:[1,529]},{67:[1,530]},{16:$Vr,48:89,49:531,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{37:$Vf,72:532},{37:$Vf,72:533},{2:[1,535],37:$Vf,72:534},{37:$Vf,72:536},{37:$Vf,72:537},{2:$Vx,16:$Vy,18:538,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{2:$Vx,16:$Vy,18:539,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{2:$Vx,16:$Vy,18:540,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{17:[1,541]},o($V81,[2,269]),{37:$Vf,72:542},{2:$Vx,16:$Vy,18:543,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},{37:$Vf,72:544},{2:$Vx,16:$Vy,18:545,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},o($Vd,[2,57]),o($Vd,[2,58]),{16:[1,546]},{2:[1,548],21:[1,547]},o($Vd,[2,22]),o($Vd,[2,23]),o($V_,[2,73]),o($Vd,[2,24]),o($Vd,[2,25]),o($Vb1,[2,273]),{2:[1,550],21:[1,549]},o($Vg1,[2,67]),o($Vg1,[2,68]),o($VE,[2,82],{51:$VM,52:$VN}),o($Vd,[2,80]),o($Vd,[2,81]),o($Vd,[2,138]),o($Vd,[2,139]),o($Vf1,[2,152],{23:16,6:115,7:116,8:117,9:118,10:119,11:120,12:121,74:122,13:123,14:124,73:551,72:552,2:$Vt,15:$V0,16:$V1,22:$V2,36:$V3,37:$Vf,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,153],{23:16,6:115,7:116,8:117,9:118,10:119,11:120,12:121,74:122,13:123,14:124,73:553,72:554,2:$Vt,15:$V0,16:$V1,22:$V2,36:$V3,37:$Vf,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb}),{6:211,7:212,8:213,9:214,10:215,11:216,12:217,13:219,14:220,15:$V0,16:$V1,22:$V2,23:16,36:$V3,39:[2,160],74:218,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb},{39:[2,161]},o($Vf1,[2,154],{23:16,6:211,7:212,8:213,9:214,10:215,11:216,12:217,74:218,13:219,14:220,15:$V0,16:$V1,22:$V2,36:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,156]),o($Vf1,[2,155],{23:16,6:211,7:212,8:213,9:214,10:215,11:216,12:217,74:218,13:219,14:220,15:$V0,16:$V1,22:$V2,36:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,157]),o($Vd,[2,168]),o($Vd,[2,172]),o($Vd,[2,171]),o($Vd,[2,170]),o($Vd,[2,169]),o($V71,$Ve1,{19:$V61}),{2:[1,556],16:$Vr,48:89,49:555,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:89,49:557,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{16:$Vr,48:89,49:558,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{37:$Vf,72:559},{2:[1,561],37:$Vf,72:560},{37:$Vf,72:562},{37:$Vf,72:563},{2:[1,565],37:$Vf,72:564},{37:$Vf,72:566},{37:$Vf,72:567},{16:$Vr,48:89,49:568,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{37:$Vf,72:569},{37:$Vf,72:570},{16:$Vr,48:89,49:571,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{37:$Vf,72:572},{37:$Vf,72:573},{21:[1,574],51:$VM,52:$VN},o($Vd,[2,219]),o($Vd,[2,233]),{2:[1,576],21:[1,575],51:$VM,52:$VN},{21:[1,577]},{21:[1,578],51:$VM,52:$VN},{21:[1,579],51:$VM,52:$VN},o($Vd,[2,234]),o($Vd,[2,217]),o($Vd,[2,222]),o($Vd,[2,221]),o($Vd,[2,220]),o($Vd,[2,231]),o($Vd,[2,237]),o($Vd,[2,236]),o($Vd,[2,235]),{16:$Vr,48:89,49:580,53:$Vk,54:$Vl,55:88,61:$Vm,66:$Vn,68:$Vo,69:$Vp,70:$Vq},{37:$Vf,72:581},{37:$Vf,72:582},{21:[1,583],51:$VM,52:$VN},o($Vd,[2,218]),o($Vd,[2,232]),o($Vd,[2,256]),o($Vd,[2,261]),o($Vd,[2,260]),o($Vd,[2,259]),{2:[1,585],37:$Vf,72:584},{37:$Vf,72:586},{37:$Vf,72:587},{2:$Vx,16:$Vy,18:588,26:145,27:$Vz,28:$VA,29:$VB,30:$VC,31:146,43:$VD},o($Vd,[2,258]),{37:$Vf,72:589},o($Vd,[2,257]),{37:$Vf,72:590},{2:[1,592],21:[1,591]},o($Vh1,[2,61]),o($Vh1,[2,62]),o($Vg1,[2,65]),o($Vg1,[2,66]),o($Vf1,[2,148],{23:16,6:211,7:212,8:213,9:214,10:215,11:216,12:217,74:218,13:219,14:220,15:$V0,16:$V1,22:$V2,36:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,150]),o($Vf1,[2,149],{23:16,6:211,7:212,8:213,9:214,10:215,11:216,12:217,74:218,13:219,14:220,15:$V0,16:$V1,22:$V2,36:$V3,75:$V4,78:$V5,84:$V6,85:$V7,86:$V8,89:$Vu,90:$Vv,91:$Vw,92:$V9,95:$Va,96:$Vb}),o($Vf1,[2,151]),{2:[1,594],21:[1,593],51:$VM,52:$VN},{21:[1,595]},{21:[1,596],51:$VM,52:$VN},{21:[1,597],51:$VM,52:$VN},o($Vd,[2,227]),o($Vd,[2,223]),o($Vd,[2,230]),o($Vd,[2,229]),o($Vd,[2,228]),o($Vd,[2,238]),o($Vd,[2,244]),o($Vd,[2,243]),o($Vd,[2,242]),{21:[1,598],51:$VM,52:$VN},o($Vd,[2,226]),o($Vd,[2,241]),{21:[1,599],51:$VM,52:$VN},o($Vd,[2,225]),o($Vd,[2,240]),{16:[1,600]},{2:[1,602],16:[1,601]},{16:[1,603]},{16:[1,604]},{16:[1,605]},{16:[1,606]},{21:[1,607],51:$VM,52:$VN},o($Vd,[2,224]),o($Vd,[2,239]),{16:[1,608]},o($Vd,[2,262]),o($Vd,[2,267]),o($Vd,[2,266]),o($Vd,[2,265]),o($V81,[2,268]),o($Vd,[2,264]),o($Vd,[2,263]),o($Vh1,[2,59]),o($Vh1,[2,60]),{2:[1,610],16:[1,609]},{16:[1,611]},{16:[1,612]},{16:[1,613]},{16:[1,614]},{16:[1,615]},{16:[1,616]},{24:[1,617],25:[1,618]},{2:[1,620],24:[1,619],25:[1,621]},{24:[1,622],25:[1,623]},{24:[1,624],25:[1,625]},{24:[1,626],25:[1,627]},{24:[1,628],25:[1,629]},{24:[1,630],25:[1,631]},{16:[1,632]},{24:[1,633],25:[1,634]},{2:[1,636],24:[1,635],25:[1,637]},{24:[1,638],25:[1,639]},{24:[1,640],25:[1,641]},{24:[1,642],25:[1,643]},{24:[1,644],25:[1,645]},{24:[1,646],25:[1,647]},{24:[1,648],25:[1,649]},{24:[1,650],25:[1,651]},{67:[1,652]},{67:[1,653]},{2:[1,655],67:[1,654]},{67:[1,656]},{2:[1,658],67:[1,657]},{67:[1,659]},{67:[1,660]},{67:[1,661]},{67:[1,662]},{67:[1,663]},{67:[1,664]},{67:[1,665]},{67:[1,666]},{67:[1,667]},{67:[1,668]},{24:[1,669],25:[1,670]},{67:[1,671]},{67:[1,672]},{2:[1,674],67:[1,673]},{67:[1,675]},{2:[1,677],67:[1,676]},{67:[1,678]},{67:[1,679]},{67:[1,680]},{67:[1,681]},{67:[1,682]},{67:[1,683]},{67:[1,684]},{67:[1,685]},{67:[1,686]},{67:[1,687]},{67:[1,688]},{67:[1,689]},{67:[1,690]},{67:[1,691]},{37:$Vf,72:692},{37:$Vf,72:693},{2:[1,695],37:$Vf,72:694},{37:$Vf,72:696},{37:$Vf,72:697},{2:[1,699],37:$Vf,72:698},{37:$Vf,72:700},{37:$Vf,72:701},{37:$Vf,72:702},{37:$Vf,72:703},{37:$Vf,72:704},{37:$Vf,72:705},{37:$Vf,72:706},{37:$Vf,72:707},{37:$Vf,72:708},{37:$Vf,72:709},{37:$Vf,72:710},{67:[1,711]},{67:[1,712]},{37:$Vf,72:713},{37:$Vf,72:714},{2:[1,716],37:$Vf,72:715},{37:$Vf,72:717},{37:$Vf,72:718},{2:[1,720],37:$Vf,72:719},{37:$Vf,72:721},{37:$Vf,72:722},{37:$Vf,72:723},{37:$Vf,72:724},{37:$Vf,72:725},{37:$Vf,72:726},{37:$Vf,72:727},{37:$Vf,72:728},{37:$Vf,72:729},{37:$Vf,72:730},{37:$Vf,72:731},{37:$Vf,72:732},{37:$Vf,72:733},{37:$Vf,72:734},{37:$Vf,72:735},o($Vd,[2,198]),o($Vd,[2,209]),o($Vd,[2,196]),o($Vd,[2,206]),o($Vd,[2,205]),o($Vd,[2,204]),o($Vd,[2,207]),o($Vd,[2,216]),o($Vd,[2,215]),o($Vd,[2,203]),o($Vd,[2,214]),o($Vd,[2,202]),o($Vd,[2,213]),o($Vd,[2,201]),o($Vd,[2,212]),o($Vd,[2,200]),o($Vd,[2,211]),o($Vd,[2,199]),o($Vd,[2,210]),{37:$Vf,72:736},{37:$Vf,72:737},o($Vd,[2,197]),o($Vd,[2,208]),o($Vd,[2,173]),o($Vd,[2,184]),o($Vd,[2,183]),o($Vd,[2,182]),o($Vd,[2,185]),o($Vd,[2,195]),o($Vd,[2,194]),o($Vd,[2,181]),o($Vd,[2,193]),o($Vd,[2,180]),o($Vd,[2,192]),o($Vd,[2,179]),o($Vd,[2,191]),o($Vd,[2,178]),o($Vd,[2,190]),o($Vd,[2,177]),o($Vd,[2,189]),o($Vd,[2,176]),o($Vd,[2,188]),o($Vd,[2,175]),o($Vd,[2,187]),o($Vd,[2,174]),o($Vd,[2,186])],
defaultActions: {3:[2,2],27:[2,1],387:[2,42],388:[2,43],389:[2,44],390:[2,46],485:[2,161]},
parseError: function parseError (str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        var error = new Error(str);
        error.hash = hash;
        throw error;
    }
},
parse: function parse (input) {
    var self = this,
        stack = [0],
        tstack = [], // token stack
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    var args = lstack.slice.call(arguments, 1);

    //this.reductionCount = this.shiftCount = 0;

    var lexer = Object.create(this.lexer);
    var sharedState = { yy: {} };
    // copy state
    for (var k in this.yy) {
      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
        sharedState.yy[k] = this.yy[k];
      }
    }

    lexer.setInput(input, sharedState.yy);
    sharedState.yy.lexer = lexer;
    sharedState.yy.parser = this;
    if (typeof lexer.yylloc == 'undefined') {
        lexer.yylloc = {};
    }
    var yyloc = lexer.yylloc;
    lstack.push(yyloc);

    var ranges = lexer.options && lexer.options.ranges;

    if (typeof sharedState.yy.parseError === 'function') {
        this.parseError = sharedState.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }

    function popStack (n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

_token_stack:
    var lex = function () {
        var token;
        token = lexer.lex() || EOF;
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }

    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length - 1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

_handle_error:
        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {
            var error_rule_depth;
            var errStr = '';

            // Return the rule stack depth where the nearest error rule can be found.
            // Return FALSE when no error recovery rule was found.
            function locateNearestErrorRecoveryRule(state) {
                var stack_probe = stack.length - 1;
                var depth = 0;

                // try to recover from error
                for(;;) {
                    // check for error recovery rule in this state
                    if ((TERROR.toString()) in table[state]) {
                        return depth;
                    }
                    if (state === 0 || stack_probe < 2) {
                        return false; // No suitable error recovery rule available.
                    }
                    stack_probe -= 2; // popStack(1): [symbol, action]
                    state = stack[stack_probe];
                    ++depth;
                }
            }

            if (!recovering) {
                // first see if there's any chance at hitting an error recovery rule:
                error_rule_depth = locateNearestErrorRecoveryRule(state);

                // Report error
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push("'"+this.terminals_[p]+"'");
                    }
                }
                if (lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(', ') + ", got '" + (this.terminals_[symbol] || symbol)+ "'";
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == EOF ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr, {
                    text: lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: lexer.yylineno,
                    loc: yyloc,
                    expected: expected,
                    recoverable: (error_rule_depth !== false)
                });
            } else if (preErrorSymbol !== EOF) {
                error_rule_depth = locateNearestErrorRecoveryRule(state);
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol === EOF || preErrorSymbol === EOF) {
                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');
                }

                // discard current lookahead and grab another
                yyleng = lexer.yyleng;
                yytext = lexer.yytext;
                yylineno = lexer.yylineno;
                yyloc = lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            if (error_rule_depth === false) {
                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');
            }
            popStack(error_rule_depth);

            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {
            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(lexer.yytext);
                lstack.push(lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = lexer.yyleng;
                    yytext = lexer.yytext;
                    yylineno = lexer.yylineno;
                    yyloc = lexer.yylloc;
                    if (recovering > 0) {
                        recovering--;
                    }
                } else {
                    // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2:
                // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                if (ranges) {
                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];
                }
                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3:
                // accept
                return true;
        }

    }

    return true;
}};

  let valcadena = ""; 
  let resultado = "";
  let errores = new ListaErrores();
  var ids = new Array();
  var funcs = new Array();
  var trads = new Array();
/* generated by jison-lex 0.3.4 */
var lexer = (function(){
var lexer = ({

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input, yy) {
        this.yy = yy || this.yy || {};
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function(match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex () {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin (condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState () {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules () {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState (n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState (condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0: this.begin("comentarios"); 
break;
case 1: this.popState(); 
break;
case 2: 
break;
case 3: this.popState(); return 5; 
break;
case 4: this.begin("comentariomulti"); 
break;
case 5: this.popState(); 
break;
case 6:  
break;
case 7:  
break;
case 8: this.begin("tstring"); 
break;
case 9: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 68;
                                
break;
case 10: valcadena +='\n'; 
break;
case 11: valcadena +='\t'; 
break;
case 12: valcadena +='\\'; 
break;
case 13: valcadena +='\r'; 
break;
case 14: valcadena +='\"'; 
break;
case 15: valcadena += yy_.yytext; 
break;
case 16: this.begin("tstring2"); 
break;
case 17: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 68;
                                
break;
case 18: valcadena +='\n'; 
break;
case 19: valcadena +='\t'; 
break;
case 20: valcadena +='\\'; 
break;
case 21: valcadena +='\r'; 
break;
case 22: valcadena +='\"'; 
break;
case 23: valcadena += yy_.yytext; 
break;
case 24: this.begin("ttstring"); 
break;
case 25: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 68;
                                
break;
case 26: valcadena +='\n'; 
break;
case 27: valcadena +='\t'; 
break;
case 28: valcadena +='\\'; 
break;
case 29: valcadena +='\r'; 
break;
case 30: valcadena +='\"'; 
break;
case 31: valcadena += yy_.yytext; 
break;
case 32: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_comilladoble'; 
break;
case 33: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_barrainvertida'; 
break;
case 34: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_salto'; 
break;
case 35: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_retorno'; 
break;
case 36: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_tab'; 
break;
case 37: console.log("tipo de dato:"+yy_.yytext);  return 27; 
break;
case 38: console.log("tipo de dato:"+yy_.yytext);  return 28; 
break;
case 39: console.log("tipo de dato:"+yy_.yytext);  return 29; 
break;
case 40: console.log("tipo de dato:"+yy_.yytext);  return 30; 
break;
case 41: console.log("tipo de dato:"+yy_.yytext);  return 36; 
break;
case 42: console.log("inicio array:"+yy_.yytext);  return 43; 
break;
case 43: console.log("declaracion:"+yy_.yytext);  return 15; 
break;
case 44: console.log("declaracion:"+yy_.yytext);  return 22; 
break;
case 45: console.log("boolean:"+yy_.yytext);  return 54; 
break;
case 46: console.log("boolean:"+yy_.yytext);  return 54; 
break;
case 47: console.log("sentencias:"+yy_.yytext);  return 75; 
break;
case 48: console.log("sentencias:"+yy_.yytext);  return 77; 
break;
case 49: console.log("sentencias:"+yy_.yytext);  return 78; 
break;
case 50: console.log("sentencias:"+yy_.yytext);  return 82; 
break;
case 51: console.log("sentencias:"+yy_.yytext);  return 83; 
break;
case 52: console.log("sentencias:"+yy_.yytext);  return 84; 
break;
case 53: console.log("sentencias:"+yy_.yytext);  return 85; 
break;
case 54: console.log("sentencias:"+yy_.yytext);  return 86; 
break;
case 55: console.log("sentencias:"+yy_.yytext);  return 87; 
break;
case 56: console.log("sentencias:"+yy_.yytext);  return 88; 
break;
case 57: console.log("transferencia:"+yy_.yytext);  return 89; 
break;
case 58: console.log("transferencia:"+yy_.yytext);  return 90; 
break;
case 59: console.log("transferencia:"+yy_.yytext);  return 91; 
break;
case 60: console.log("funcion:"+yy_.yytext);  return 92; 
break;
case 61: console.log("funcion:"+yy_.yytext);  return 95; 
break;
case 62: console.log("funcion:"+yy_.yytext);  return 96; 
break;
case 63: console.log("funcion:"+yy_.yytext);  return 71; 
break;
case 64: console.log("funcion:"+yy_.yytext);  return 97; 
break;
case 65: console.log("funcion:"+yy_.yytext);  return 98; 
break;
case 66: console.log("arimetica:"+yy_.yytext); return 64; 
break;
case 67: console.log("arimetica:"+yy_.yytext); return 24; 
break;
case 68: console.log("arimetica:"+yy_.yytext); return 25; 
break;
case 69: console.log("arimetica:"+yy_.yytext); return 60; 
break;
case 70: console.log("arimetica:"+yy_.yytext); return 61; 
break;
case 71: console.log("arimetica:"+yy_.yytext); return 62; 
break;
case 72: console.log("arimetica:"+yy_.yytext); return 63; 
break;
case 73: console.log("arimetica:"+yy_.yytext); return 65; 
break;
case 74: console.log("relacional:"+yy_.yytext); return 56; 
break;
case 75: console.log("relacional:"+yy_.yytext); return 57; 
break;
case 76: console.log("relacional:"+yy_.yytext); return 58; 
break;
case 77: console.log("relacional:"+yy_.yytext); return 59; 
break;
case 78: console.log("relacional:"+yy_.yytext); return 45; 
break;
case 79: console.log("relacional:"+yy_.yytext); return 44; 
break;
case 80: console.log("Logica:"+yy_.yytext); return 51; 
break;
case 81: console.log("Logica:"+yy_.yytext); return 52; 
break;
case 82: console.log("Logica:"+yy_.yytext); return 53; 
break;
case 83: console.log("ternario:"+yy_.yytext); return 50; 
break;
case 84: console.log("simbolo:"+yy_.yytext); return 41; 
break;
case 85: console.log("simbolo:"+yy_.yytext); return 42; 
break;
case 86: console.log("simbolo:"+yy_.yytext); return 17; 
break;
case 87: console.log("simbolo:"+yy_.yytext); return 19; 
break;
case 88: console.log("simbolo:"+yy_.yytext); return 21; 
break;
case 89: console.log("simbolo:"+yy_.yytext); return 37; 
break;
case 90: console.log("simbolo:"+yy_.yytext); return 39; 
break;
case 91: console.log("simbolo:"+yy_.yytext); return 47; 
break;
case 92: console.log("simbolo:"+yy_.yytext); return 66; 
break;
case 93: console.log("simbolo:"+yy_.yytext); return 67; 
break;
case 94: console.log("numero decimal:"+yy_.yytext);  return 70; 
break;
case 95: console.log("numero entero:"+yy_.yytext);  return 69; 
break;
case 96:  console.log("id:"+yy_.yytext); return 16; 
break;
case 97: /*se ignoran*/ 
break;
case 98:  return 5;  
break;
case 99:  
                                    console.error("Error Lexico:"+yy_.yytext); 
                                    var error = new Error("Lexico",yy_.yytext,+yy_.yylineno+1,yy_.yylloc.last_column)
                                    errores.addError(error);
                                
break;
}
},
rules: [/^(?:\/\/)/,/^(?:[\n])/,/^(?:[^\n])/,/^(?:$)/,/^(?:\/\*)/,/^(?:\*\/)/,/^(?:.)/,/^(?:[ \t\r\n\f])/,/^(?:["])/,/^(?:["])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:['])/,/^(?:['])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:[`])/,/^(?:[`])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:\\")/,/^(?:\\\\)/,/^(?:\\n)/,/^(?:\\r)/,/^(?:\\t)/,/^(?:string\b)/,/^(?:number\b)/,/^(?:boolean\b)/,/^(?:void\b)/,/^(?:type\b)/,/^(?:Array\b)/,/^(?:let\b)/,/^(?:const\b)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:if\b)/,/^(?:else\b)/,/^(?:switch\b)/,/^(?:case\b)/,/^(?:default\b)/,/^(?:while\b)/,/^(?:do\b)/,/^(?:for\b)/,/^(?:in\b)/,/^(?:of\b)/,/^(?:break\b)/,/^(?:continue\b)/,/^(?:return\b)/,/^(?:function\b)/,/^(?:console\.log\b)/,/^(?:graficar_ts\b)/,/^(?:\.Lenght\b)/,/^(?:\.Push\b)/,/^(?:\.Pop\b)/,/^(?:\*\*)/,/^(?:\+\+)/,/^(?:--)/,/^(?:\+)/,/^(?:-)/,/^(?:\*)/,/^(?:\/)/,/^(?:%)/,/^(?:>=)/,/^(?:<=)/,/^(?:==)/,/^(?:!=)/,/^(?:>)/,/^(?:<)/,/^(?:&&)/,/^(?:\|\|)/,/^(?:!)/,/^(?:\?)/,/^(?:\[)/,/^(?:\])/,/^(?::)/,/^(?:=)/,/^(?:;)/,/^(?:\{)/,/^(?:\})/,/^(?:,)/,/^(?:\()/,/^(?:\))/,/^(?:[0-9]+\.[0-9]+)/,/^(?:[0-9]+)/,/^(?:[[a-zA-ZñÑáéíóúÁÉÍÓÚ]["_"0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]*|["_"]+[0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]["_"0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]*)/,/^(?:[ \t\n\r\f])/,/^(?:$)/,/^(?:.)/],
conditions: {"ttstring":{"rules":[25,26,27,28,29,30,31],"inclusive":false},"tstring2":{"rules":[17,18,19,20,21,22,23],"inclusive":false},"tstring":{"rules":[9,10,11,12,13,14,15],"inclusive":false},"comentariomulti":{"rules":[5,6,7],"inclusive":false},"comentarios":{"rules":[1,2,3],"inclusive":false},"INITIAL":{"rules":[0,4,8,16,24,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"inclusive":true}}
});
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = analizador;
exports.Parser = analizador.Parser;
exports.parse = function () { return analizador.parse.apply(analizador, arguments); };
exports.main = function commonjsMain (args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}