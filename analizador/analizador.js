/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var analizador = (function(){
var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,14],$V1=[1,17],$V2=[1,15],$V3=[1,26],$V4=[1,18],$V5=[1,19],$V6=[1,20],$V7=[1,21],$V8=[1,22],$V9=[1,25],$Va=[1,23],$Vb=[1,24],$Vc=[5,15,16,22,36,74,77,83,84,85,91,94,95],$Vd=[5,15,16,22,36,39,74,77,81,82,83,84,85,88,89,90,91,94,95],$Ve=[1,44],$Vf=[1,55],$Vg=[1,83],$Vh=[1,82],$Vi=[1,84],$Vj=[1,85],$Vk=[1,87],$Vl=[1,88],$Vm=[1,91],$Vn=[1,92],$Vo=[1,93],$Vp=[1,94],$Vq=[1,95],$Vr=[1,97],$Vs=[1,108],$Vt=[1,126],$Vu=[1,127],$Vv=[1,128],$Vw=[1,129],$Vx=[1,157],$Vy=[1,156],$Vz=[1,152],$VA=[1,153],$VB=[1,154],$VC=[1,155],$VD=[1,158],$VE=[2,21,39,40,42,66],$VF=[2,107],$VG=[1,165],$VH=[1,166],$VI=[1,168],$VJ=[1,167],$VK=[1,169],$VL=[2,56],$VM=[1,172],$VN=[1,176],$VO=[1,177],$VP=[2,17,21,39,40,42,49,50,51,66],$VQ=[1,185],$VR=[1,186],$VS=[1,187],$VT=[1,188],$VU=[1,189],$VV=[1,190],$VW=[2,17,21,39,40,42,44,45,49,50,51,55,56,57,58,59,60,61,62,63,64,66],$VX=[5,15,16,22,36,39,74,76,77,81,82,83,84,85,88,89,90,91,94,95],$VY=[15,16,22,36,39,74,77,81,82,83,84,85,88,89,90,91,94,95],$VZ=[1,263],$V_=[1,266],$V$=[2,19,21,37,40,66],$V01=[2,42],$V11=[2,43],$V21=[2,44],$V31=[2,19,21,37,40,45,66],$V41=[2,46],$V51=[1,293],$V61=[2,40,42],$V71=[2,17,21,39,40,42,44,45,49,50,51,55,56,57,58,59,60,66],$V81=[1,315],$V91=[2,21,44,45,49,50,51,55,56,57,58,59,60,61,62,63,64],$Va1=[2,40,66],$Vb1=[2,281],$Vc1=[1,389],$Vd1=[40,66],$Ve1=[2,17,21,39,40,42,44,45,49,50,51,55,56,57,58,59,60,61,62,64,66],$Vf1=[21,44,45,49,50,51,55,56,57,58,59,60,61,62,63,64],$Vg1=[2,105],$Vh1=[2,39,40],$Vi1=[39,81,82];
var parser = {trace: function trace () { },
yy: {},
symbols_: {"error":2,"S":3,"I":4,"EOF":5,"DECLARACION":6,"ASIGNACION":7,"IF":8,"SWITCH":9,"WHILE":10,"DOWHILE":11,"FOR":12,"FESP":13,"FUNCION":14,"tk_let":15,"tk_id":16,"tk_dospuntos":17,"TIPOV2":18,"tk_igual":19,"VALOR":20,"tk_puntoycoma":21,"tk_const":22,"TYPES":23,"tk_inc":24,"tk_dec":25,"TIPOV":26,"tk_string":27,"tk_number":28,"tk_boolean":29,"tk_void":30,"ARRAY":31,"ASIGTYPE":32,"VARRAY":33,"T":34,"VALFUNCION":35,"tk_type":36,"tk_llavea":37,"LTYPE":38,"tk_llavec":39,"tk_coma":40,"tk_llaveca":41,"tk_llavecc":42,"tk_array":43,"tk_menor":44,"tk_mayor":45,"LVALARRAY":46,"A":47,"L":48,"tk_ternario":49,"tk_and":50,"tk_or":51,"tk_not":52,"tk_t_boolean":53,"R":54,"tk_mayorigual":55,"tk_menorigual":56,"tk_igualdad":57,"tk_diferente":58,"tk_suma":59,"tk_resta":60,"tk_mult":61,"tk_div":62,"tk_exp":63,"tk_mod":64,"tk_pabierto":65,"tk_pcerrado":66,"tk_t_string":67,"tk_t_entero":68,"tk_t_decimal":69,"tk_lenght":70,"BSENTENCIAS":71,"SENTENCIAS":72,"ST":73,"tk_if":74,"ELSE":75,"tk_else":76,"tk_switch":77,"BSWITCH":78,"CASE":79,"DEFAULT":80,"tk_case":81,"tk_default":82,"tk_while":83,"tk_do":84,"tk_for":85,"tk_in":86,"tk_of":87,"tk_break":88,"tk_continue":89,"tk_return":90,"tk_fn":91,"PARFUNC":92,"LPAR":93,"tk_console":94,"tk_graficar":95,"tk_push":96,"tk_pop":97,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",15:"tk_let",16:"tk_id",17:"tk_dospuntos",19:"tk_igual",21:"tk_puntoycoma",22:"tk_const",24:"tk_inc",25:"tk_dec",27:"tk_string",28:"tk_number",29:"tk_boolean",30:"tk_void",36:"tk_type",37:"tk_llavea",39:"tk_llavec",40:"tk_coma",41:"tk_llaveca",42:"tk_llavecc",43:"tk_array",44:"tk_menor",45:"tk_mayor",49:"tk_ternario",50:"tk_and",51:"tk_or",52:"tk_not",53:"tk_t_boolean",55:"tk_mayorigual",56:"tk_menorigual",57:"tk_igualdad",58:"tk_diferente",59:"tk_suma",60:"tk_resta",61:"tk_mult",62:"tk_div",63:"tk_exp",64:"tk_mod",65:"tk_pabierto",66:"tk_pcerrado",67:"tk_t_string",68:"tk_t_entero",69:"tk_t_decimal",70:"tk_lenght",74:"tk_if",76:"tk_else",77:"tk_switch",81:"tk_case",82:"tk_default",83:"tk_while",84:"tk_do",85:"tk_for",86:"tk_in",87:"tk_of",88:"tk_break",89:"tk_continue",90:"tk_return",91:"tk_fn",94:"tk_console",95:"tk_graficar",96:"tk_push",97:"tk_pop"},
productions_: [0,[3,2],[3,1],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[6,7],[6,7],[6,7],[6,7],[6,5],[6,5],[6,5],[6,5],[6,5],[6,5],[6,3],[6,3],[6,1],[6,3],[6,3],[6,3],[6,3],[6,2],[6,2],[6,2],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[18,1],[18,1],[20,1],[20,1],[20,1],[20,1],[20,2],[20,2],[20,1],[23,6],[23,6],[23,6],[23,6],[23,6],[23,6],[38,5],[38,3],[32,3],[32,3],[31,3],[31,3],[31,3],[31,3],[31,4],[33,3],[46,3],[46,3],[46,1],[7,4],[7,4],[7,7],[7,7],[34,5],[34,1],[48,3],[48,3],[48,2],[48,1],[48,1],[54,3],[54,3],[54,3],[54,3],[54,3],[54,3],[54,1],[47,3],[47,3],[47,3],[47,3],[47,3],[47,3],[47,2],[47,3],[47,1],[47,1],[47,1],[47,4],[47,4],[47,1],[71,3],[71,2],[72,2],[72,2],[72,2],[72,2],[72,2],[72,2],[72,2],[72,2],[72,2],[72,2],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[72,1],[8,6],[8,5],[8,5],[8,5],[8,3],[75,2],[75,2],[9,5],[9,5],[9,5],[9,3],[78,4],[78,3],[78,2],[78,3],[79,5],[79,5],[79,5],[79,5],[79,4],[79,4],[79,4],[79,4],[79,4],[79,4],[79,3],[79,3],[80,3],[80,3],[80,2],[10,5],[10,5],[10,5],[10,5],[10,3],[11,7],[11,7],[11,7],[11,7],[11,7],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,13],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,12],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,8],[12,5],[12,3],[73,2],[73,2],[73,2],[73,2],[73,2],[73,2],[73,3],[73,3],[73,2],[14,7],[14,7],[14,7],[14,7],[14,7],[14,7],[14,8],[14,8],[14,8],[14,8],[14,8],[14,8],[92,5],[92,3],[92,1],[35,3],[35,4],[93,3],[93,1],[13,5],[13,5],[13,5],[13,5],[13,4],[13,4],[13,4],[13,4],[13,6],[13,6],[13,6],[13,6],[13,6],[13,5],[13,5],[13,5],[13,5]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:

          var nodo = new Nodo("S","S",+yylineno+1,+_$[$0-1].first_column+1)
          nodo.addHijo($$[$0-1])
          var texto = ""
          if($$[$0-1].trad){
            texto = $$[$0-1].trad;
          }
          var trad = new Traduccion(nodo,texto,errores.getLista()); 
          errores.limpiar();
          return trad;
        
break;
case 2:

        var trad = new Traduccion(new Nodo("S","S",+yylineno+1,+_$[$0].first_column+1),"",errores.getLista()); 
        errores.limpiar();
        return trad;
      
break;
case 3: case 4:

                  var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
                  nodo.addHijo($$[$0-1]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-1].trad + $$[$0].trad;
                
break;
case 5: case 9:

          var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
          nodo.addHijo($$[$0-1]);
          nodo.addHijo($$[$0]);
          this.$ = nodo;
          this.$.trad = $$[$0-1].trad + $$[$0].trad;
        
break;
case 6: case 8: case 11:

              var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
              nodo.addHijo($$[$0-1]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-1].trad + $$[$0].trad;
            
break;
case 7: case 10:

            var nodo = new Nodo("I","I",+yylineno+1,+_$[$0-1].first_column+1);
            nodo.addHijo($$[$0-1]);
            nodo.addHijo($$[$0]);
            this.$ = nodo;
            this.$.trad = $$[$0-1].trad + $$[$0].trad;
          
break;
case 12: case 13: case 14: case 15: case 16: case 17: case 18: case 19: case 120: case 121: case 122: case 123: case 124: case 125: case 126: case 127: case 128:
 this.$ = $$[$0]; this.$.trad = $$[$0].trad; 
break;
case 20:

              this.$ = $$[$0];
              this.$.trad = $$[$0].trad; 
            
break;
case 21:

          console.error("Error sintactico: "+$$[$0]+" Desconocido Inicio");
          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> DECLARACION || ASIGNACION || IF || SWITCH || WHILE || DOWHILE || FOR || console.log || graficar_ts",+yylineno+1,+_$[$0].last_column+1)
          errores.addError(error);
          this.$ = new Nodo("","")
          this.$.trad = "";
        
break;
case 22:
 
                                                                            var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-6].first_column+1);
                                                                            var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                            nodo.addHijo(id);
                                                                            nodo.addHijo($$[$0-3]); //tipo
                                                                            nodo.addHijo($$[$0-1]); //valor
                                                                            this.$ = nodo;
                                                                            this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                          
break;
case 23:

                                                                    console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                                    var error = new Error("Sintactico","Encontrado: \""+$$[$0]+"\" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1)
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-6].first_column+1);
                                                                    var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                    nodo.addHijo(id);
                                                                    nodo.addHijo($$[$0-3]); //tipo
                                                                    nodo.addHijo($$[$0-1]); //valor
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                                  
break;
case 24:

                                                                              var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-6].first_column+1);
                                                                              var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                              nodo.addHijo(id);
                                                                              nodo.addHijo($$[$0-3]); //tipo
                                                                              nodo.addHijo($$[$0-1]); //valor
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                            
break;
case 25:

                                                                      console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                                      errores.addError(error);

                                                                      var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-6].first_column+1);
                                                                      var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                      nodo.addHijo(id);
                                                                      nodo.addHijo($$[$0-3]); //tipo
                                                                      nodo.addHijo($$[$0-1]); //valor
                                                                      this.$ = nodo;
                                                                      this.$.trad = $$[$0-6]+" "+$$[$0-5]+$$[$0-4]+" "+$$[$0-3].trad+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                                    
break;
case 26:

                                                        var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                        var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                        nodo.addHijo(id);
                                                        nodo.addHijo($$[$0-1]);
                                                        this.$ = nodo;
                                                        this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                      
break;
case 27:

                                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                errores.addError(error);

                                                var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                              
break;
case 28:

                                                          var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-4].first_column+1);
                                                          var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                          nodo.addHijo(id);
                                                          nodo.addHijo($$[$0-1]);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                        
break;
case 29:

                                                  console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                  errores.addError(error);

                                                  var nodo = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-4].first_column+1);
                                                  var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                  nodo.addHijo(id);
                                                  nodo.addHijo($$[$0-1]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                
break;
case 30:

                                                            var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                            var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                            nodo.addHijo(id);
                                                            nodo.addHijo($$[$0-1]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                          
break;
case 31:

                                                    console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                    errores.addError(error);

                                                    var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-4].first_column+1);
                                                    var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                    nodo.addHijo(id);
                                                    nodo.addHijo($$[$0-1]);
                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                  
break;
case 32:

                                        var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+" "+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 33:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+" "+$$[$0-1]+";\n";
                              
break;
case 34:

                    this.$ = $$[$0];
                    this.$.trad = $$[$0].trad;
                  
break;
case 35:

                                        var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-1].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 36:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+$$[$0-1]+";\n";
                              
break;
case 37:

                                        var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                        var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                        nodo.addHijo(id);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                      
break;
case 38:

                                console.error("Error Sintactico: "+$$[$0]+ " falto punto y coma");
                                var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                errores.addError(error);

                                var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-2].first_column+1);
                                var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                nodo.addHijo(id);
                                this.$ = nodo;
                                this.$.trad = $$[$0-2]+$$[$0-1]+";\n";
                              
break;
case 39: case 41:

                          console.error("Error Sintactico: "+$$[$0]+" error de declaracion");
                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> incremento o decremento",+yylineno+1,+_$[$0].last_column+1);
                          errores.addError(error);

                          this.$ = new Nodo("","")
                          this.$.trad = "";
                        
break;
case 40:

                            console.error("Error Sintactico: "+$$[$0]+" error de declaracion");
                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> incremento o decremento",+yylineno+1,+_$[$0].last_column+1);
                            errores.addError(error);

                            this.$ = new Nodo("","")
                            this.$.trad = "";
                          
break;
case 42:

                  var nodo = new Nodo("TIPO","STRING",+yylineno+1,+_$[$0].first_column+1); 
                  this.$ = nodo;
                  this.$.trad = $$[$0]; 
                
break;
case 43:

                  var nodo = new Nodo("TIPO","NUMBER",+yylineno+1,+_$[$0].first_column+1); 
                  this.$ = nodo;
                  this.$.trad = $$[$0]; 
                
break;
case 44:

                    var nodo = new Nodo("TIPO","BOOLEAN",+yylineno+1,+_$[$0].first_column+1); 
                    this.$ = nodo;
                    this.$.trad = $$[$0]; 
                  
break;
case 45:

                var nodo = new Nodo("TIPO","VOID",+yylineno+1,+_$[$0].first_column+1); 
                this.$ = nodo;
                this.$.trad = $$[$0]; 
              
break;
case 46:

              var nodo = new Nodo("TIPO","ID",+yylineno+1,+_$[$0].first_column+1);
              var id = new Nodo("ID",$$[$0],+yylineno+1,+_$[$0].first_column+1);
              nodo.addHijo(id); 
              this.$ = nodo;
              this.$.trad = $$[$0]; 
            
break;
case 47:

              console.error("Error sintactico: "+$$[$0]+" error tipo");
              var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> un tipo de dato",+yylineno+1,+_$[$0].last_column+1);
              errores.addError(error);
              this.$ = new Nodo("","")
              this.$.trad = "";
            
break;
case 48: case 49:
 
              this.$ = $$[$0];
              this.$.trad = $$[$0].trad; 
            
break;
case 50:
 
                  this.$ = $$[$0];
                  this.$.trad = $$[$0].trad; 
                
break;
case 51:
 
                this.$ = $$[$0];
                this.$.trad = $$[$0].trad; 
              
break;
case 52:
 
          this.$ = $$[$0];
          this.$.trad = $$[$0].trad;
        
break;
case 53:
 
                    this.$ = $$[$0];
                    this.$.trad = $$[$0].trad;
                  
break;
case 54:
 
                      var nodo = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-1].first_column+1);
                      var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1)
                      nodo.addHijo(id);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1] + $$[$0];
                    
break;
case 55:
 
                      var nodo = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-1].first_column+1);
                      var id = new Nodo("ID",$$[$0-1],+yylineno+1,+_$[$0-1].first_column+1)
                      nodo.addHijo(id);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1] + $$[$0];
                    
break;
case 56:

              console.error("Error sintactico: "+$$[$0]+" error valor");
              var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> un valor o operacion",+yylineno+1,+_$[$0].last_column+1);
              errores.addError(error);
              this.$ = new Nodo("","")
              this.$.trad = "";
            
break;
case 57:

                                                              var nodo = new Nodo("DECLARACION","TYPE",+yylineno+1,+_$[$0-5].first_column+1);
                                                              var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].first_column+1);
                                                              nodo.addHijo(id);
                                                              nodo.addHijo($$[$0-2]); //lista
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-5] + " " + $$[$0-4] + $$[$0-3] + "\n" + $$[$0-2].trad +"\n"+$$[$0-1] + $$[$0] + "\n";  
                                                            
break;
case 62:

                                                        console.error("Error sintantico: "+$$[$0]+" error types");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1)
                                                        errores.addError(error);

                                                        var nodo = new Nodo("DECLARACION","TYPE",+yylineno+1,+_$[$0-5].first_column+1);
                                                        var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-5].first_column+1);
                                                        nodo.addHijo(id);
                                                        nodo.addHijo($$[$0-2]); //lista
                                                        this.$ = nodo;
                                                        this.$.trad = $$[$0-5] + " " + $$[$0-4] + $$[$0-3] + "\n" + $$[$0-2].trad + $$[$0-1] + ";\n";
                                                     
break;
case 63:

                                                var nodo = new Nodo("LTYPE","LTYPE",+yylineno+1,+_$[$0-4].first_column+1);
                                                var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                                nodo.addHijo($$[$0-4]);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4].trad+$$[$0-3]+"\n"+$$[$0-2]+$$[$0-1]+" "+$$[$0].trad;
                                              
break;
case 64:

                                  var nodo = new Nodo("LTYPE","LTYPE",+yylineno+1,+_$[$0-2].first_column+1);
                                  var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0].first_column+1);
                                  nodo.addHijo(id);
                                  nodo.addHijo($$[$0]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2]+$$[$0-1]+" "+$$[$0].trad;
                                
break;
case 65:

                                      this.$ = $$[$0-1];
                                      this.$.trad = $$[$0-2] + "\n" + $$[$0-1].trad +"\n"+ $$[$0];
                                    
break;
case 66:

                                      console.error("Error sintactico: "+$$[$0-1]+" error valor");
                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> una lista de valores",+yylineno+1,+_$[$0-1].last_column+1);
                                      errores.addError(error);

                                      var nodo = new Nodo("","");
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2] + "\n" + $$[$0];
                                    
break;
case 67:

                                          var nodo = new Nodo("TIPO","ARRAY_STRING",+yylineno+1,+_$[$0-2].first_column+1);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                       
break;
case 68:

                                        var nodo = new Nodo("TIPO","ARRAY_NUMBER",+yylineno+1,+_$[$0-2].first_column+1);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                      
break;
case 69:

                                        var nodo = new Nodo("TIPO","ARRAY_BOOLEAN",+yylineno+1,+_$[$0-2].first_column+1);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                       
break;
case 70:

                                    var nodo = new Nodo("TIPO","ARRAY_ID",+yylineno+1,+_$[$0-2].first_column+1);
                                    var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                    nodo.addHijo(id)
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                  
break;
case 71:

                                          var nodo = new Nodo("TIPO","ARRAY_TIPO",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-1])
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                        
break;
case 72:

                                          var nodo = new Nodo("VARRAY","VARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                          nodo.addHijo($$[$0-1]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-2] + $$[$0-1].trad + $$[$0];
                                        
break;
case 73:

                                      var nodo = new Nodo("LISTA_ARRAY","LISTA_ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                      nodo.addHijo($$[$0-2]);
                                      nodo.addHijo($$[$0]);
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2].trad + $$[$0-1] + " " + $$[$0].trad;
                                   
break;
case 74:

                                  console.error("Error sintactico: "+$$[$0-1]+" error valor");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> ,",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  var nodo = new Nodo("LISTA_ARRAY","LISTA_ARRAY",+yylineno+1,+_$[$0-2].first_column+1);
                                  nodo.addHijo($$[$0-2]);
                                  nodo.addHijo($$[$0]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2].trad + ", " + $$[$0].trad;
                                
break;
case 75:

                  this.$ = $$[$0];
                  this.$.trad = $$[$0].trad;
                
break;
case 76:
 
                                                var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-3].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                              
break;
case 77:

                                        console.log("Error Sintactico "+$$[$0]+"Error falto punto y coma");
                                        var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                        errores.addError(error);

                                        var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-3].first_column+1);
                                        var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                        nodo.addHijo(id);
                                        nodo.addHijo($$[$0-1]);
                                        this.$ = nodo;
                                        this.$.trad = $$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                      
break;
case 78:

                                                                        var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-6].first_column+1);
                                                                        var arr = new Nodo("ARRAY","ARRAY",+yylineno+1,+_$[$0-6].first_column+1);
                                                                        var id = new Nodo("ID",$$[$0-6],+yylineno+1,+_$[$0-6].first_column+1);
                                                                        arr.addHijo(id);
                                                                        arr.addHijo($$[$0-4]);
                                                                        nodo.addHijo(arr);
                                                                        nodo.addHijo($$[$0-1]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                                                      
break;
case 79:

                                                                console.log("Error Sintactico "+$$[$0-3]+"Error falto punto y coma");
                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> ;",+yylineno+1,+_$[$0-3].last_column+1);
                                                                errores.addError(error);

                                                                var nodo = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-6].first_column+1);
                                                                var arr = new Nodo("ARRAY","ARRAY",+yylineno+1,+_$[$0-6].first_column+1);
                                                                var id = new Nodo("ID",$$[$0-6],+yylineno+1,+_$[$0-6].first_column+1);
                                                                arr.addHijo(id);
                                                                arr.addHijo($$[$0-4]);
                                                                nodo.addHijo(arr);
                                                                nodo.addHijo($$[$0-1]);
                                                                this.$ = nodo;
                                                                this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+" "+$$[$0-2]+" "+$$[$0-1].trad+";\n";
                                                              
break;
case 80:

                                    var nodo = new Nodo("T","T",+yylineno+1,+_$[$0-4].first_column+1);
                                    nodo.addHijo($$[$0-4]);
                                    nodo.addHijo($$[$0-2]);
                                    nodo.addHijo($$[$0]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-4].trad + " " + $$[$0-3] + " " + $$[$0-2].trad +$$[$0-1]+$$[$0].trad;
                                  
break;
case 81:
 
      this.$ = $$[$0]; 
      this.$.trad = $$[$0].trad; 
    
break;
case 82:

                var nodo = new Nodo("L","AND",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 83:

              var nodo = new Nodo("L","OR",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 84:

              var nodo = new Nodo("L","NOT",+yylineno+1,+_$[$0-1].first_column+1);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-1] + " " + $$[$0].trad;
            
break;
case 85:

                  var nodo = new Nodo("BOOLEAN",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                  this.$ = nodo;
                  this.$.trad = $$[$0]
                
break;
case 86:

       this.$=$$[$0];
       this.$.trad = $$[$0].trad;
     
break;
case 87:

                  var nodo = new Nodo("R","MAYOR",+yylineno+1,+_$[$0-2].first_column+1);
                  nodo.addHijo($$[$0-2]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                
break;
case 88:

                  var nodo = new Nodo("R","MENOR",+yylineno+1,+_$[$0-2].first_column+1);
                  nodo.addHijo($$[$0-2]);
                  nodo.addHijo($$[$0]);
                  this.$ = nodo;
                  this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                
break;
case 89:

                      var nodo = new Nodo("R","MAYORIGUAL",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 90:

                      var nodo = new Nodo("R","MENORIGUAL",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 91:

                      var nodo = new Nodo("R","IGUALDAD",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                   
break;
case 92:

                      var nodo = new Nodo("R","DESIGUALDAD",+yylineno+1,+_$[$0-2].first_column+1);
                      nodo.addHijo($$[$0-2]);
                      nodo.addHijo($$[$0]);
                      this.$ = nodo;
                      this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
                    
break;
case 93:

      this.$ = $$[$0];
      this.$.trad = $$[$0].trad;
    
break;
case 94:

                var nodo = new Nodo("A","SUMA",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 95:

                var nodo = new Nodo("A","RESTA",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 96:

                var nodo = new Nodo("A","MULTI",+yylineno+1,+_$[$0-2].first_column+1);
                nodo.addHijo($$[$0-2]);
                nodo.addHijo($$[$0]);
                this.$ = nodo;
                this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
              
break;
case 97:

              var nodo = new Nodo("A","DIV",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 98:

              var nodo = new Nodo("A","EXP",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 99:

              var nodo = new Nodo("A","MOD",+yylineno+1,+_$[$0-2].first_column+1);
              nodo.addHijo($$[$0-2]);
              nodo.addHijo($$[$0]);
              this.$ = nodo;
              this.$.trad = $$[$0-2].trad + " " + $$[$0-1] + " " + $$[$0].trad;
            
break;
case 100:

                var nodo = new Nodo("NEGATIVO","NEGATIVO",+yylineno+1,+_$[$0-1].first_column+1);
                nodo.addHijo($$[$0])
                this.$ = nodo;
                this.$.trad = $$[$0-1] + $$[$0].trad;
             
break;
case 101:

                              this.$ = $$[$0-1];
                              this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+" "+$$[$0];
                           
break;
case 102:

                var nodo = new Nodo("STRING",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = "\""+$$[$0]+"\"";
              
break;
case 103:

                var nodo = new Nodo("ENTERO",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = $$[$0];
              
break;
case 104:

                var nodo = new Nodo("DECIMAL",$$[$0],+yylineno+1,+_$[$0].first_column+1);
                this.$ = nodo;
                this.$.trad = $$[$0];
              
break;
case 105:

                                  var nodo = new Nodo("ARRAY","ARRAY",+yylineno+1,+_$[$0-3].first_column+1);
                                  var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                  nodo.addHijo(id);
                                  nodo.addHijo($$[$0-1]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                
break;
case 106:

                                              var nodo = new Nodo("LENGTH","LENGTH",+yylineno+1,+_$[$0-3].last_column+1);
                                              var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                              nodo.addHijo(id);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0];
                                            
break;
case 107:

            var nodo = new Nodo("ID",$$[$0],+yylineno+1,+_$[$0].first_column+1);
            this.$ = nodo;
            this.$.trad = $$[$0];
          
break;
case 108:

                                              //console.log("BSENTENCIAS-----------------")
                                              //var s =  eval('$$');
                                              //console.log(s)
                                              this.$ = $$[$0-1];
                                              if($$[$0-1].func){
                                                this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n"+$$[$0-1].func;
                                              } else {
                                                this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n";
                                              }
                                            
break;
case 109:

                                  //console.log("BSENTENCIAS-----------------")
                                  //var s =  eval('$$');
                                  //console.log(s)
                                  this.$ = new Nodo("","");
                                  this.$.trad = $$[$0-1]+$$[$0]+"\n";
                                
break;
case 110:

                                      var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                      nodo.addHijo($$[$0-1]);
                                      nodo.addHijo($$[$0]);
                                      this.$ = nodo;
                                      this.$.trad = $$[$0-1].trad + $$[$0].trad;
                                   
break;
case 111:

                                    var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                    nodo.addHijo($$[$0-1]);
                                    nodo.addHijo($$[$0]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-1].trad + $$[$0].trad;
                                  
break;
case 112: case 116:

                            var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                            nodo.addHijo($$[$0-1]);
                            nodo.addHijo($$[$0]);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1].trad + $$[$0].trad;
                          
break;
case 113: case 115:

                                var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo($$[$0-1]);
                                nodo.addHijo($$[$0]);
                                this.$ = nodo;
                                this.$.trad = $$[$0-1].trad + $$[$0].trad;
                              
break;
case 114:

                              var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              nodo.addHijo($$[$0]);
                              this.$ = nodo;
                              this.$.trad = $$[$0-1].trad + $$[$0].trad;
                            
break;
case 117:
  
                            var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                            nodo.addHijo($$[$0-1]);
                            nodo.addHijo($$[$0]);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1].trad + $$[$0].trad;
                          
break;
case 118:
  
                              var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              nodo.addHijo($$[$0]);
                              this.$ = nodo;
                              this.$.trad = $$[$0-1].trad + $$[$0].trad;
                            
break;
case 119:
  
                                var nodo = new Nodo("SENTENCIAS","SENTENCIAS",+yylineno+1,+_$[$0-1].first_column+1);
                                nodo.addHijo($$[$0-1]);
                                nodo.addHijo($$[$0]);
                                this.$ = nodo;
                                this.$.trad = $$[$0-1].trad;
                                this.$.func = $$[$0].trad;
                              
break;
case 129:
 
                     this.$ = $$[$0]; 
                     this.$.trad = ""; 
                     this.$.func = $$[$0].func;
                    
break;
case 130:

                    console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> DECLARACION||ASIGNACION||IF||SWITCH||WHILE||DO WHILE||SENTENCIAS DE TRANSFARENCIA||console.log()||graficar_ts()",+yylineno+1,+_$[$0].last_column+1);
                    errores.addError(error);
                    this.$ = new Nodo("","");
                    this.$.trad = "";
                  
break;
case 131:

                                                      var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-5].first_column+1);
                                                      nodo.addHijo($$[$0-3]); //condicion
                                                      nodo.addHijo($$[$0-1]); //sentencias
                                                      nodo.addHijo($$[$0]); //else
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3].trad+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                    
break;
case 132:

                                                  var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                                  nodo.addHijo($$[$0-2]); //condicion
                                                  nodo.addHijo($$[$0]); //sentencias
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                
break;
case 133:

                                            console.error("Error Sintactico: "+$$[$0-3]+" Error parametros en if")
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                            nodo.addHijo($$[$0-2]); //condicion
                                            nodo.addHijo($$[$0]); //sentencias
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-4]+"("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                          
break;
case 134:

                                            console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en if")
                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                            errores.addError(error);

                                            var nodo = new Nodo("IF","IF",+yylineno+1,+_$[$0-4].first_column+1);
                                            nodo.addHijo($$[$0-2]); //condicion
                                            nodo.addHijo($$[$0]); //sentencias
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                          
break;
case 135:

                              console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en if")
                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Condicion en if",+yylineno+1,+_$[$0-1].last_column+1);
                              errores.addError(error);

                              this.$ = new Nodo("","");
                              this.$.trad = "";
                            
break;
case 136:

                            var nodo = new Nodo("ELSE","ELSE",+yylineno+1,+_$[$0-1].first_column+1)
                            nodo.addHijo($$[$0]);

                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                          
break;
case 137:

                  var nodo = new Nodo("ELSE","ELSE",+yylineno+1,+_$[$0-1].first_column+1)
                  nodo.addHijo($$[$0]);

                  this.$ = nodo;
                  this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                
break;
case 138:

                                                      var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                      nodo.addHijo($$[$0-2]);
                                                      nodo.addHijo($$[$0]);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                    
break;
case 139:

                                                console.error("Error Sintactico: "+$$[$0-3]+" Error parametros en switch")
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                errores.addError(error);

                                                var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" ("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                              
break;
case 140:

                                                console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en switch")
                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                errores.addError(error);

                                                var nodo = new Nodo("SWITCH","SWITCH",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4]+" "+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                              
break;
case 141:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error parametros en switch")
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> condicion del switch",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  this.$ = new Nodo("","");
                                  this.$.trad = "";
                                
break;
case 142:

                                            var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-3].first_column+1);
                                            nodo.addHijo($$[$0-2]);
                                            nodo.addHijo($$[$0-1]);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-3]+"\n"+$$[$0-2].trad+$$[$0-1].trad+$$[$0]+"\n";
                                          
break;
case 143:

                                  var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-2].first_column+1);
                                  nodo.addHijo($$[$0-1]);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2]+"\n"+$$[$0-1].trad+$$[$0]+"\n";
                                
break;
case 144:

                            var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-1].first_column+1);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+"\n"+$$[$0]+"\n";
                          
break;
case 145:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> CASE o DEFAULT",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  var nodo = new Nodo("BSWITCH","BSWITCH",+yylineno+1,+_$[$0-2].first_column+1);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-2]+"\n"+$$[$0]+"\n";
                                
break;
case 146:

                                              var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-4].first_column+1);
                                              nodo.addHijo($$[$0-4]);
                                              nodo.addHijo($$[$0-2]);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-4].trad+$$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+"\n"+$$[$0].trad;
                                            
break;
case 147:

                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                                  errores.addError(error);

                                                  this.$ = new Nodo("","");
                                                  this.$.trad = "";
                                                
break;
case 148:

                                                var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-4].first_column+1);
                                                nodo.addHijo($$[$0-4]);
                                                nodo.addHijo($$[$0-2]);
                                                nodo.addHijo($$[$0]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-4].trad+$$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                              
break;
case 149:

                                                    console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                                    errores.addError(error);

                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                 
break;
case 150:

                                    var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                    nodo.addHijo($$[$0-3]);
                                    nodo.addHijo($$[$0-1]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-3].trad+$$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                  
break;
case 151:

                                        console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-1].last_column+1);
                                        errores.addError(error);

                                        this.$ = new Nodo("","");
                                        this.$.trad = "";
                                      
break;
case 152:

                                          var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-2]);
                                          nodo.addHijo($$[$0]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+"\n"+$$[$0].trad;
                                        
break;
case 153: case 155:

                                              console.error("Error Sintactico: "+$$[$0-2]+" Error Cases en switch");
                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-2].last_column+1);
                                              errores.addError(error);

                                              this.$ = new Nodo("","");
                                              this.$.trad = "";
                                            
break;
case 154:

                                          var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-3].first_column+1);
                                          nodo.addHijo($$[$0-2]);
                                          nodo.addHijo($$[$0]);
                                          this.$ = nodo;
                                          this.$.trad = $$[$0-3]+" "+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                        
break;
case 156:

                              var nodo = new Nodo("CASE","CASE",+yylineno+1,+_$[$0-2].first_column+1);
                              nodo.addHijo($$[$0-1]);
                              this.$ = nodo;
                              this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                            
break;
case 157:
 
                                  console.error("Error Sintactico: "+$$[$0-1]+" Error Cases en switch");
                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Parametro case",+yylineno+1,+_$[$0-1].last_column+1);
                                  errores.addError(error);

                                  this.$ = new Nodo("","");
                                  this.$.trad = "";
                                
break;
case 158:

                                              var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-2].last_column+1);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-2]+$$[$0-1]+"\n"+$$[$0].trad;
                                            
break;
case 159:

                                              var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-2].last_column+1);
                                              nodo.addHijo($$[$0]);
                                              this.$ = nodo;
                                              this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0].trad;
                                            
break;
case 160:

                                  var nodo = new Nodo("DEFAULT","DEFAULT",+yylineno+1,+_$[$0-1].last_column+1);
                                  this.$ = nodo;
                                  this.$.trad = $$[$0-1]+$$[$0]+"\n";
                                
break;
case 161:

                                                        var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                        nodo.addHijo($$[$0-2]);
                                                        nodo.addHijo($$[$0]);
                                                        this.$ = nodo;
                                                        this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                      
break;
case 162:

                                                  console.error("Error Sintactico: "+$$[$0-3]+" Error en While");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo($$[$0-2]);
                                                  nodo.addHijo($$[$0]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+"("+$$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                                                
break;
case 163:

                                                            console.error("Error Sintactico: "+$$[$0-2]+" Error en While");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> (",+yylineno+1,+_$[$0-2].last_column+1);
                                                            errores.addError(error);

                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 164:

                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en While");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> (",+yylineno+1,+_$[$0-1].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("WHILE","WHILE",+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo($$[$0-2]);
                                                  nodo.addHijo($$[$0]);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0].trad;
                                                
break;
case 165:

                                    console.error("Error Sintactico: "+$$[$0]+" Error en While");
                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Parametros While",+yylineno+1,+_$[$0].last_column+1);
                                    errores.addError(error);

                                    this.$ = new Nodo("","");
                                    this.$.trad = "";
                                  
break;
case 166:

                                                                              var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                              nodo.addHijo($$[$0-5]);
                                                                              nodo.addHijo($$[$0-2]);
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                            
break;
case 167:

                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                        nodo.addHijo($$[$0-5]);
                                                                        nodo.addHijo($$[$0-2]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5].trad+"("+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                      
break;
case 168:

                                                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error en do While");
                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Parametros do While",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                  errores.addError(error);
                                                                                  
                                                                                  this.$ = new Nodo("","");
                                                                                  this.$.trad = "";
                                                                                
break;
case 169:

                                                                        console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                        nodo.addHijo($$[$0-5]);
                                                                        nodo.addHijo($$[$0-2]);
                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+")"+$$[$0]+"\n";
                                                                      
break;
case 170:

                                                                      console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                                      errores.addError(error);

                                                                      var nodo = new Nodo("DOWHILE","DOWHILE",+yylineno+1,+_$[$0-6].last_column+1);
                                                                      nodo.addHijo($$[$0-5]);
                                                                      nodo.addHijo($$[$0-2]);
                                                                      this.$ = nodo;
                                                                      this.$.trad = $$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                                    
break;
case 171:

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
                                                                                                                        
                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 172:
  
                                                                                                                  console.error("Error Sintactico: "+$$[$0-11]+" Error en for");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-11]+" Se esperaba -> (",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+"("+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 173:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-10]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> let",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                      var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      dec.addHijo(id1);
                                                                                                                      dec.addHijo($$[$0-7]);

                                                                                                                      var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      inc.addHijo(id2);

                                                                                                                      nodo.addHijo(dec); //declaracion
                                                                                                                      nodo.addHijo($$[$0-5]); //condicion
                                                                                                                      nodo.addHijo(inc); //incremento
                                                                                                                      nodo.addHijo($$[$0]); //sentencias

                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+"let"+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;    
                                                                                                                    
break;
case 174: case 186:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-9]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-9]+" Se esperaba -> id",+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        this.$ = new Nodo("","");
                                                                                                                        this.$.trad = "";
                                                                                                                      
break;
case 175:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-8]+" Error en do While");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                    var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                    dec.addHijo(id1);
                                                                                                                    dec.addHijo($$[$0-7]);

                                                                                                                    var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                    var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                    inc.addHijo(id2);

                                                                                                                    nodo.addHijo(dec); //declaracion
                                                                                                                    nodo.addHijo($$[$0-5]); //condicion
                                                                                                                    nodo.addHijo(inc); //incremento
                                                                                                                    nodo.addHijo($$[$0]); //sentencias

                                                                                                                    this.$ = nodo;
                                                                                                                    this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                  
break;
case 176:

                                                                                                                console.error("Error Sintactico: "+$$[$0-6]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 177: case 189:

                                                                                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en do While");
                                                                                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> Condicion For",+yylineno+1,+_$[$0-5].last_column+1);
                                                                                                                            errores.addError(error);

                                                                                                                            this.$ = new Nodo("","");
                                                                                                                            this.$.trad = "";
                                                                                                                          
break;
case 178:

                                                                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias
                                                                                                                
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 179:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);
    
                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 180:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-2]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ++||--",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                      var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      dec.addHijo(id1);
                                                                                                                      dec.addHijo($$[$0-7]);

                                                                                                                      var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      inc.addHijo(id2);

                                                                                                                      nodo.addHijo(dec); //declaracion
                                                                                                                      nodo.addHijo($$[$0-5]); //condicion
                                                                                                                      nodo.addHijo(inc); //incremento
                                                                                                                      nodo.addHijo($$[$0]); //sentencias

                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+"++"+$$[$0-1]+$$[$0].trad;
                                                                                                                    
break;
case 181:

                                                                                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 182:

                                                                                                                  console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> SENTENCIAS",+yylineno+1,+_$[$0].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                                
break;
case 183:

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 184:
  
                                                                                                                  console.error("Error Sintactico: "+$$[$0-11]+" Error en for");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-11]+" Se esperaba -> (",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+"("+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 185:

                                                                                                                      console.error("Error Sintactico: "+$$[$0-10]+" Error en do While");
                                                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> let",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                      errores.addError(error);

                                                                                                                      var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                      var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                      var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                      dec.addHijo(id1);
                                                                                                                      dec.addHijo($$[$0-7]);

                                                                                                                      var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                      var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                      inc.addHijo(id2);

                                                                                                                      nodo.addHijo(dec); //declaracion
                                                                                                                      nodo.addHijo($$[$0-5]); //condicion
                                                                                                                      nodo.addHijo(inc); //incremento
                                                                                                                      nodo.addHijo($$[$0]); //sentencias

                                                                                                                      this.$ = nodo;
                                                                                                                      this.$.trad = $$[$0-12]+$$[$0-11]+"let"+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;    
                                                                                                                    
break;
case 187:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-8]+" Error en do While");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                    var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                    dec.addHijo(id1);
                                                                                                                    dec.addHijo($$[$0-7]);

                                                                                                                    var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                    var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                    inc.addHijo(id2);

                                                                                                                    nodo.addHijo(dec); //declaracion
                                                                                                                    nodo.addHijo($$[$0-5]); //condicion
                                                                                                                    nodo.addHijo(inc); //incremento
                                                                                                                    nodo.addHijo($$[$0]); //sentencias

                                                                                                                    this.$ = nodo;
                                                                                                                    this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                  
break;
case 188:

                                                                                                                console.error("Error Sintactico: "+$$[$0-6]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 190:

                                                                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error en do While");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias
                                                                                                                
                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 191:

                                                                                                                        console.error("Error Sintactico: "+$$[$0-3]+" Error en do While");
                                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                        errores.addError(error);

                                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                        dec.addHijo(id1);
                                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                        var id2 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                        inc.addHijo(id2);

                                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                                        this.$ = nodo;
                                                                                                                        this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                      
break;
case 192:

                                                                                                                  console.error("Error Sintactico: "+$$[$0-1]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                                
break;
case 193:

                                                                                                                  console.error("Error Sintactico: "+$$[$0]+" Error en do While");
                                                                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> SENTENCIAS",+yylineno+1,+_$[$0].last_column+1);
                                                                                                                  errores.addError(error);

                                                                                                                  var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-12].last_column+1);

                                                                                                                  var dec = new Nodo("DECLARACION","LET",+yylineno+3,+_$[$0-10].first_column+1);
                                                                                                                  var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                  dec.addHijo(id1);
                                                                                                                  dec.addHijo($$[$0-7]);

                                                                                                                  var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                  var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                  inc.addHijo(id2);

                                                                                                                  nodo.addHijo(dec); //declaracion
                                                                                                                  nodo.addHijo($$[$0-5]); //condicion
                                                                                                                  nodo.addHijo(inc); //incremento
                                                                                                                  nodo.addHijo($$[$0]); //sentencias

                                                                                                                  this.$ = nodo;
                                                                                                                  this.$.trad = $$[$0-12]+$$[$0-11]+$$[$0-10]+" "+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                                
break;
case 194:

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 195:

                                                                                                          console.error("Error Sintactico: "+$$[$0-10]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> (",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //incremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+"("+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                        
break;
case 196: case 207:

                                                                                                                console.error("Error Sintactico: "+$$[$0-9]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-9]+" Se esperaba -> id",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                this.$ = new Nodo("","");
                                                                                                                this.$.trad = "";
                                                                                                              
break;
case 197:

                                                                                                              console.error("Error Sintactico: "+$$[$0-8]+" Error en for");
                                                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                              errores.addError(error);

                                                                                                              var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                              var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                              var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                              dec.addHijo(id1);
                                                                                                              dec.addHijo($$[$0-7]);

                                                                                                              var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                              var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                              inc.addHijo(id2);

                                                                                                              nodo.addHijo(dec); //declaracion
                                                                                                              nodo.addHijo($$[$0-5]); //condicion
                                                                                                              nodo.addHijo(inc); //incremento
                                                                                                              nodo.addHijo($$[$0]); //sentencias

                                                                                                              this.$ = nodo;
                                                                                                              this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                            
break;
case 198:

                                                                                                        console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 199: case 210:

                                                                                                                    console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> condicion for",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                                    errores.addError(error);

                                                                                                                    this.$ = new Nodo("","");
                                                                                                                    this.$.trad = "";
                                                                                                                  
break;
case 200:

                                                                                                        console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //incremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 201:

                                                                                                                console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 202:
  
                                                                                                                console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ++||--",+yylineno+1,+_$[$0-2].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //incremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+"++"+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 203:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //incremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+")"+$$[$0].trad;
                                                                                                        
break;
case 204:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("INCREMENTO","INCREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //incremento
                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                        
break;
case 205:

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION",+yylineno+1,+_$[$0-11].last_column+1);
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //decremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 206:

                                                                                                          console.error("Error Sintactico: "+$$[$0-10]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-10]+" Se esperaba -> (",+yylineno+1,+_$[$0-10].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //decremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+"("+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                        
break;
case 208:

                                                                                                              console.error("Error Sintactico: "+$$[$0-8]+" Error en for");
                                                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-8]+" Se esperaba -> =",+yylineno+1,+_$[$0-8].last_column+1);
                                                                                                              errores.addError(error);

                                                                                                              var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                              var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                              var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                              dec.addHijo(id1);
                                                                                                              dec.addHijo($$[$0-7]);

                                                                                                              var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                              var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                              inc.addHijo(id2);

                                                                                                              nodo.addHijo(dec); //declaracion
                                                                                                              nodo.addHijo($$[$0-5]); //condicion
                                                                                                              nodo.addHijo(inc); //decremento
                                                                                                              nodo.addHijo($$[$0]); //sentencias

                                                                                                              this.$ = nodo;
                                                                                                              this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+"="+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                            
break;
case 209:

                                                                                                        console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> ;",+yylineno+1,+_$[$0-6].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //decremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+";"+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 211:

                                                                                                        console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ;",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        errores.addError(error);

                                                                                                        var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                        var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                        var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                        dec.addHijo(id1);
                                                                                                        dec.addHijo($$[$0-7]);

                                                                                                        var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                        var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                        inc.addHijo(id2);

                                                                                                        nodo.addHijo(dec); //declaracion
                                                                                                        nodo.addHijo($$[$0-5]); //condicion
                                                                                                        nodo.addHijo(inc); //decremento
                                                                                                        nodo.addHijo($$[$0]); //sentencias

                                                                                                        this.$ = nodo;
                                                                                                        this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+";"+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                      
break;
case 212:

                                                                                                                console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> id",+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                errores.addError(error);

                                                                                                                var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                                var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                                var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                                dec.addHijo(id1);
                                                                                                                dec.addHijo($$[$0-7]);

                                                                                                                var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                                var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                                inc.addHijo(id2);

                                                                                                                nodo.addHijo(dec); //declaracion
                                                                                                                nodo.addHijo($$[$0-5]); //condicion
                                                                                                                nodo.addHijo(inc); //decremento
                                                                                                                nodo.addHijo($$[$0]); //sentencias

                                                                                                                this.$ = nodo;
                                                                                                                this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-9]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                                                              
break;
case 213:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //decremento
                                                                                                          nodo.addHijo($$[$0]); //sentencias

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+")"+$$[$0].trad;
                                                                                                        
break;
case 214:
  
                                                                                                          console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                                                                          errores.addError(error);

                                                                                                          var nodo = new Nodo("FOR","FOR",+yylineno+1,+_$[$0-11].last_column+1);

                                                                                                          var dec = new Nodo("ASIGNACION","ASIGNACION");
                                                                                                          var id1 = new Nodo("ID",$$[$0-9],+yylineno+1,+_$[$0-9].last_column+1);
                                                                                                          dec.addHijo(id1);
                                                                                                          dec.addHijo($$[$0-7]);

                                                                                                          var inc = new Nodo("DECREMENTO","DECREMENTO",+yylineno+1,+_$[$0-4].last_column+1);
                                                                                                          var id2 = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].last_column+1);
                                                                                                          inc.addHijo(id2);

                                                                                                          nodo.addHijo(dec); //declaracion
                                                                                                          nodo.addHijo($$[$0-5]); //condicion
                                                                                                          nodo.addHijo(inc); //decremento

                                                                                                          this.$ = nodo;
                                                                                                          this.$.trad = $$[$0-11]+$$[$0-10]+$$[$0-9]+$$[$0-8]+$$[$0-7].trad+$$[$0-6]+$$[$0-5].trad+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                                                        
break;
case 215:

                                                                  var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-6].last_column+1);
                                                                  var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                  var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                  nodo.addHijo(id1);
                                                                  nodo.addHijo(id2);
                                                                  nodo.addHijo($$[$0]);
                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                
break;
case 216:

                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> (",+yylineno+1,+_$[$0-5].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);
                                                            nodo.addHijo($$[$0]);
                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+"("+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                          
break;
case 217: case 238:

                                                                  console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-4].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 218: case 240:

                                                                  console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> id",+yylineno+1,+_$[$0-2].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 219:

                                                            var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);
                                                            nodo.addHijo($$[$0]);

                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                          
break;
case 220:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);

                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                          
break;
case 221:

                                                                          var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1)
                                                                          var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                          dec.addHijo(id1);
                                                                          nodo.addHijo(dec);
                                                                          nodo.addHijo(id2);
                                                                          nodo.addHijo($$[$0]);
                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 222:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 223:

                                                                        console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> let||const",+yylineno+1,+_$[$0-5].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1)
                                                                        var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                        var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                        dec.addHijo(id1);
                                                                        nodo.addHijo(dec);
                                                                        nodo.addHijo(id2);
                                                                        nodo.addHijo($$[$0]);

                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-7]+$$[$0-6]+"let"+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                      
break;
case 224: case 231:

                                                                          console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-5].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 225: case 232:

                                                                          console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> in, of",+yylineno+1,+_$[$0-3].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 226: case 233: case 247: case 253:

                                                                          console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> id",+yylineno+1,+_$[$0-2].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 227:

                                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 228:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 229:

                                                                          var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1)
                                                                          var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                          dec.addHijo(id1);
                                                                          nodo.addHijo(dec);
                                                                          nodo.addHijo(id2);
                                                                          nodo.addHijo($$[$0]);
                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 230:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 234:

                                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 235:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FORIN","FORIN",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1)
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    
                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 236:

                                                                  var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-6].last_column+1);
                                                                  var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                  var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                  nodo.addHijo(id1);
                                                                  nodo.addHijo(id2);
                                                                  nodo.addHijo($$[$0]);

                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                
break;
case 237:

                                                            console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> (",+yylineno+1,+_$[$0-5].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);
                                                            nodo.addHijo($$[$0]);

                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+"("+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                          
break;
case 239:

                                                                  console.error("Error Sintactico: "+$$[$0-3]+" Error en for");
                                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> in||of",+yylineno+1,+_$[$0-3].last_column+1);
                                                                  errores.addError(error);

                                                                  this.$ = new Nodo("","")
                                                                  this.$.trad = "";
                                                                
break;
case 241:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);
                                                            nodo.addHijo($$[$0]);

                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                          
break;
case 242:

                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-6].last_column+1);
                                                            var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                            var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                            nodo.addHijo(id1);
                                                            nodo.addHijo(id2);

                                                            this.$ = nodo;
                                                            this.$.trad = $$[$0-6]+$$[$0-5]+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                          
break;
case 243:

                                                                          var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1);
                                                                          var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                          dec.addHijo(id1);
                                                                          nodo.addHijo(dec);
                                                                          nodo.addHijo(id2);
                                                                          nodo.addHijo($$[$0]);

                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 244:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 245:

                                                                        console.error("Error Sintactico: "+$$[$0-5]+" Error en for");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> let|const",+yylineno+1,+_$[$0-5].last_column+1);
                                                                        errores.addError(error);

                                                                        var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                        var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1);
                                                                        var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                        var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                        dec.addHijo(id1);
                                                                        nodo.addHijo(dec);
                                                                        nodo.addHijo(id2);
                                                                        nodo.addHijo($$[$0]);

                                                                        this.$ = nodo;
                                                                        this.$.trad = $$[$0-7]+$$[$0-6]+"let"+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                      
break;
case 246: case 252:

                                                                          console.error("Error Sintactico: "+$$[$0-4]+" Error en for");
                                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> id",+yylineno+1,+_$[$0-4].last_column+1);
                                                                          errores.addError(error);

                                                                          this.$ = new Nodo("","");
                                                                          this.$.trad = "";
                                                                        
break;
case 248:

                                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 249:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","LET",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 250:

                                                                          var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                          var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1);
                                                                          var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                          var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                          dec.addHijo(id1);
                                                                          nodo.addHijo(dec);
                                                                          nodo.addHijo(id2);
                                                                          nodo.addHijo($$[$0]);

                                                                          this.$ = nodo;
                                                                          this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                        
break;
case 251:

                                                                    console.error("Error Sintactico: "+$$[$0-6]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> (",+yylineno+1,+_$[$0-6].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+"("+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                                  
break;
case 254:

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);
                                                                    nodo.addHijo($$[$0]);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+")"+$$[$0].trad;
                                                                  
break;
case 255:

                                                                    console.error("Error Sintactico: "+$$[$0]+" Error en for");
                                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0].last_column+1);
                                                                    errores.addError(error);

                                                                    var nodo = new Nodo("FOROF","FOROF",+yylineno+1,+_$[$0-7].last_column+1);
                                                                    var dec = new Nodo("DECLARACION","CONST",+yylineno+1,+_$[$0-5].last_column+1);
                                                                    var id1 = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                                    var id2 = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].last_column+1);
                                                                    dec.addHijo(id1);
                                                                    nodo.addHijo(dec);
                                                                    nodo.addHijo(id2);

                                                                    this.$ = nodo;
                                                                    this.$.trad = $$[$0-7]+$$[$0-6]+$$[$0-5]+" "+$$[$0-4]+" "+$$[$0-3]+" "+$$[$0-2]+$$[$0-1]+"{}\n";
                                                                  
break;
case 256:
 
                                                      console.error("Error Sintactico: "+$$[$0-2]+" Error en for");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-2].last_column+1);
                                                      errores.addError(error);

                                                      this.$ = new Nodo("","")
                                                      this.$.trad = "";
                                                    
break;
case 257:

                              console.error("Error Sintactico: "+$$[$0-1]+" Error parametros for");
                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> Sentencias",+yylineno+1,+_$[$0-1].last_column+1);
                              errores.addError(error);

                              this.$ = new Nodo("","")
                              this.$.trad = "";
                            
break;
case 258:

                            var nodo = new Nodo("BREAK","BREAK",+yylineno+1,+_$[$0-1].last_column+1);
                            this.$ = nodo;
                            this.$.trad = $$[$0-1]+$$[$0]+"\n";
                          
break;
case 259:

                    console.error("Error Sintactico: "+$$[$0]+" Error break");
                    var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                    errores.addError(error);

                    var nodo = new Nodo("BREAK","BREAK",+yylineno+1,+_$[$0-1].last_column+1);
                    this.$ = nodo;
                    this.$.trad = $$[$0-1]+";\n";
                  
break;
case 260:

                                var nodo = new Nodo("CONTINUE","CONTINUE",+yylineno+1,+_$[$0-1].last_column+1);
                                this.$ = nodo;
                                this.$.trad = $$[$0-1]+$$[$0]+"\n";
                              
break;
case 261:

                        console.error("Error Sintactico: "+$$[$0]+" Error continue");
                        var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                        errores.addError(error);

                        var nodo = new Nodo("CONTINUE","CONTINUE",+yylineno+1,+_$[$0-1].last_column+1);
                        this.$ = nodo;
                        this.$.trad = $$[$0-1]+";\n";
                      
break;
case 262:

                              var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                              this.$ = nodo;
                              this.$.trad = $$[$0-1]+$$[$0]+"\n";
                            
break;
case 263:

                      console.error("Error Sintactico: "+$$[$0]+" Error return");
                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                      errores.addError(error);

                      var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                      this.$ = nodo;
                      this.$.trad = $$[$0-1]+";\n";
                    
break;
case 264:

                                    var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-2].last_column+1);
                                    nodo.addHijo($$[$0-1]);
                                    this.$ = nodo;
                                    this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+$$[$0]+"\n";
                                  
break;
case 265:

                            console.error("Error Sintactico: "+$$[$0]+" Error return");
                            var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                            errores.addError(error);

                            var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-2].last_column+1);
                            nodo.addHijo($$[$0-1]);
                            this.$ = nodo;
                            this.$.trad = $$[$0-2]+" "+$$[$0-1].trad+";\n";
                          
break;
case 266:

                          var nodo = new Nodo("RETURN","RETURN",+yylineno+1,+_$[$0-1].last_column+1);
                          nodo.addHijo($$[$0]);
                          this.$ = nodo;
                          this.$.trad = $$[$0-1]+" "+$$[$0].trad;
                        
break;
case 267:
 
                                                                              var s =  eval('$$');
                                                                              var ids = "";
                                                                              for(var i=0;i<s.length;i++){
                                                                                if(s[i] === $$[$0-6]){
                                                                                    ids += s[i+1]+"_";
                                                                                }
                                                                              }
                                                                              var nodo = new Nodo("FUNCION","FUNCION",+yylineno+1,+_$[$0-6].first_column+1);
                                                                              var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].first_column+1);
                                                                              nodo.addHijo(id);
                                                                              nodo.addHijo($$[$0-1]);
                                                                              nodo.addHijo($$[$0]);
                                                                              this.$ = nodo;
                                                                              this.$.trad = $$[$0-6]+" "+ids.replace(/.$/,"")+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                              this.$.func = $$[$0-6]+" "+ids.replace(/.$/,"")+$$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                            
break;
case 268:

                                                                              console.error("Error sintactico: "+$$[$0-5]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> id"+yylineno+1,+_$[$0-5].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 269:

                                                                        console.error("Error sintactico: "+$$[$0-4]+" Desconocido Sentencias");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> ("+yylineno+1,+_$[$0-4].last_column+1);
                                                                        
                                                                        errores.addError(error);
                                                                        this.$ = new Nodo("","");
                                                                        this.$.trad = "";
                                                                      
break;
case 270:

                                                                        console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> )"+yylineno+1,+_$[$0-3].last_column+1);
                                                                        
                                                                        errores.addError(error);
                                                                        this.$ = new Nodo("","");
                                                                        this.$.trad = "";
                                                                      
break;
case 271:

                                                                      console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> :"+yylineno+1,+_$[$0-2].last_column+1);
                                                                      
                                                                      errores.addError(error);
                                                                      this.$ = new Nodo("","");
                                                                      this.$.trad = "";
                                                                    
break;
case 272:

                                                                      console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> {"+yylineno+1,+_$[$0].last_column+1);
                                                                      
                                                                      errores.addError(error);
                                                                      this.$ = new Nodo("","");
                                                                      this.$.trad = "";
                                                                    
break;
case 273:

                                                                                      var s =  eval('$$');
                                                                                      var ids = "";
                                                                                      for(var i=0;i<s.length;i++){
                                                                                        if(s[i] === $$[$0-7]){
                                                                                            ids += s[i+1]+"_";
                                                                                        }
                                                                                      }
                                                                                      var nodo = new Nodo("FUNCION","FUNCION",+yylineno+1,+_$[$0-7].first_column+1);
                                                                                      var id = new Nodo("ID",$$[$0-6],+yylineno+1,+_$[$0-6].first_column+1);
                                                                                      nodo.addHijo(id);
                                                                                      nodo.addHijo($$[$0-4]);
                                                                                      nodo.addHijo($$[$0-1]);
                                                                                      nodo.addHijo($$[$0]);
                                                                                      this.$ = nodo;
                                                                                      this.$.trad = $$[$0-7]+" "+ids.replace(/.$/,"")+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                                      this.$.func = $$[$0-7]+" "+ids.replace(/.$/,"")+$$[$0-5]+$$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0].trad;
                                                                                    
break;
case 274:

                                                                                      console.error("Error sintactico: "+$$[$0-6]+" Desconocido Sentencias");
                                                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0-6]+" Se esperaba -> id"+yylineno+1,+_$[$0-6].last_column+1);
                                                                                      
                                                                                      errores.addError(error);
                                                                                      this.$ = new Nodo("","");
                                                                                      this.$.trad = "";
                                                                                    
break;
case 275:

                                                                                console.error("Error sintactico: "+$$[$0-5]+" Desconocido Sentencias");
                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-5]+" Se esperaba -> ("+yylineno+1,+_$[$0-5].last_column+1);
                                                                                
                                                                                errores.addError(error);
                                                                                this.$ = new Nodo("","");
                                                                                this.$.trad = "";
                                                                              
break;
case 276:

                                                                                console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> )"+yylineno+1,+_$[$0-3].last_column+1);
                                                                                
                                                                                errores.addError(error);
                                                                                this.$ = new Nodo("","");
                                                                                this.$.trad = "";
                                                                              
break;
case 277:

                                                                              console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> :"+yylineno+1,+_$[$0-2].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 278:

                                                                              console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                                              var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> {"+yylineno+1,+_$[$0-1].last_column+1);
                                                                              
                                                                              errores.addError(error);
                                                                              this.$ = new Nodo("","");
                                                                              this.$.trad = "";
                                                                            
break;
case 279:

                                                    var nodo = new Nodo("PARFUNC","PARFUNC",+yylineno+1,+_$[$0-4].first_column+1);
                                                    var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                                    nodo.add($$[$0-4]);
                                                    nodo.add(id);
                                                    noco.add($$[$0]);

                                                    this.$ = nodo;
                                                    this.$.trad = $$[$0-4].trad+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0].trad;
                                                  
break;
case 280:

                                      var nodo = new Nodo("PARFUNC","PARFUNC",+yylineno+1,+_$[$0-2].first_column+1);
                                      var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                      nodo.add(id);
                                      noco.add($$[$0]);

                                      this.$ = nodo;
                                      this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0].trad;
                                    
break;
case 281:

                  console.error("Error sintactico: "+$$[$0]+" Desconocido Sentencias");
                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> Parametro de funcion(id)"+yylineno+1,+_$[$0].last_column+1);
                  
                  errores.addError(error);
                  this.$ = new Nodo("","");
                  this.$.trad = "";
                
break;
case 282:
 
                                            var nodo = new Nodo("VALOR","VALFUNCION",+yylineno+1,+_$[$0-2].first_column+1);
                                            var id = new Nodo("ID",$$[$0-2],+yylineno+1,+_$[$0-2].first_column+1);
                                            nodo.addHijo(id);
                                            this.$ = nodo;
                                            this.$.trad = $$[$0-2]+$$[$0-1]+$$[$0];
                                          
break;
case 283:

                                                var nodo = new Nodo("VALOR","VALFUNCION",+yylineno+1,+_$[$0-3].first_column+1);
                                                var id = new Nodo("ID",$$[$0-3],+yylineno+1,+_$[$0-3].first_column+1);
                                                nodo.addHijo(id);
                                                nodo.addHijo($$[$0-1]);
                                                this.$ = nodo;
                                                this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1].trad+$$[$0];
                                              
break;
case 284:

                          var nodo = new Nodo("LPAR","LPAR",+yylineno+1,+_$[$0-2].first_column+1);
                          nodo.addHijo($$[$0-2]);
                          nodo.addHijo($$[$0]);
                          this.$ = nodo;
                          this.$.trad = $$[$0-2].trad+$$[$0-1]+$$[$0].trad;
                        
break;
case 285:

              this.$ = $$[$0];
              this.$.trad = $$[$0].trad;
            
break;
case 286:

                                                              var nodo = new Nodo("CONSOLE","CONSOLE",+yylineno+1,+_$[$0-4].last_column+1);
                                                              nodo.addHijo($$[$0-2]);
                                                              this.$ = nodo;
                                                              this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                            
break;
case 287:

                                                        console.error("Error sintactico: "+$$[$0-3]+" Desconocido Sentencias");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> ("+yylineno+1,+_$[$0-3].last_column+1);
                                                        
                                                        errores.addError(error);
                                                        this.$ = new Nodo("","");
                                                        this.$.trad = "";
                                                      
break;
case 288:

                                                        console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                        var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> ("+yylineno+1,+_$[$0-1].last_column+1);
                                                        
                                                        errores.addError(error);
                                                        this.$ = new Nodo("","");
                                                        this.$.trad = "";
                                                      
break;
case 289:

                                                      console.error("Error Sintactico: "+$$[$0]+" Error console");
                                                      var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                      errores.addError(error);

                                                      var nodo = new Nodo("CONSOLE","CONSOLE",+yylineno+1,+_$[$0-4].last_column+1);
                                                      nodo.addHijo($$[$0-2]);
                                                      this.$ = nodo;
                                                      this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                    
break;
case 290:

                                                          var nodo = new Nodo("GRAFICAR","GRAFICAR",+yylineno+1,+_$[$0-3].last_column+1);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                                        
break;
case 291:

                                                    console.error("Error sintactico: "+$$[$0-2]+" Desconocido Sentencias");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> ("+yylineno+1,+_$[$0-2].last_column+1);
                                                    
                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 292:

                                                    console.error("Error sintactico: "+$$[$0-1]+" Desconocido Sentencias");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )"+yylineno+1,+_$[$0-1].last_column+1);
                                                    
                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 293:
 
                                                  console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("GRAFICAR","GRAFICAR",+yylineno+1,+_$[$0-3].last_column+1);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-3]+$$[$0-2]+$$[$0-1]+";\n";
                                                
break;
case 294:

                                                                  var nodo = new Nodo("PUSH","PUSH",+yylineno+1,+_$[$0-5].last_column+1);
                                                                  var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].last_column+1);
                                                                  nodo.addHijo(id);
                                                                  nodo.addHijo($$[$0-2]);
                                                                  this.$ = nodo;
                                                                  this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+$$[$0]+"\n";
                                                                
break;
case 295:
 
                                                                console.error("Error Sintactico: "+$$[$0-4]+" Error graficar");
                                                                var error = new Error("Sintactico","Encontrado: "+$$[$0-4]+" Se esperaba -> .push",+yylineno+1,+_$[$0-4].last_column+1);
                                                                errores.addError(error);

                                                                errores.addError(error);
                                                                this.$ = new Nodo("","");
                                                                this.$.trad = "";
                                                              
break;
case 296:
 
                                                            console.error("Error Sintactico: "+$$[$0-3]+" Error graficar");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-3]+" Se esperaba -> (",+yylineno+1,+_$[$0-3].last_column+1);
                                                            errores.addError(error);

                                                            errores.addError(error);
                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 297:
 
                                                            console.error("Error Sintactico: "+$$[$0-1]+" Error graficar");
                                                            var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                            errores.addError(error);

                                                            errores.addError(error);
                                                            this.$ = new Nodo("","");
                                                            this.$.trad = "";
                                                          
break;
case 298:
 
                                                          console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                          var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> )",+yylineno+1,+_$[$0].last_column+1);
                                                          errores.addError(error);

                                                          var nodo = new Nodo("PUSH","PUSH",+yylineno+1,+_$[$0-5].last_column+1);
                                                          var id = new Nodo("ID",$$[$0-5],+yylineno+1,+_$[$0-5].last_column+1);
                                                          nodo.addHijo(id);
                                                          nodo.addHijo($$[$0-2]);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-5]+$$[$0-4]+$$[$0-3]+$$[$0-2].trad+$$[$0-1]+";\n";
                                                        
break;
case 299:

                                                          var nodo = new Nodo("POP","POP",+yylineno+1,+_$[$0-4].last_column+1);
                                                          var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                          nodo.addHijo(id);
                                                          this.$ = nodo;
                                                          this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+$$[$0]+"\n";
                                                        
break;
case 300:
 
                                                    console.error("Error Sintactico: "+$$[$0-2]+" Error graficar");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-2]+" Se esperaba -> (",+yylineno+1,+_$[$0-2].last_column+1);
                                                    errores.addError(error);

                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 301:
 
                                                    console.error("Error Sintactico: "+$$[$0-1]+" Error graficar");
                                                    var error = new Error("Sintactico","Encontrado: "+$$[$0-1]+" Se esperaba -> )",+yylineno+1,+_$[$0-1].last_column+1);
                                                    errores.addError(error);

                                                    errores.addError(error);
                                                    this.$ = new Nodo("","");
                                                    this.$.trad = "";
                                                  
break;
case 302:
 
                                                  console.error("Error Sintactico: "+$$[$0]+" Error graficar");
                                                  var error = new Error("Sintactico","Encontrado: "+$$[$0]+" Se esperaba -> ;",+yylineno+1,+_$[$0].last_column+1);
                                                  errores.addError(error);

                                                  var nodo = new Nodo("POP","POP",+yylineno+1,+_$[$0-4].last_column+1);
                                                  var id = new Nodo("ID",$$[$0-4],+yylineno+1,+_$[$0-4].last_column+1);
                                                  nodo.addHijo(id);
                                                  this.$ = nodo;
                                                  this.$.trad = $$[$0-4]+$$[$0-3]+$$[$0-2]+$$[$0-1]+";\n";
                                                
break;
}
},
table: [{2:[1,13],3:1,4:2,5:[1,3],6:4,7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:12,15:$V0,16:$V1,22:$V2,23:16,36:$V3,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,91:$V9,94:$Va,95:$Vb},{1:[3]},{5:[1,27],6:28,7:29,8:30,9:31,10:32,11:33,12:34,13:35,14:36,15:$V0,16:$V1,22:$V2,23:16,36:$V3,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,91:$V9,94:$Va,95:$Vb},{1:[2,2]},o($Vc,[2,12]),o($Vc,[2,13]),o($Vc,[2,14]),o($Vc,[2,15]),o($Vc,[2,16]),o($Vc,[2,17]),o($Vc,[2,18]),o($Vc,[2,19]),o($Vc,[2,20]),o($Vc,[2,21]),{2:[1,38],16:[1,37]},{2:[1,40],16:[1,39]},o($Vd,[2,34]),{2:[1,43],19:$Ve,24:[1,41],25:[1,42],41:[1,45],96:[1,46],97:[1,47]},{2:[1,49],65:[1,48]},{2:[1,51],65:[1,50]},{2:[1,53],65:[1,52]},{37:$Vf,71:54},{2:[1,57],65:[1,56]},{2:[1,59],65:[1,58]},{2:[1,61],65:[1,60]},{2:[1,63],16:[1,62]},{2:[1,65],16:[1,64]},{1:[2,1]},o($Vc,[2,3]),o($Vc,[2,4]),o($Vc,[2,5]),o($Vc,[2,6]),o($Vc,[2,7]),o($Vc,[2,8]),o($Vc,[2,9]),o($Vc,[2,10]),o($Vc,[2,11]),{2:[1,69],17:[1,66],19:[1,67],21:[1,68]},o($Vd,[2,39]),{17:[1,70],19:[1,71]},o($Vd,[2,40]),{2:[1,73],21:[1,72]},{2:[1,75],21:[1,74]},o($Vd,[2,41],{65:[1,76]}),{2:$Vg,16:$Vh,20:77,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:96,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:[1,99],65:[1,98]},{2:[1,101],65:[1,100]},{16:$Vr,47:90,48:102,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,37:$Vf,47:90,48:103,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq,71:104},{16:$Vr,47:90,48:105,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,37:$Vs,47:90,48:106,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq,78:107},{2:[1,110],16:$Vr,47:90,48:109,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,37:$Vf,47:90,48:111,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq,71:112},{83:[1,113]},{2:$Vt,6:116,7:117,8:118,9:119,10:120,11:121,12:122,13:124,14:125,15:$V0,16:$V1,22:$V2,23:16,36:$V3,39:[1,115],72:114,73:123,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb},{2:[1,131],15:[1,130],16:[1,132],22:[1,133]},{15:[1,134],16:[1,135],22:[1,136],37:$Vf,71:137},{2:$Vg,16:$Vh,20:138,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:$Vg,16:$Vh,20:139,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:[1,141],66:[1,140]},{66:[1,142]},{2:[1,144],65:[1,143]},{65:[1,145]},{2:[1,147],37:[1,146]},{37:[1,148]},{2:$Vx,16:$Vy,18:149,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{2:$Vg,16:$Vh,20:159,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($Vd,[2,32]),o($Vd,[2,33]),{2:$Vx,16:$Vy,18:160,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{2:$Vg,16:$Vh,20:161,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($Vd,[2,35]),o($Vd,[2,36]),o($Vd,[2,37]),o($Vd,[2,38]),{2:$Vg,16:$Vh,20:162,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:[1,164],21:[1,163]},o($VE,[2,50]),o($VE,[2,51]),o($VE,[2,52]),o($VE,[2,53]),o([2,21,39,40,42,44,45,49,50,51,55,56,57,58,59,60,61,62,63,64,66],$VF,{24:$VG,25:$VH,41:$VI,65:$VJ,70:$VK}),o($VE,$VL),{2:[1,171],16:$VM,38:170},{2:$Vg,16:$Vh,20:174,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,46:173,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($VE,[2,81],{49:[1,175],50:$VN,51:$VO}),{16:$Vr,47:90,48:178,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($VP,[2,85]),o($VP,[2,86]),o($VP,[2,93],{44:[1,180],45:[1,179],55:[1,181],56:[1,182],57:[1,183],58:[1,184],59:$VQ,60:$VR,61:$VS,62:$VT,63:$VU,64:$VV}),{16:$Vr,47:191,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,34:192,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($VW,[2,102]),o($VW,[2,103]),o($VW,[2,104]),{42:[1,193],59:$VQ,60:$VR,61:$VS,62:$VT,63:$VU,64:$VV},o($VW,$VF,{41:$VI,70:$VK}),{2:$Vg,16:$Vh,20:194,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:$Vg,16:$Vh,20:195,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:[1,197],66:[1,196]},{66:[1,198]},{2:[1,200],50:$VN,51:$VO,66:[1,199]},{50:$VN,51:$VO,66:[1,201]},o($Vd,[2,135]),{2:[1,203],50:$VN,51:$VO,66:[1,202]},{50:$VN,51:$VO,66:[1,204]},o($Vd,[2,141]),{2:[1,207],39:[1,206],79:205,81:[1,208]},{2:[1,210],50:$VN,51:$VO,66:[1,209]},{66:[1,211]},{50:$VN,51:$VO,66:[1,212]},o($Vd,[2,165]),{2:[1,214],65:[1,213]},{6:216,7:217,8:218,9:219,10:220,11:221,12:222,13:224,14:225,15:$V0,16:$V1,22:$V2,23:16,36:$V3,39:[1,215],73:223,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb},o($VX,[2,109]),o($VY,[2,120]),o($VY,[2,121]),o($VY,[2,122]),o($VY,[2,123]),o($VY,[2,124]),o($VY,[2,125]),o($VY,[2,126]),o($VY,[2,127]),o($VY,[2,128]),o($VY,[2,129]),o($VY,[2,130]),{2:[1,227],21:[1,226]},{2:[1,229],21:[1,228]},{2:[1,231],7:233,16:[1,234],20:232,21:[1,230],32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:[1,236],16:[1,235]},{16:[1,237],19:[1,238],66:[1,241],86:[1,239],87:[1,240]},{2:[1,243],19:[1,242],86:[1,244],87:[1,245]},{2:[1,247],16:[1,246]},{16:[1,248]},{19:[1,249],86:[1,250],87:[1,251]},{16:[1,252]},o($Vd,[2,257]),{2:[1,254],66:[1,253]},{66:[1,255]},{2:[1,257],21:[1,256]},{21:[1,258]},{21:[1,259]},{2:[1,261],16:$VZ,66:[1,260],92:262},{2:$V_,16:$VZ,66:[1,264],92:265},{2:$V_,16:$VZ,66:[1,267],92:268},{2:[1,270],16:$VM,38:269},{16:$VM,38:271},{16:$VM,38:272},{2:[1,275],19:[1,273],21:[1,274]},o($V$,[2,48]),o($V$,[2,49]),o($V$,$V01,{41:[1,276]}),o($V$,$V11,{41:[1,277]}),o($V$,$V21,{41:[1,278]}),o($V31,[2,45]),o($V$,$V41,{41:[1,279]}),o($V31,[2,47]),{44:[1,280]},{2:[1,282],21:[1,281]},{19:[1,283]},{2:[1,285],21:[1,284]},{66:[1,286]},o($Vd,[2,76]),o($Vd,[2,77]),o($VE,[2,54]),o($VE,[2,55]),{2:$Vg,16:$Vh,20:289,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,66:[1,287],67:$Vo,68:$Vp,69:$Vq,93:288},{16:$Vr,47:290,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{65:[1,291]},{39:[1,292],40:$V51},{39:[1,294]},{17:[1,295]},{2:[1,298],40:[1,297],42:[1,296]},o($V61,[2,75]),{16:$Vr,47:90,48:299,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:90,48:300,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:90,48:301,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($VP,[2,84]),{16:$Vr,47:302,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:303,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:304,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:305,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:306,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:307,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:308,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:309,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:310,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:311,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:312,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:313,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($V71,[2,100],{61:$VS,62:$VT,63:$VU,64:$VV}),{66:[1,314]},{19:$V81},{2:[1,317],66:[1,316]},{66:[1,318]},{2:[1,320],21:[1,319]},{21:[1,321]},{21:[1,322]},{37:$Vf,71:323},{37:$Vf,71:324},{37:$Vf,71:325},{37:$Vs,78:326},{37:$Vs,78:327},{37:$Vs,78:328},{39:[1,330],80:329,81:[1,331],82:[1,332]},o($Vd,[2,144]),{39:[1,333]},{2:[1,335],16:$Vr,47:90,48:334,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{37:$Vf,71:336},{37:$Vf,71:337},{37:$Vf,71:338},{37:$Vf,71:339},{2:[1,341],16:$Vr,47:90,48:340,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:90,48:342,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($VX,[2,108]),o($VY,[2,110]),o($VY,[2,111]),o($VY,[2,112]),o($VY,[2,113]),o($VY,[2,114]),o($VY,[2,115]),o($VY,[2,116]),o($VY,[2,117]),o($VY,[2,118]),o($VY,[2,119]),o($VY,[2,258]),o($VY,[2,259]),o($VY,[2,260]),o($VY,[2,261]),o($VY,[2,262]),o($VY,[2,263],{2:$VL,21:$VL}),{2:[1,344],21:[1,343]},o($VY,[2,266]),o($V91,$VF,{19:$Ve,24:$VG,25:$VH,41:[1,345],65:$VJ,70:$VK}),{2:[1,347],19:[1,346],86:[1,348],87:[1,349]},{19:[1,350],86:[1,351],87:[1,352]},{19:[1,353],86:[1,354],87:[1,355]},{2:$Vg,16:$Vh,20:356,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:[1,357]},{16:[1,358]},{37:$Vf,71:359},{2:$Vg,16:$Vh,20:360,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:$Vg,16:[1,362],20:361,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:[1,364],16:[1,363]},{2:[1,366],16:[1,365]},{2:[1,368],86:[1,367],87:[1,369]},{86:[1,370],87:[1,371]},{19:[1,372],86:[1,373],87:[1,374]},{2:$Vg,16:$Vh,20:375,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:[1,376]},{16:[1,377]},{86:[1,378],87:[1,379]},{2:[1,381],21:[1,380]},{21:[1,382]},{21:[1,383]},o($Vd,[2,290]),o($Vd,[2,293]),o($Vd,[2,292]),o($Vd,[2,291]),{2:[1,385],17:[1,384]},o($Va1,$Vb1,{17:[1,386]}),{2:[1,388],40:$Vc1,66:[1,387]},{17:[1,390]},{17:[1,391]},{40:$Vc1,66:[1,392]},o($Vd1,$Vb1),{17:[1,393]},{40:$Vc1,66:[1,394]},{2:[1,396],39:[1,395],40:$V51},{39:[1,397]},{39:[1,398],40:$V51},{39:[1,399],40:$V51},{2:$Vg,16:$Vh,20:400,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($Vd,[2,30]),o($Vd,[2,31]),{42:[1,401]},{42:[1,402]},{42:[1,403]},{42:[1,404]},{2:$Vx,16:[1,409],26:405,27:[1,406],28:[1,407],29:[1,408],30:$VC},o($Vd,[2,26]),o($Vd,[2,27]),{2:$Vg,16:$Vh,20:410,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($Vd,[2,28]),o($Vd,[2,29]),{21:[1,411]},o($VE,[2,282]),{40:[1,413],66:[1,412]},o($Vd1,[2,285]),{42:[1,414],59:$VQ,60:$VR,61:$VS,62:$VT,63:$VU,64:$VV},{66:[1,415]},o($VE,[2,65]),{16:[1,416]},o($VE,[2,66]),{2:$Vg,16:$Vh,20:417,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($VE,[2,72]),{2:$Vg,16:$Vh,20:418,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:$Vg,16:$Vh,20:419,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{17:[1,420],50:$VN,51:$VO},o($VP,[2,82]),o([2,17,21,39,40,42,49,51,66],[2,83],{50:$VN}),o($VP,[2,87],{59:$VQ,60:$VR,61:$VS,62:$VT,63:$VU,64:$VV}),o($VP,[2,88],{59:$VQ,60:$VR,61:$VS,62:$VT,63:$VU,64:$VV}),o($VP,[2,89],{59:$VQ,60:$VR,61:$VS,62:$VT,63:$VU,64:$VV}),o($VP,[2,90],{59:$VQ,60:$VR,61:$VS,62:$VT,63:$VU,64:$VV}),o($VP,[2,91],{59:$VQ,60:$VR,61:$VS,62:$VT,63:$VU,64:$VV}),o($VP,[2,92],{59:$VQ,60:$VR,61:$VS,62:$VT,63:$VU,64:$VV}),o($V71,[2,94],{61:$VS,62:$VT,63:$VU,64:$VV}),o($V71,[2,95],{61:$VS,62:$VT,63:$VU,64:$VV}),o($Ve1,[2,96],{63:$VU}),o($Ve1,[2,97],{63:$VU}),o($VW,[2,98]),o($Ve1,[2,99],{63:$VU}),o($VW,[2,101]),{2:$Vg,16:$Vh,20:421,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:[1,423],21:[1,422]},{21:[1,424]},{21:[1,425]},o($Vd,[2,299]),o($Vd,[2,302]),o($Vd,[2,301]),o($Vd,[2,300]),o($Vd,[2,132],{75:426,76:[1,427]}),o($Vd,[2,134]),o($Vd,[2,133]),o($Vd,[2,138]),o($Vd,[2,140]),o($Vd,[2,139]),{39:[1,428]},o($Vd,[2,143]),{2:[1,430],16:$Vr,47:90,48:429,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{17:[1,431]},o($Vd,[2,145]),{17:[1,432],50:$VN,51:$VO},{17:[1,433]},o($Vd,[2,161]),o($Vd,[2,164]),o($Vd,[2,163]),o($Vd,[2,162]),{2:[1,435],50:$VN,51:$VO,66:[1,434]},{66:[1,436]},{50:$VN,51:$VO,66:[1,437]},o($VY,[2,264]),o($VY,[2,265]),{16:$Vr,47:438,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:$Vg,16:$Vh,20:439,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:$Vg,16:[1,441],20:440,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:[1,443],16:[1,442]},{2:[1,445],16:[1,444]},{2:$Vg,16:$Vh,20:446,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:[1,447]},{16:[1,448]},{2:$Vg,16:$Vh,20:449,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:[1,450]},{16:[1,451]},{21:[1,452]},{66:[1,453]},{66:[1,454]},o($Vd,[2,256]),{2:[1,456],21:[1,455]},{21:[1,457]},o($Vf1,$VF,{24:$VG,25:$VH,41:$VI,65:$VJ,66:[1,458],70:$VK}),{2:[1,460],66:[1,459]},{66:[1,461]},{2:[1,463],66:[1,462]},{66:[1,464]},{2:[1,466],16:[1,465]},{16:[1,467]},{2:[1,469],16:[1,468]},{16:[1,470]},{16:[1,471]},{2:$Vg,16:$Vh,20:472,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:[1,473]},{16:[1,474]},{21:[1,475]},{66:[1,476]},{66:[1,477]},{16:[1,478]},{16:[1,479]},o($Vd,[2,286]),o($Vd,[2,289]),o($Vd,[2,288]),o($Vd,[2,287]),{2:$Vx,16:$Vy,18:480,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{2:$Vx,16:$Vy,18:481,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{2:$Vx,16:$Vy,18:482,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{2:[1,484],17:[1,483]},{17:[1,485]},{16:[1,486]},{2:$Vx,16:$Vy,18:487,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{2:$Vx,16:$Vy,18:488,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{17:[1,489]},{2:$Vx,16:$Vy,18:490,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{17:[1,491]},{2:[1,493],21:[1,492]},{21:[1,494]},{21:[1,495]},{21:[1,496]},{21:[1,497]},{2:[1,499],21:[1,498]},o($V$,[2,67]),o($V$,[2,68]),o($V$,[2,69]),o($V$,[2,70]),{45:[1,500]},{45:$V01},{45:$V11},{45:$V21},{45:$V41},{2:[1,502],21:[1,501]},o($Vd,[2,295]),o($VE,[2,283]),{2:$Vg,16:$Vh,20:503,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($VW,$Vg1),o($VW,[2,106]),{17:[1,504]},o($Vh1,[2,64]),o($V61,[2,73]),o($V61,[2,74]),{16:$Vr,47:90,48:505,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{2:[1,507],21:[1,506]},o($Vd,[2,294]),o($Vd,[2,298]),o($Vd,[2,297]),o($Vd,[2,296]),o($Vd,[2,131]),{8:509,37:$Vf,71:508,74:$V4},o($Vd,[2,142]),{17:[1,510],50:$VN,51:$VO},{17:[1,511]},{2:$Vt,6:116,7:117,8:118,9:119,10:120,11:121,12:122,13:124,14:125,15:$V0,16:$V1,22:$V2,23:16,36:$V3,37:$Vf,39:[2,160],71:513,72:512,73:123,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb},o($Vi1,[2,156],{23:16,6:116,7:117,8:118,9:119,10:120,11:121,12:122,73:123,13:124,14:125,72:514,71:515,2:$Vt,15:$V0,16:$V1,22:$V2,36:$V3,37:$Vf,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb}),o($Vi1,[2,157],{23:16,6:116,7:117,8:118,9:119,10:120,11:121,12:122,73:123,13:124,14:125,72:516,71:517,2:$Vt,15:$V0,16:$V1,22:$V2,36:$V3,37:$Vf,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb}),{2:[1,519],21:[1,518]},{21:[1,520]},{21:[1,521]},{21:[1,522]},{42:[1,523],59:$VQ,60:$VR,61:$VS,62:$VT,63:$VU,64:$VV},{2:[1,525],21:[1,524]},{21:[1,526]},o($Vf1,$VF,{24:$VG,25:$VH,41:$VI,65:$VJ,66:[1,527],70:$VK}),{2:[1,529],66:[1,528]},{66:[1,530]},{2:[1,532],66:[1,531]},{66:[1,533]},{21:[1,534]},{66:[1,535]},{66:[1,536]},{21:[1,537]},{66:[1,538]},{66:[1,539]},{16:$Vr,47:90,48:540,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{37:$Vf,71:541},{37:$Vf,71:542},{2:[1,544],16:$Vr,47:90,48:543,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:90,48:545,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:90,48:546,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{37:$Vf,71:547},{2:[1,549],37:$Vf,71:548},{37:$Vf,71:550},{37:$Vf,71:551},{2:[1,553],37:$Vf,71:552},{37:$Vf,71:554},{37:$Vf,71:555},{2:[1,557],66:[1,556]},{66:[1,558]},{66:[1,559]},{2:[1,561],66:[1,560]},{66:[1,562]},{66:[1,563]},{66:[1,564]},{21:[1,565]},{66:[1,566]},{66:[1,567]},{16:$Vr,47:90,48:568,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{37:$Vf,71:569},{37:$Vf,71:570},{66:[1,571]},{66:[1,572]},{2:[1,574],37:$Vf,71:573},{37:$Vf,71:575},{37:$Vf,71:576},{2:$Vx,16:$Vy,18:577,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{2:$Vx,16:$Vy,18:578,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{2:$Vx,16:$Vy,18:579,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{17:[1,580]},o($Va1,[2,280]),{37:$Vf,71:581},{2:$Vx,16:$Vy,18:582,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},{37:$Vf,71:583},{2:$Vx,16:$Vy,18:584,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},o($Vd,[2,57]),o($Vd,[2,62]),o($Vd,[2,61]),o($Vd,[2,60]),o($Vd,[2,59]),o($Vd,[2,58]),o($Vd,[2,22]),o($Vd,[2,23]),o($V$,[2,71]),o($Vd,[2,24]),o($Vd,[2,25]),o($Vd1,[2,284]),{2:$Vg,16:$Vh,20:585,32:78,33:79,34:80,35:81,37:$Vi,41:$Vj,47:90,48:86,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},o($VE,[2,80],{50:$VN,51:$VO}),o($Vd,[2,78]),o($Vd,[2,79]),o($Vd,[2,136]),o($Vd,[2,137]),o($Vi1,[2,150],{23:16,6:116,7:117,8:118,9:119,10:120,11:121,12:122,73:123,13:124,14:125,72:586,71:587,2:$Vt,15:$V0,16:$V1,22:$V2,36:$V3,37:$Vf,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb}),o($Vi1,[2,151],{23:16,6:116,7:117,8:118,9:119,10:120,11:121,12:122,73:123,13:124,14:125,72:588,71:589,2:$Vt,15:$V0,16:$V1,22:$V2,36:$V3,37:$Vf,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb}),{6:216,7:217,8:218,9:219,10:220,11:221,12:222,13:224,14:225,15:$V0,16:$V1,22:$V2,23:16,36:$V3,39:[2,158],73:223,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb},{39:[2,159]},o($Vi1,[2,152],{23:16,6:216,7:217,8:218,9:219,10:220,11:221,12:222,73:223,13:224,14:225,15:$V0,16:$V1,22:$V2,36:$V3,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb}),o($Vi1,[2,154]),o($Vi1,[2,153],{23:16,6:216,7:217,8:218,9:219,10:220,11:221,12:222,73:223,13:224,14:225,15:$V0,16:$V1,22:$V2,36:$V3,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb}),o($Vi1,[2,155]),o($Vd,[2,166]),o($Vd,[2,170]),o($Vd,[2,169]),o($Vd,[2,168]),o($Vd,[2,167]),o($V91,$Vg1,{19:$V81}),{2:[1,591],16:$Vr,47:90,48:590,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:90,48:592,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{16:$Vr,47:90,48:593,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{37:$Vf,71:594},{2:[1,596],37:$Vf,71:595},{37:$Vf,71:597},{37:$Vf,71:598},{2:[1,600],37:$Vf,71:599},{37:$Vf,71:601},{37:$Vf,71:602},{16:$Vr,47:90,48:603,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{37:$Vf,71:604},{37:$Vf,71:605},{16:$Vr,47:90,48:606,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{37:$Vf,71:607},{37:$Vf,71:608},{21:[1,609],50:$VN,51:$VO},o($Vd,[2,217]),o($Vd,[2,238]),{2:[1,611],21:[1,610],50:$VN,51:$VO},{21:[1,612]},{21:[1,613],50:$VN,51:$VO},{21:[1,614],50:$VN,51:$VO},o($Vd,[2,239]),o($Vd,[2,215]),o($Vd,[2,220]),o($Vd,[2,219]),o($Vd,[2,218]),o($Vd,[2,236]),o($Vd,[2,242]),o($Vd,[2,241]),o($Vd,[2,240]),{2:[1,616],37:$Vf,71:615},{37:$Vf,71:617},{37:$Vf,71:618},{37:$Vf,71:619},{2:[1,621],37:$Vf,71:620},{37:$Vf,71:622},{37:$Vf,71:623},{37:$Vf,71:624},{37:$Vf,71:625},{16:$Vr,47:90,48:626,52:$Vk,53:$Vl,54:89,60:$Vm,65:$Vn,67:$Vo,68:$Vp,69:$Vq},{37:$Vf,71:627},{37:$Vf,71:628},{21:[1,629],50:$VN,51:$VO},o($Vd,[2,216]),o($Vd,[2,237]),{37:$Vf,71:630},{37:$Vf,71:631},o($Vd,[2,267]),o($Vd,[2,272]),o($Vd,[2,271]),o($Vd,[2,270]),{2:[1,633],37:$Vf,71:632},{37:$Vf,71:634},{37:$Vf,71:635},{2:$Vx,16:$Vy,18:636,26:150,27:$Vz,28:$VA,29:$VB,30:$VC,31:151,43:$VD},o($Vd,[2,269]),{37:$Vf,71:637},o($Vd,[2,268]),{37:$Vf,71:638},o($Vh1,[2,63]),o($Vi1,[2,146],{23:16,6:216,7:217,8:218,9:219,10:220,11:221,12:222,73:223,13:224,14:225,15:$V0,16:$V1,22:$V2,36:$V3,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb}),o($Vi1,[2,148]),o($Vi1,[2,147],{23:16,6:216,7:217,8:218,9:219,10:220,11:221,12:222,73:223,13:224,14:225,15:$V0,16:$V1,22:$V2,36:$V3,74:$V4,77:$V5,83:$V6,84:$V7,85:$V8,88:$Vu,89:$Vv,90:$Vw,91:$V9,94:$Va,95:$Vb}),o($Vi1,[2,149]),{2:[1,640],21:[1,639],50:$VN,51:$VO},{21:[1,641]},{21:[1,642],50:$VN,51:$VO},{21:[1,643],50:$VN,51:$VO},o($Vd,[2,225]),o($Vd,[2,221]),o($Vd,[2,228]),o($Vd,[2,227]),o($Vd,[2,226]),o($Vd,[2,243]),o($Vd,[2,249]),o($Vd,[2,248]),o($Vd,[2,247]),{21:[1,644],50:$VN,51:$VO},o($Vd,[2,224]),o($Vd,[2,246]),{21:[1,645],50:$VN,51:$VO},o($Vd,[2,223]),o($Vd,[2,245]),{16:[1,646]},{2:[1,648],16:[1,647]},{16:[1,649]},{16:[1,650]},{16:[1,651]},{16:[1,652]},o($Vd,[2,229]),o($Vd,[2,235]),o($Vd,[2,234]),o($Vd,[2,233]),o($Vd,[2,232]),o($Vd,[2,250]),o($Vd,[2,255]),o($Vd,[2,254]),o($Vd,[2,253]),o($Vd,[2,231]),o($Vd,[2,252]),{21:[1,653],50:$VN,51:$VO},o($Vd,[2,222]),o($Vd,[2,244]),{16:[1,654]},o($Vd,[2,230]),o($Vd,[2,251]),o($Vd,[2,273]),o($Vd,[2,278]),o($Vd,[2,277]),o($Vd,[2,276]),o($Va1,[2,279]),o($Vd,[2,275]),o($Vd,[2,274]),{2:[1,656],16:[1,655]},{16:[1,657]},{16:[1,658]},{16:[1,659]},{16:[1,660]},{16:[1,661]},{16:[1,662]},{24:[1,663],25:[1,664]},{2:[1,666],24:[1,665],25:[1,667]},{24:[1,668],25:[1,669]},{24:[1,670],25:[1,671]},{24:[1,672],25:[1,673]},{24:[1,674],25:[1,675]},{24:[1,676],25:[1,677]},{16:[1,678]},{24:[1,679],25:[1,680]},{2:[1,682],24:[1,681],25:[1,683]},{24:[1,684],25:[1,685]},{24:[1,686],25:[1,687]},{24:[1,688],25:[1,689]},{24:[1,690],25:[1,691]},{24:[1,692],25:[1,693]},{24:[1,694],25:[1,695]},{24:[1,696],25:[1,697]},{66:[1,698]},{66:[1,699]},{2:[1,701],66:[1,700]},{66:[1,702]},{2:[1,704],66:[1,703]},{66:[1,705]},{66:[1,706]},{66:[1,707]},{66:[1,708]},{66:[1,709]},{66:[1,710]},{66:[1,711]},{66:[1,712]},{66:[1,713]},{66:[1,714]},{24:[1,715],25:[1,716]},{66:[1,717]},{66:[1,718]},{2:[1,720],66:[1,719]},{66:[1,721]},{2:[1,723],66:[1,722]},{66:[1,724]},{66:[1,725]},{66:[1,726]},{66:[1,727]},{66:[1,728]},{66:[1,729]},{66:[1,730]},{66:[1,731]},{66:[1,732]},{66:[1,733]},{66:[1,734]},{66:[1,735]},{66:[1,736]},{66:[1,737]},{37:$Vf,71:738},{37:$Vf,71:739},{2:[1,741],37:$Vf,71:740},{37:$Vf,71:742},{37:$Vf,71:743},{2:[1,745],37:$Vf,71:744},{37:$Vf,71:746},{37:$Vf,71:747},{37:$Vf,71:748},{37:$Vf,71:749},{37:$Vf,71:750},{37:$Vf,71:751},{37:$Vf,71:752},{37:$Vf,71:753},{37:$Vf,71:754},{37:$Vf,71:755},{37:$Vf,71:756},{66:[1,757]},{66:[1,758]},{37:$Vf,71:759},{37:$Vf,71:760},{2:[1,762],37:$Vf,71:761},{37:$Vf,71:763},{37:$Vf,71:764},{2:[1,766],37:$Vf,71:765},{37:$Vf,71:767},{37:$Vf,71:768},{37:$Vf,71:769},{37:$Vf,71:770},{37:$Vf,71:771},{37:$Vf,71:772},{37:$Vf,71:773},{37:$Vf,71:774},{37:$Vf,71:775},{37:$Vf,71:776},{37:$Vf,71:777},{37:$Vf,71:778},{37:$Vf,71:779},{37:$Vf,71:780},{37:$Vf,71:781},o($Vd,[2,196]),o($Vd,[2,207]),o($Vd,[2,194]),o($Vd,[2,204]),o($Vd,[2,203]),o($Vd,[2,202]),o($Vd,[2,205]),o($Vd,[2,214]),o($Vd,[2,213]),o($Vd,[2,201]),o($Vd,[2,212]),o($Vd,[2,200]),o($Vd,[2,211]),o($Vd,[2,199]),o($Vd,[2,210]),o($Vd,[2,198]),o($Vd,[2,209]),o($Vd,[2,197]),o($Vd,[2,208]),{37:$Vf,71:782},{37:$Vf,71:783},o($Vd,[2,195]),o($Vd,[2,206]),o($Vd,[2,171]),o($Vd,[2,182]),o($Vd,[2,181]),o($Vd,[2,180]),o($Vd,[2,183]),o($Vd,[2,193]),o($Vd,[2,192]),o($Vd,[2,179]),o($Vd,[2,191]),o($Vd,[2,178]),o($Vd,[2,190]),o($Vd,[2,177]),o($Vd,[2,189]),o($Vd,[2,176]),o($Vd,[2,188]),o($Vd,[2,175]),o($Vd,[2,187]),o($Vd,[2,174]),o($Vd,[2,186]),o($Vd,[2,173]),o($Vd,[2,185]),o($Vd,[2,172]),o($Vd,[2,184])],
defaultActions: {3:[2,2],27:[2,1],406:[2,42],407:[2,43],408:[2,44],409:[2,46],513:[2,159]},
parseError: function parseError (str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        var error = new Error(str);
        error.hash = hash;
        throw error;
    }
},
parse: function parse (input) {
    var self = this,
        stack = [0],
        tstack = [], // token stack
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    var args = lstack.slice.call(arguments, 1);

    //this.reductionCount = this.shiftCount = 0;

    var lexer = Object.create(this.lexer);
    var sharedState = { yy: {} };
    // copy state
    for (var k in this.yy) {
      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
        sharedState.yy[k] = this.yy[k];
      }
    }

    lexer.setInput(input, sharedState.yy);
    sharedState.yy.lexer = lexer;
    sharedState.yy.parser = this;
    if (typeof lexer.yylloc == 'undefined') {
        lexer.yylloc = {};
    }
    var yyloc = lexer.yylloc;
    lstack.push(yyloc);

    var ranges = lexer.options && lexer.options.ranges;

    if (typeof sharedState.yy.parseError === 'function') {
        this.parseError = sharedState.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }

    function popStack (n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

_token_stack:
    var lex = function () {
        var token;
        token = lexer.lex() || EOF;
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }

    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length - 1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

_handle_error:
        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {
            var error_rule_depth;
            var errStr = '';

            // Return the rule stack depth where the nearest error rule can be found.
            // Return FALSE when no error recovery rule was found.
            function locateNearestErrorRecoveryRule(state) {
                var stack_probe = stack.length - 1;
                var depth = 0;

                // try to recover from error
                for(;;) {
                    // check for error recovery rule in this state
                    if ((TERROR.toString()) in table[state]) {
                        return depth;
                    }
                    if (state === 0 || stack_probe < 2) {
                        return false; // No suitable error recovery rule available.
                    }
                    stack_probe -= 2; // popStack(1): [symbol, action]
                    state = stack[stack_probe];
                    ++depth;
                }
            }

            if (!recovering) {
                // first see if there's any chance at hitting an error recovery rule:
                error_rule_depth = locateNearestErrorRecoveryRule(state);

                // Report error
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push("'"+this.terminals_[p]+"'");
                    }
                }
                if (lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(', ') + ", got '" + (this.terminals_[symbol] || symbol)+ "'";
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == EOF ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr, {
                    text: lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: lexer.yylineno,
                    loc: yyloc,
                    expected: expected,
                    recoverable: (error_rule_depth !== false)
                });
            } else if (preErrorSymbol !== EOF) {
                error_rule_depth = locateNearestErrorRecoveryRule(state);
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol === EOF || preErrorSymbol === EOF) {
                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');
                }

                // discard current lookahead and grab another
                yyleng = lexer.yyleng;
                yytext = lexer.yytext;
                yylineno = lexer.yylineno;
                yyloc = lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            if (error_rule_depth === false) {
                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');
            }
            popStack(error_rule_depth);

            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {
            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(lexer.yytext);
                lstack.push(lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = lexer.yyleng;
                    yytext = lexer.yytext;
                    yylineno = lexer.yylineno;
                    yyloc = lexer.yylloc;
                    if (recovering > 0) {
                        recovering--;
                    }
                } else {
                    // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2:
                // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                if (ranges) {
                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];
                }
                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3:
                // accept
                return true;
        }

    }

    return true;
}};

  let valcadena = ""; 
  let resultado = "";
  let errores = new ListaErrores();
  var ids = new Array();
  var funcs = new Array();
  var trads = new Array();
/* generated by jison-lex 0.3.4 */
var lexer = (function(){
var lexer = ({

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input, yy) {
        this.yy = yy || this.yy || {};
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function(match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex () {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin (condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState () {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules () {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState (n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState (condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0: this.begin("comentarios"); 
break;
case 1: this.popState(); 
break;
case 2: 
break;
case 3: this.popState(); return 5; 
break;
case 4: this.begin("comentariomulti"); 
break;
case 5: this.popState(); 
break;
case 6:  
break;
case 7:  
break;
case 8: this.begin("tstring"); 
break;
case 9: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 67;
                                
break;
case 10: valcadena +='\n'; 
break;
case 11: valcadena +='\t'; 
break;
case 12: valcadena +='\\'; 
break;
case 13: valcadena +='\r'; 
break;
case 14: valcadena +='\"'; 
break;
case 15: valcadena += yy_.yytext; 
break;
case 16: this.begin("tstring2"); 
break;
case 17: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 67;
                                
break;
case 18: valcadena +='\n'; 
break;
case 19: valcadena +='\t'; 
break;
case 20: valcadena +='\\'; 
break;
case 21: valcadena +='\r'; 
break;
case 22: valcadena +='\"'; 
break;
case 23: valcadena += yy_.yytext; 
break;
case 24: this.begin("ttstring"); 
break;
case 25: 
                                    this.popState(); 
                                    console.log("cadena: "+valcadena); 
                                    yy_.yytext=valcadena; valcadena=""; 
                                    return 67;
                                
break;
case 26: valcadena +='\n'; 
break;
case 27: valcadena +='\t'; 
break;
case 28: valcadena +='\\'; 
break;
case 29: valcadena +='\r'; 
break;
case 30: valcadena +='\"'; 
break;
case 31: valcadena += yy_.yytext; 
break;
case 32: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_comilladoble'; 
break;
case 33: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_barrainvertida'; 
break;
case 34: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_salto'; 
break;
case 35: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_retorno'; 
break;
case 36: console.log("secuencia de escape:"+yy_.yytext);  return 'tk_tab'; 
break;
case 37: console.log("tipo de dato:"+yy_.yytext);  return 27; 
break;
case 38: console.log("tipo de dato:"+yy_.yytext);  return 28; 
break;
case 39: console.log("tipo de dato:"+yy_.yytext);  return 29; 
break;
case 40: console.log("tipo de dato:"+yy_.yytext);  return 30; 
break;
case 41: console.log("tipo de dato:"+yy_.yytext);  return 36; 
break;
case 42: console.log("inicio array:"+yy_.yytext);  return 43; 
break;
case 43: console.log("declaracion:"+yy_.yytext);  return 15; 
break;
case 44: console.log("declaracion:"+yy_.yytext);  return 22; 
break;
case 45: console.log("boolean:"+yy_.yytext);  return 53; 
break;
case 46: console.log("boolean:"+yy_.yytext);  return 53; 
break;
case 47: console.log("sentencias:"+yy_.yytext);  return 74; 
break;
case 48: console.log("sentencias:"+yy_.yytext);  return 76; 
break;
case 49: console.log("sentencias:"+yy_.yytext);  return 77; 
break;
case 50: console.log("sentencias:"+yy_.yytext);  return 81; 
break;
case 51: console.log("sentencias:"+yy_.yytext);  return 82; 
break;
case 52: console.log("sentencias:"+yy_.yytext);  return 83; 
break;
case 53: console.log("sentencias:"+yy_.yytext);  return 84; 
break;
case 54: console.log("sentencias:"+yy_.yytext);  return 85; 
break;
case 55: console.log("sentencias:"+yy_.yytext);  return 86; 
break;
case 56: console.log("sentencias:"+yy_.yytext);  return 87; 
break;
case 57: console.log("transferencia:"+yy_.yytext);  return 88; 
break;
case 58: console.log("transferencia:"+yy_.yytext);  return 89; 
break;
case 59: console.log("transferencia:"+yy_.yytext);  return 90; 
break;
case 60: console.log("funcion:"+yy_.yytext);  return 91; 
break;
case 61: console.log("funcion:"+yy_.yytext);  return 94; 
break;
case 62: console.log("funcion:"+yy_.yytext);  return 95; 
break;
case 63: console.log("funcion:"+yy_.yytext);  return 70; 
break;
case 64: console.log("funcion:"+yy_.yytext);  return 96; 
break;
case 65: console.log("funcion:"+yy_.yytext);  return 97; 
break;
case 66: console.log("arimetica:"+yy_.yytext); return 63; 
break;
case 67: console.log("arimetica:"+yy_.yytext); return 24; 
break;
case 68: console.log("arimetica:"+yy_.yytext); return 25; 
break;
case 69: console.log("arimetica:"+yy_.yytext); return 59; 
break;
case 70: console.log("arimetica:"+yy_.yytext); return 60; 
break;
case 71: console.log("arimetica:"+yy_.yytext); return 61; 
break;
case 72: console.log("arimetica:"+yy_.yytext); return 62; 
break;
case 73: console.log("arimetica:"+yy_.yytext); return 64; 
break;
case 74: console.log("relacional:"+yy_.yytext); return 55; 
break;
case 75: console.log("relacional:"+yy_.yytext); return 56; 
break;
case 76: console.log("relacional:"+yy_.yytext); return 57; 
break;
case 77: console.log("relacional:"+yy_.yytext); return 58; 
break;
case 78: console.log("relacional:"+yy_.yytext); return 45; 
break;
case 79: console.log("relacional:"+yy_.yytext); return 44; 
break;
case 80: console.log("Logica:"+yy_.yytext); return 50; 
break;
case 81: console.log("Logica:"+yy_.yytext); return 51; 
break;
case 82: console.log("Logica:"+yy_.yytext); return 52; 
break;
case 83: console.log("ternario:"+yy_.yytext); return 49; 
break;
case 84: console.log("simbolo:"+yy_.yytext); return 41; 
break;
case 85: console.log("simbolo:"+yy_.yytext); return 42; 
break;
case 86: console.log("simbolo:"+yy_.yytext); return 17; 
break;
case 87: console.log("simbolo:"+yy_.yytext); return 19; 
break;
case 88: console.log("simbolo:"+yy_.yytext); return 21; 
break;
case 89: console.log("simbolo:"+yy_.yytext); return 37; 
break;
case 90: console.log("simbolo:"+yy_.yytext); return 39; 
break;
case 91: console.log("simbolo:"+yy_.yytext); return 40; 
break;
case 92: console.log("simbolo:"+yy_.yytext); return 65; 
break;
case 93: console.log("simbolo:"+yy_.yytext); return 66; 
break;
case 94: console.log("numero decimal:"+yy_.yytext);  return 69; 
break;
case 95: console.log("numero entero:"+yy_.yytext);  return 68; 
break;
case 96:  console.log("id:"+yy_.yytext); return 16; 
break;
case 97: /*se ignoran*/ 
break;
case 98:  return 5;  
break;
case 99:  
                                    console.error("Error Lexico:"+yy_.yytext); 
                                    var error = new Error("Lexico",yy_.yytext,+yy_.yylineno+1,yy_.yylloc.last_column)
                                    errores.addError(error);
                                
break;
}
},
rules: [/^(?:\/\/)/,/^(?:[\n])/,/^(?:[^\n])/,/^(?:$)/,/^(?:\/\*)/,/^(?:\*\/)/,/^(?:.)/,/^(?:[ \t\r\n\f])/,/^(?:["])/,/^(?:["])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:['])/,/^(?:['])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:[`])/,/^(?:[`])/,/^(?:\\n)/,/^(?:\\t)/,/^(?:\\\\)/,/^(?:\\r)/,/^(?:\\")/,/^(?:.)/,/^(?:\\")/,/^(?:\\\\)/,/^(?:\\n)/,/^(?:\\r)/,/^(?:\\t)/,/^(?:string\b)/,/^(?:number\b)/,/^(?:boolean\b)/,/^(?:void\b)/,/^(?:type\b)/,/^(?:Array\b)/,/^(?:let\b)/,/^(?:const\b)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:if\b)/,/^(?:else\b)/,/^(?:switch\b)/,/^(?:case\b)/,/^(?:default\b)/,/^(?:while\b)/,/^(?:do\b)/,/^(?:for\b)/,/^(?:in\b)/,/^(?:of\b)/,/^(?:break\b)/,/^(?:continue\b)/,/^(?:return\b)/,/^(?:function\b)/,/^(?:console\.log\b)/,/^(?:graficar_ts\b)/,/^(?:\.Length\b)/,/^(?:\.Push\b)/,/^(?:\.Pop\b)/,/^(?:\*\*)/,/^(?:\+\+)/,/^(?:--)/,/^(?:\+)/,/^(?:-)/,/^(?:\*)/,/^(?:\/)/,/^(?:%)/,/^(?:>=)/,/^(?:<=)/,/^(?:==)/,/^(?:!=)/,/^(?:>)/,/^(?:<)/,/^(?:&&)/,/^(?:\|\|)/,/^(?:!)/,/^(?:\?)/,/^(?:\[)/,/^(?:\])/,/^(?::)/,/^(?:=)/,/^(?:;)/,/^(?:\{)/,/^(?:\})/,/^(?:,)/,/^(?:\()/,/^(?:\))/,/^(?:[0-9]+\.[0-9]+)/,/^(?:[0-9]+)/,/^(?:[[a-zA-ZñÑáéíóúÁÉÍÓÚ]["_"0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]*|["_"]+[0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]["_"0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]*)/,/^(?:[ \t\n\r\f])/,/^(?:$)/,/^(?:.)/],
conditions: {"ttstring":{"rules":[25,26,27,28,29,30,31],"inclusive":false},"tstring2":{"rules":[17,18,19,20,21,22,23],"inclusive":false},"tstring":{"rules":[9,10,11,12,13,14,15],"inclusive":false},"comentariomulti":{"rules":[5,6,7],"inclusive":false},"comentarios":{"rules":[1,2,3],"inclusive":false},"INITIAL":{"rules":[0,4,8,16,24,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"inclusive":true}}
});
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = analizador;
exports.Parser = analizador.Parser;
exports.parse = function () { return analizador.parse.apply(analizador, arguments); };
exports.main = function commonjsMain (args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}